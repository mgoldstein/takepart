<?php


/**
 * Implementation of hook_install().
 */
function takepart_newsletter_signup_install() {
  drupal_install_schema('takepart_newsletter_signup');
  
  $ret = array();
  db_add_index($ret, 'content_type_newsletter_campaign', 'campaign_id', array('field_newsletter_campaign_id_value'));
  
  variable_set('services_use_sessid', FALSE);
  variable_set('services_auth_module', 'services_keyauth');
  
  db_query("UPDATE blocks SET pages = '<front>\nnews\nnews/*' WHERE pages = '<front>
news*'");
  
}


/**
 * Implementation of hook_uninstall().
 */
function takepart_newsletter_signup_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('takepart_newsletter_signup');
  
  variable_del('takepart_newsletter_signup_pluris_url');
  variable_del('takepart_newsletter_signup_problem_text');
  variable_del('takepart_newsletter_signup_unsubscribe_page');
  variable_del('takepart_newsletter_signup_unsubscribe_text');
  variable_del('takepart_newsletter_signup_unsubscribe_confirmation_page');
  variable_del('takepart_newsletter_signup_unsubscribe_confirmation_text');
  variable_del('takepart_newsletter_signup_unsubscribe_problem_page');
  variable_del('takepart_newsletter_signup_unsubscribe_problem_text');
}


/**
 * Implementation of hook_schema().
 */
function takepart_newsletter_signup_schema() {
  $schema = array();
  
  $schema['tp_newsletter_signups'] = array(
    'description' => 'Stores extra list information.',
  	'fields' => array(
  	  'tns_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Table primary key',
      ),
	  'mail' => array(
	    'type' => 'varchar',
	    'length' => 60,
	    'description' => "Email address",
	  ),
	  'campaign_id' => array(
	    'type' => 'varchar',
	    'length' => 10,
	    'not null' => TRUE, 
	    'default' =>  '',
	    'description' => "Campaign ID from Pluris",
	  ),
	  'source' => array(
	    'type' => 'varchar',
	    'length' => 100,
	    'not null' => TRUE, 
	    'default' =>  " ",
	    'description' => "Source of Email",
	  ),
	  'status' => array(
	    'type' => 'varchar',
	    'length' => 1,
	    'not null' => TRUE, 
	    'default' =>  's',
	    'description' => "Status of Subscription (s or u)",
	  ),
	  'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Reference to {users}.uid",
      ),
      'subscribe_date' => array(
        'description' => 'The Unix timestamp when the email was subscribed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'unsubscribe_date' => array(
        'description' => 'The Unix timestamp when the email was unsubscribed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
    ),
    'indexes' => array(
      'mail' => array('mail'),
      'campaign_id' => array('campaign_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('tns_id'), 
  );
  return $schema;
}

/* 
 * Adding statusi and source fields to tp_newsletter_signups'
 */
function takepart_newsletter_signup_update_6001() {
  $ret = array();
  $table = 'tp_newsletter_signups';
  // Add Status
  $specs = array(
    'status' => array(
      'type' => 'varchar',
      'length' => 1,
      'not null' => TRUE, 
      'default' =>  's',
      'description' => "Status of Subscription (s or u)",
      'initial' => 's'
    ),
    'source' => array(
      'type' => 'varchar',
      'length' => 100,
      'not null' => TRUE, 
      'default' =>  " ",
      'description' => "Source of Email",
    ),
    'subscribe_date' => array(
      'description' => 'The Unix timestamp when the email was subscribed.',
      'type' => 'int',
      'not null' => TRUE,
      'default' => 0
    ),
    'unsubscribe_date' => array(
      'description' => 'The Unix timestamp when the email was unsubscribed.',
      'type' => 'int',
      'not null' => TRUE,
      'default' => 0
    )
  );
  foreach ($specs as $field=>$spec) {
  db_add_field($ret, $table, $field, $spec);
  }
  
  // now add records to the modified table for folks signed up for TP or MP mailings
  $mp_results = db_query("SELECT u.uid, u.mail FROM {users} u INNER JOIN {tp_mp_users} m ON m.uid = u.uid AND m.subscribe = 1");
  
  while($mp = db_fetch_array($mp_results)) {
    db_query("INSERT INTO {tp_newsletter_signups} (mail, campaign_id, uid, subscribe_date) VALUES ('".$mp['mail']."', 'mpemails', ".$mp['uid'].", ".time().")");  
  }
  
  $tp_results = db_query("SELECT u.uid, u.mail FROM {users} u INNER JOIN {tp_users} t ON t.uid = u.uid AND optin = 1");
  
  while($tp = db_fetch_array($tp_results)) {
    db_query("INSERT INTO {tp_newsletter_signups} (mail, campaign_id, uid, subscribe_date) VALUES ('".$tp['mail']."', 'tpnews1', ".$tp['uid'].", ".time().")");
  }
  
  
  return $ret;
}
