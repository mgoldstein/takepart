<?php
/**
 * @file
 * Install module for takepart newsletter 
 */

/**
 * Implementation of hook_schema.
 * building the tpnewsletter entity type
 */
function newsletter_campaign_schema() {
  $schema['newsletter_campaign'] = array(
    'description' => 'Encapsulate campaign newsletter data.',
    'fields' => array(
      'ncid' => array(
        'description' => 'Primary key for newsletter campaigns',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'description' => 'The main title of this campaign.',
      ),
      'header' => array(
        'type' => 'varchar',
        'length' => 125,
        'not null' => FALSE,
        'description' => 'This text will appear as the header of the block.',
      ),
      'promo_message' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'This text will appear above the email input box.',
      ),
      'campaign_id' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'Campaign Code generated from the Pluris system.',
      ),
      'thankyou_message' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Text to display in signup block after a user has successfully submitted their email.',
      ),      
      
      // add file field with entity CRUD functions
      
    ),
    'primary key' => array('ncid'),
  );

  $schema['newsletter_signups'] = array(
    'description' => 'Stores extra list information.',
  	'fields' => array(
  	  'tns_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Table primary key',
      ),
  	  'mail' => array(
  	    'type' => 'varchar',
  	    'length' => 60,
  	    'description' => "Email address",
  	  ),
  	  'campaign_id' => array(
  	    'type' => 'varchar',
  	    'length' => 10,
  	    'not null' => TRUE, 
  	    'default' =>  '',
  	    'description' => "Campaign ID from Pluris",
  	  ),
  	  'source' => array(
  	    'type' => 'varchar',
  	    'length' => 100,
  	    'not null' => TRUE, 
  	    'default' =>  " ",
  	    'description' => "Source of Email",
  	  ),
  	  'status' => array(
  	    'type' => 'varchar',
  	    'length' => 1,
  	    'not null' => TRUE, 
  	    'default' =>  's',
  	    'description' => "Status of Subscription (s or u)",
  	  ),
  	  'uid' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => "Reference to {users}.uid",
        ),
      'subscribe_date' => array(
          'description' => 'The Unix timestamp when the email was subscribed.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
      'unsubscribe_date' => array(
          'description' => 'The Unix timestamp when the email was unsubscribed.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
    ),
    'indexes' => array(
      'mail' => array('mail'),
      'campaign_id' => array('campaign_id'),
      'uid' => array('uid'),
    ),
    'primary key' => array('tns_id'), 
  );

  
  return $schema;  
}

/**
 * Implementation of hook_uninstall().
 */
function newsletter_campaign_uninstall() {
  variable_del('takepart_newsletter_signup_pluris_requester');
  variable_del('takepart_newsletter_signup_pluris_unsubscribe_url');
  variable_del('takepart_newsletter_signup_pluris_url');
  variable_del('newsletter_campaign_unsubscribe_all_campaign_code');
  variable_del('takepart_newsletter_signup_unsubscribe_problem_page');
  variable_del('takepart_newsletter_signup_unsubscribe_confirmation_page');
  variable_del('newsletter_campaign_tp_opt_in_code');
}

/**
 * Move this modules weight to be later than the takepart user customization feature.
 */
function newsletter_campaign_update_7100(&$sandbox) {
  $weight = db_select('system', 's')
              ->fields('s', array('weight'))
              ->condition('name', 'takepart_user_customizations', '=')
              ->execute()
              ->fetchField();
  
  db_update('system')
    ->fields(array('weight' => $weight +1))
    ->condition('name', 'newsletter_campaign', '=')
    ->execute();
}
