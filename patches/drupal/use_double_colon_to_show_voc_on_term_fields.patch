diff --git a/drupal/modules/taxonomy/taxonomy.module b/drupal/modules/taxonomy/taxonomy.module
index d501282..679f8f1 100644
--- a/drupal/modules/taxonomy/taxonomy.module
+++ b/drupal/modules/taxonomy/taxonomy.module
@@ -1617,6 +1617,12 @@ function taxonomy_field_widget_form(&$form, &$form_state, $field, $instance, $la
     $tags[$item['tid']] = isset($item['taxonomy_term']) ? $item['taxonomy_term'] : taxonomy_term_load($item['tid']);
   }
 
+  if (sizeof($field['settings']['allowed_values']) > 1) {
+    foreach ($tags as $tid => $tag) {
+      $tags[$tid]->name .= "::". $tag->vocabulary_machine_name;
+    }
+  }
+
   $element += array(
     '#type' => 'textfield',
     '#default_value' => taxonomy_implode_tags($tags),
@@ -1651,7 +1657,21 @@ function taxonomy_autocomplete_validate($element, &$form_state) {
     foreach ($typed_terms as $typed_term) {
       // See if the term exists in the chosen vocabulary and return the tid;
       // otherwise, create a new 'autocreate' term for insert/update.
-      if ($possibilities = taxonomy_term_load_multiple(array(), array('name' => trim($typed_term), 'vid' => array_keys($vocabularies)))) {
+      $vids = array_keys($vocabularies);
+      // Check to see if someone add a voc name to the end of a term.
+      // If so, parse it and make that the correct vocab to store.
+      if (preg_match("/(.*)::(.*)/", $typed_term, $matches)) {
+        $vocs = taxonomy_vocabulary_get_names();
+        // Allow search by name in addition to machine name
+        foreach ($vocs as $voc) {
+          $vocs[$voc->name] = $voc;
+        }
+        $typed_term = $matches[1];
+        $vid = $vocs[$matches[2]]->vid;
+        $vids = array($vid);
+      }
+
+      if ($possibilities = taxonomy_term_load_multiple(array(), array('name' => trim($typed_term), 'vid' => $vids))) {
         $term = array_pop($possibilities);
       }
       else {
