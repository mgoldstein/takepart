diff --git plugins/boxes_simple.inc b/plugins/boxes_simple.inc
index 09b95c0..5f0a525 100644
--- plugins/boxes_simple.inc
+++ plugins/boxes_simple.inc
@@ -4,6 +4,9 @@
  * Simple custom text box.
  */
 class boxes_simple extends boxes_box {
+  
+  const BOXES_EDIT_IN_PLACE = 1;
+  
   /**
    * Implementation of boxes_box::options_defaults().
    */
@@ -20,9 +23,23 @@ class boxes_simple extends boxes_box {
    * Implementation of boxes_box::options_form().
    */
   public function options_form(&$form_state) {
-    $format = filter_format_load($this->options['body']['format']);
-
-    if (filter_access($format)) {
+    $option_format = isset($this->options['body']['format']) ? $this->options['body']['format'] :
+      'plain_text';
+    $format = filter_format_load($option_format);
+    
+    // TODO: this currently breaks if you switch mode and try to edit existing simple boxes in the
+    // other mode. DO NOT USE IN PRODUCTION /!\
+    if (variable_get('boxes_edit_location',Â BOXES_EDIT_IN_PLACE) == BOXES_EDIT_IN_PLACE) {
+      $form['body'] = array(
+        '#type' => 'textarea',        
+        '#title' => t('Box body'),
+        '#default_value' => $this->options['body'],
+        '#rows' => 6,
+        '#format' => '',
+        '#description' => t('The content of the block as shown to the user.'),
+      );
+    }
+    else if (filter_access($format)) {
       $form = array();
       $form['body'] = array(
         '#type' => 'text_format',
@@ -33,8 +50,8 @@ class boxes_simple extends boxes_box {
         '#format' => $this->options['body']['format'] ? $this->options['body']['format'] : NULL,
         '#description' => t('The content of the block as shown to the user.'),
       );
-      return $form;
     }
+    return $form;
   }
 
   /**
@@ -42,9 +59,16 @@ class boxes_simple extends boxes_box {
    */
   public function render() {
     $content = '';
-    if (!empty($this->options['body']['value']) && isset($this->options['body']['format'])) {
-      $content = check_markup($this->options['body']['value'], $this->options['body']['format'], $langcode = '' /* TODO Set this variable. */, FALSE);
+
+    if (!empty($this->options['body']['value'])) {
+      if (isset($this->options['body']['format']) && !$this->options['body']['format']) {
+        $content = check_markup($this->options['body']['value'], $this->options['body']['format'], $langcode = '' /* TODO Set this variable. */, FALSE);
+      }
+      else {
+        $content = $this->options['body'];
+      }
     }
+    
     $title = isset($this->title) ? $this->title : NULL;
     return array(
       'delta' => $this->delta, // Crucial.
