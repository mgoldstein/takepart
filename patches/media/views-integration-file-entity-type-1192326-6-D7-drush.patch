From a6d4964178d89babc58ace74832ce0c06435ca03 Mon Sep 17 00:00:00 2001
From: Florian Weber <florian@webflo.org>
Date: Wed, 6 Jul 2011 00:16:01 +0200
Subject: [PATCH] Views Integration for File Entity type.

---
 file_entity/file_entity.info                       |    3 +
 file_entity/file_entity.module                     |    9 ++++
 file_entity/file_entity.views.inc                  |   29 ++++++++++++++
 .../views_handler_argument_file_entity_type.inc    |   30 +++++++++++++++
 .../views_handler_field_file_entity_type.inc       |   40 ++++++++++++++++++++
 .../views_handler_filter_file_entity_type.inc      |   16 ++++++++
 6 files changed, 127 insertions(+), 0 deletions(-)
 create mode 100644 file_entity/file_entity.views.inc
 create mode 100644 file_entity/includes/views_handler_argument_file_entity_type.inc
 create mode 100644 file_entity/includes/views_handler_field_file_entity_type.inc
 create mode 100644 file_entity/includes/views_handler_filter_file_entity_type.inc

diff --git a/file_entity/file_entity.info b/file_entity/file_entity.info
index 2d2f6b7..72a59d7 100644
--- file_entity/file_entity.info
+++ file_entity/file_entity.info
@@ -4,3 +4,6 @@ package = Media
 core = 7.x
 dependencies[] = field
 dependencies[] = ctools
+files[] = includes/views_handler_argument_file_entity_type.inc
+files[] = includes/views_handler_field_file_entity_type.inc
+files[] = includes/views_handler_filter_file_entity_type.inc
diff --git a/file_entity/file_entity.module b/file_entity/file_entity.module
index 97063ca..947098b 100644
--- file_entity/file_entity.module
+++ file_entity/file_entity.module
@@ -400,3 +400,12 @@ function file_entity_modules_enabled($modules) {
 function file_entity_modules_disabled($modules) {
   file_info_cache_clear();
 }
+
+/**
+ * Implements hook_views_api().
+ */
+function file_entity_views_api() {
+  return array(
+    'api' => 3,
+  );
+}
diff --git a/file_entity/file_entity.views.inc b/file_entity/file_entity.views.inc
new file mode 100644
index 0000000..4597795
--- /dev/null
+++ file_entity/file_entity.views.inc
@@ -0,0 +1,29 @@
+<?php
+
+/**
+ * Implements hook_views_data().
+ */
+function file_entity_views_data() {
+  $data = array();
+
+  // File entity type
+  $data['file_managed']['type'] = array(
+    'group' => 'File',
+    'title' => t('File entity type'),
+    'help' => t('The type of the file.'),
+    'field' => array(
+      'handler' => 'views_handler_field_file_entity_type',
+     ),
+    'sort' => array(
+      'handler' => 'views_handler_sort',
+    ),
+    'filter' => array(
+      'handler' => 'views_handler_filter_file_entity_type',
+    ),
+    'argument' => array(
+      'handler' => 'views_handler_argument_file_entity_type',
+    ),
+  );
+
+  return $data;
+}
diff --git a/file_entity/includes/views_handler_argument_file_entity_type.inc b/file_entity/includes/views_handler_argument_file_entity_type.inc
new file mode 100644
index 0000000..1ab09dd
--- /dev/null
+++ file_entity/includes/views_handler_argument_file_entity_type.inc
@@ -0,0 +1,30 @@
+<?php
+/**
+ * Argument handler to accept a file type.
+ */
+class views_handler_argument_file_entity_type extends views_handler_argument_string {
+
+  function file_type($type) {
+    $output = file_info_file_types($type);
+    if (empty($output)) {
+      $output['label'] = t('Unknown file type');
+    }
+    return check_plain($output['label']);
+  }
+
+  /**
+   * Override for specific title lookups.
+   */
+  function title_query() {
+    $title = array();
+    foreach($this->value as $value) {
+      $title[] = $this->file_type($value);
+    }
+    return $title;
+  }
+
+  function summary_name($data) {
+    $data->{$this->name_alias} = $this->file_type($data->{$this->name_alias});
+    return $this->case_transform(parent::summary_name($data), 'case');
+  }
+}
diff --git a/file_entity/includes/views_handler_field_file_entity_type.inc b/file_entity/includes/views_handler_field_file_entity_type.inc
new file mode 100644
index 0000000..f7fe1b7
--- /dev/null
+++ file_entity/includes/views_handler_field_file_entity_type.inc
@@ -0,0 +1,40 @@
+<?php
+
+class views_handler_field_file_entity_type extends views_handler_field {
+  function option_definition() {
+    $options = parent::option_definition();
+    $options['machine_name'] = array('default' => FALSE);
+
+    return $options;
+  }
+
+  /**
+   * Provide machine_name option for to file type display.
+   */
+  function options_form(&$form, &$form_state) {
+    parent::options_form($form, $form_state);
+    $form['machine_name'] = array(
+      '#title' => t('Output machine name'),
+      '#description' => t('Display field as the content type machine name.'),
+      '#type' => 'checkbox',
+      '#default_value' => !empty($this->options['machine_name']),
+      '#fieldset' => 'more',
+    );
+  }
+
+  /**
+    * Render file type as human readable name, unless using machine_name option.
+    */
+  function render_name($data, $values) {
+    if ($this->options['machine_name'] != 1 && $data !== NULL && $data !== '') {
+      $type = file_info_file_types($data);
+      return t($this->sanitize_value($type['label']));
+    }
+    return $this->sanitize_value($data);
+  }
+
+  function render($values) {
+    $value = $this->get_value($values);
+    return $this->render_name($value, $values);
+  }
+}
diff --git a/file_entity/includes/views_handler_filter_file_entity_type.inc b/file_entity/includes/views_handler_filter_file_entity_type.inc
new file mode 100644
index 0000000..68794f3
--- /dev/null
+++ file_entity/includes/views_handler_filter_file_entity_type.inc
@@ -0,0 +1,16 @@
+<?php
+/**
+ * Filter by file type
+ */
+class views_handler_filter_file_entity_type extends views_handler_filter_in_operator {
+  function get_value_options() {
+    if (!isset($this->value_options)) {
+      $this->value_title = t('File types');
+      $types = file_info_file_types();
+      foreach ($types as $type => $info) {
+        $options[$type] = t($info['label']);
+      }
+      $this->value_options = $options;
+    }
+  }
+}
-- 
1.7.5.2

