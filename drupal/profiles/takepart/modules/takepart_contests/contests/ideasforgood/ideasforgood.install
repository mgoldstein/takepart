<?php

/**
 * @file
 *
 */

/**
 * Implements hook_schema()
 */
function ideasforgood_schema() {

  $schema = array();

  $schema['ideasforgood_finalist'] = array(
    'description' => 'The base table for Marigold Ideas for Good contest finalists.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key identifier for the finalist',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'token' => array(
        'description' => 'The voting token for the finalist',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'voting_group' => array(
        'description' => 'The voting group to which the finalist belongs',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the finalist was created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the finalist was last modified',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'voting_group' => array('voting_group'),
    ),
  );

  $schema['ideasforgood_voting_group'] = array(
    'description' => 'The base table for Marigold Ideas for Good contest voting groups.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key identifier for the group',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the group',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'contest' => array(
        'description' => 'The name of the contest the finalists are from',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'voting_form_id' => array(
        'description' => 'The id of the BSD signup form for voting.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'email_field_id' => array(
        'description' => "The id of the BSD signup form field for the voter's email.",
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vote_field_id' => array(
        'description' => 'The id of the BSD signup form field for the vote.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'opt_in_field_id' => array(
        'description' => 'The id of the BSD signup form field for the email opt in.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the group was created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the group was last modified',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Increase the size of the group name and add a field for the contest
 * associated with a group
 */
function ideasforgood_update_7100(&$sandbox) {

  db_change_field('ideasforgood_finalist', 'voting_group', 'voting_group', array(
    'description' => 'The voting group to which the finalist belongs',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  ));

  db_change_field('ideasforgood_voting_group', 'name', 'name', array(
    'description' => 'The name of the group',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  ));

  db_add_field('ideasforgood_voting_group', 'contest', array(
    'description' => 'The name of the contest for which votes are submitted',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  ));
}

/**
 * Increase the size of the finalist token
 */
function ideasforgood_update_7101(&$sandbox) {

  db_change_field('ideasforgood_finalist', 'token', 'token', array(
    'description' => 'The voting token for the finalist',
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
  ));
}

/**
 * Implements hook_enable()
 */
function ideasforgood_enable() {

  // add the ideas for good finalist fields (if necessary)
  ideasforgood_add_finalist_image();
  ideasforgood_add_finalist_first_name();
  ideasforgood_add_finalist_last_name();
  ideasforgood_add_finalist_idea_title();
  ideasforgood_add_finalist_idea_body();

  ideasforgood_add_group_register_message();
  ideasforgood_add_group_thank_you_message();
  ideasforgood_add_group_already_voted_message();
  ideasforgood_add_group_destination();
  ideasforgood_add_group_twitter_message();
  ideasforgood_add_group_email_message();
}

/**
 * Implements hook_uninstall()
 */
function ideasforgood_uninstall() {

  // delete the ideas for good finalist fields
  field_delete_field('ideasforgood_finalist_image');
  field_delete_field('ideasforgood_finalist_first_name');
  field_delete_field('ideasforgood_finalist_last_name');
  field_delete_field('ideasforgood_finalist_idea_title');
  field_delete_field('ideasforgood_finalist_idea_body');

  field_delete_field('ideasforgood_group_register');
  field_delete_field('ideasforgood_group_thank_you');
  field_delete_field('ideasforgood_group_already_voted');
  field_delete_field('ideasforgood_group_destination');
  field_delete_field('ideasforgood_group_twitter');
  field_delete_field('ideasforgood_group_email');
}

function ideasforgood_add_field_instance($info) {
  $field = field_info_field($info['field']['field_name']);
  if (empty($field)) {
    field_create_field($info['field']);
    field_create_instance($info['instance']);
  }
}

function ideasforgood_add_finalist_image() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_finalist_image',
      'type' => 'image',
      'entity_types' => array('ideasforgood_finalist'),
      'settings' => array(
      ),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_finalist_image',
      'entity_type' => 'ideasforgood_finalist',
      'bundle' => 'ideasforgood_finalist',
      'label' => t('Image'),
      'required' => TRUE,
      'settings' => array(
        'alt_field' => TRUE,
      ),
      'widget' => array(
        'type' => 'image_image',
        'settings' => array(
          'progress_indicator' => 'bar',
          'preview_image_style' => 'thumbnail',
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(
            'image_style' => 'large',
            'image_link' => '',
          ),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_finalist_first_name() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_finalist_first_name',
      'type' => 'text',
      'entity_types' => array('ideasforgood_finalist'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_finalist_first_name',
      'entity_type' => 'ideasforgood_finalist',
      'bundle' => 'ideasforgood_finalist',
      'label' => t('First Name'),
      'required' => TRUE,
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array(
          'size' => 32,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_finalist_last_name() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_finalist_last_name',
      'type' => 'text',
      'entity_types' => array('ideasforgood_finalist'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_finalist_last_name',
      'entity_type' => 'ideasforgood_finalist',
      'bundle' => 'ideasforgood_finalist',
      'label' => t('Last Name'),
      'required' => TRUE,
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array(
          'size' => 32,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_finalist_idea_title() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_finalist_idea_title',
      'type' => 'text',
      'entity_types' => array('ideasforgood_finalist'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_finalist_idea_title',
      'entity_type' => 'ideasforgood_finalist',
      'bundle' => 'ideasforgood_finalist',
      'label' => t('Idea Title'),
      'required' => TRUE,
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array(
          'size' => 32,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_plain',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_finalist_idea_body() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_finalist_idea_body',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_finalist'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_finalist_idea_body',
      'entity_type' => 'ideasforgood_finalist',
      'bundle' => 'ideasforgood_finalist',
      'label' => t('Idea Body'),
      'settings' => array(
        'text_processing' => 1,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_register_message() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_register',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_register',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Register Message'),
      'settings' => array(
        'text_processing' => 1,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_thank_you_message() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_thank_you',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_thank_you',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Thank You Message'),
      'settings' => array(
        'text_processing' => 1,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_already_voted_message() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_already_voted',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_already_voted',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Already Voted Message'),
      'settings' => array(
        'text_processing' => 1,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_destination() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_destination',
      'type' => 'text',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_destination',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Voted Destination URL'),
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array(
          'size' => 64,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_twitter_message() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_twitter',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_twitter',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Twitter Share Message'),
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}

function ideasforgood_add_group_email_message() {
  $info = array(
    'field' => array(
      'field_name' => 'ideasforgood_group_email',
      'type' => 'text_long',
      'entity_types' => array('ideasforgood_voting_group'),
    ),
    'instance' => array(
      'field_name' => 'ideasforgood_group_email',
      'entity_type' => 'ideasforgood_voting_group',
      'bundle' => 'ideasforgood_voting_group',
      'label' => t('Email Share Message'),
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'type' => 'text_textarea',
        'settings' => array(
          'rows' => 5,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
          'settings' => array(),
        ),
      ),
    ),
  );
  ideasforgood_add_field_instance($info);
}
