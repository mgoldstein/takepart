<?php
/**
 * @file
 * This is the TakePart AddThis Blocks module.
 */


/**
 * Implement hook_permission().
 */
function takepart_addthis_permission() {
  return array(
    'administer takepart_addthis' => array(
      'title' => 'Administer AddThis sharing widget',
      'description' => 'Change which services are shown, color, etc and add addthis.com username',
    ),
  );
}

/**
 * Implement of hook_menu().
 */
function takepart_addthis_menu() {
  $items = array();

  $items['admin/config/system/takepart-addthis'] = array(
    'title'            => t('AddThis'),
    'description'      => t('Set default settings for <a href="http://www.addthis.com/">AddThis</a> button.'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('takepart_addthis_admin_settings'),
    'access arguments' => array('administer takepart_addthis'),
    'file'             => 'takepart_addthis.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_preprocess().
 *
 * Attaches a few key strings to $variables for use by the template, including a
 * string full of custom buttons and the AddThis public ID.
 */
function takepart_addthis_preprocess(&$variables, $hook) {
  $ADD_THIS_PUB_ID = variable_get('takepart_addthis_pub_id','ra-4e48103302adc2d8');
  drupal_add_js(drupal_get_path('module','takepart_addthis') . '/js/exaddthis.js', 'file');
  drupal_add_js('http://s7.addthis.com/js/250/addthis_widget.js#pubid=' . $ADD_THIS_PUB_ID, 'external');

  //<a class="addthis_button_digg">Digg this</a>

  $takepart_blogpost_custom_btns =<<<EOS
<a class="addthis_button_stumbleupon">Stumble this</a>
<a class="addthis_button_email">E-mail this</a>
EOS;
/* To add a print friendly button, you need to the following line to the $takepart_blogpost_custom_btns:
<a class="addthis_button_print">Print</a>
*/
  $variables['addthis_custom_buttons']              = $takepart_blogpost_custom_btns;
  $variables['addthis_pubid']                       = $ADD_THIS_PUB_ID;
  $variables['takepart_addthis_tweet_via']          = variable_get('takepart_addthis_tweet_via','');
  $variables['takepart_addthis_facebook_like_text'] = variable_get('takepart_addthis_facebook_like_text','like');
}

function takepart_addthis_views_api() {
  return array(
    'api' => '3.0-alpha1',
  );
}

//hook_block_info() router
function takepart_addthis_block_info(){
  $zeBlocks = array();

  takepart_addthis_footer_block_info($zeBlocks);
  takepart_addthis_full_block_info($zeBlocks);
  takepart_addthis_rightrail_block_info($zeBlocks);
  takepart_addthis_simple_block_info($zeBlocks);
  takepart_addthis_petition_block_info($zeBlocks);
  takepart_addthis_vidpop_block_info($zeBlocks);
  takepart_addthis_ajax_form_block_info($zeBlocks);

  return $zeBlocks;
}

//hook_theme() router
function takepart_addthis_theme(){
  $ret_arr = array();

  takepart_addthis_footer_theme($ret_arr);
  takepart_addthis_full_theme($ret_arr);
  takepart_addthis_rightrail_theme($ret_arr);
  takepart_addthis_simple_theme($ret_arr);
  takepart_addthis_petition_theme($ret_arr);
  takepart_addthis_vidpop_theme($ret_arr);
  takepart_addthis_ajax_form_theme($ret_arr);
  return $ret_arr;
}

//hook_block_view() router
function takepart_addthis_block_view($delta = ''){
  $ret_view = array();

  switch($delta) {
    case 'addthis_footer':
      $ret_view = takepart_addthis_footer_block_view($delta);
      break;
    case 'addthis_full':
      $ret_view = takepart_addthis_full_block_view($delta);
      break;
    case 'addthis_rightrail':
      $ret_view = takepart_addthis_rightrail_block_view($delta);
      break;
    case 'addthis_simple':
      $ret_view = takepart_addthis_simple_block_view($delta);
      break;
    case 'addthis_petition':
      $ret_view = takepart_addthis_petition_block_view($delta);
      break;
    case 'addthis_vidpop':
      $ret_view = takepart_addthis_vidpop_block_view($delta);
      break;
    case 'addthis_ajax_form':
      $ret_view = takepart_addthis_ajax_form_block_view($delta);
      break;
  }

  return $ret_view;
}

//hook_block_configure() router
function takepart_addthis_block_configure($delta = ''){
  $ret_form = array();

  switch($delta){
    case 'addthis_footer':
      $ret_form = takepart_addthis_footer_block_configure($delta);
      break;
    case 'addthis_full':
      $ret_form = takepart_addthis_full_block_configure($delta);
      break;
    case 'addthis_rightrail':
      $ret_form = takepart_addthis_rightrail_block_configure($delta);
      break;
    case 'addthis_simple':
      $ret_form = takepart_addthis_simple_block_configure($delta);
      break;
    case 'addthis_petition':
      $ret_form = takepart_addthis_petition_block_configure($delta);
      break;
    case 'addthis_vidpop':
      $ret_form = takepart_addthis_vidpop_block_configure($delta);
      break;
    case 'addthis_ajax_form':
      $ret_form = takepart_addthis_ajax_form_block_configure($delta);
      break;
  }

  return $ret_form;
}

//hook_block_save() router
function takepart_addthis_block_save($delta = '', $edits = array()){
  switch($delta){
    case 'addthis_footer':
      takepart_addthis_footer_block_save($delta, $edits);
      break;
    case 'addthis_full':
      takepart_addthis_full_block_save($delta, $edits);
      break;
    case 'addthis_rightrail':
      takepart_addthis_rightrail_block_save($delta, $edits);
      break;
    case 'addthis_simple':
      takepart_addthis_simple_block_save($delta, $edits);
      break;
    case 'addthis_petition':
      takepart_addthis_petition_block_save($delta, $edits);
      break;
    case 'addthis_vidpop':
      takepart_addthis_vidpop_block_save($delta, $edits);
      break;
    case 'addthis_ajax_form':
      takepart_addthis_ajax_form_block_save($delta, $edits);
      break;
  }
}

/******************
 * AddThis_full section
 */

function takepart_addthis_full_block_info(&$blocks){
  $blocks['addthis_full'] = array(
    'info' => t('AddThis - full'),
  );
}

function takepart_addthis_full_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_full_block'] = array(
    'variables' => array(),
    'template' => 'theme/takepart-addthis-full-block',
  );
}

function takepart_addthis_full_block_view($delta = ''){
  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_full'){
    //create the block
    $block['subject'] = t('');
    $block['content'] = theme(
      'takepart_addthis_full_block', array()
    );

    return $block;
  }
}

function takepart_addthis_full_block_configure($delta){
  $form = array();

  if($delta == 'addthis_full'){
  }

  return $form;
}

function takepart_addthis_full_block_save($delta, $edits){
  if($delta == 'addthis_full'){
  }
}

/******************
 * AddThis_rightrail section
 */

function takepart_addthis_rightrail_block_info(&$blocks){
  $blocks['addthis_rightrail'] = array(
    'info' => t('AddThis - rightrail'),
  );
}

function takepart_addthis_rightrail_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_rightrail_block'] = array(
    'variables' => array(),
    'template' => 'theme/takepart-addthis-rightrail-block',
  );
}

function takepart_addthis_rightrail_block_view($delta = ''){
  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_rightrail'){
    //create the block
    $block['subject'] = t('');
    $block['content'] = theme(
      'takepart_addthis_rightrail_block', array()
    );

    return $block;
  }
}

function takepart_addthis_rightrail_block_configure($delta){
  $form = array();

  if($delta == 'addthis_rightrail'){
  }

  return $form;
}

function takepart_addthis_rightrail_block_save($delta, $edits){
  if($delta == 'addthis_rightrail'){
  }
}

/******************
 * addthis_footer section
 */

function takepart_addthis_footer_block_info(&$blocks){
  $blocks['addthis_footer'] = array(
    'info' => t('AddThis - footer'),
  );
}

function takepart_addthis_footer_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_footer_block'] = array(
    'variables' => array(),
    'template' => 'theme/takepart-addthis-footer-block',
  );
}

function takepart_addthis_footer_block_view($delta = ''){
  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_footer'){
    //create the block
    $block['subject'] = t('');
    $block['content'] = theme(
      'takepart_addthis_footer_block', array()
    );

    return $block;
  }
}

function takepart_addthis_footer_block_configure($delta){
  $form = array();

  if($delta == 'addthis_footer'){
  }

  return $form;
}

function takepart_addthis_footer_block_save($delta, $edits){
  if($delta == 'addthis_footer'){
  }
}

/******************
 * addthis_top section
 */

function takepart_addthis_simple_block_info(&$blocks){
  $blocks['addthis_simple'] = array(
    'info' => t('AddThis - Share FB and Tweet'),
  );
}

function takepart_addthis_simple_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_simple_block'] = array(
    'variables' => array(),
    'template' => 'theme/takepart-addthis-simple-block',
  );
}

function takepart_addthis_simple_block_view($delta = ''){
  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_simple'){
    //create the block
    $block['subject'] = t('');
    $block['content'] = theme(
      'takepart_addthis_simple_block', array()
    );

    return $block;
  }
}

function takepart_addthis_simple_block_configure($delta){
  $form = array();

  if($delta == 'addthis_simple'){
  }

  return $form;
}

function takepart_addthis_simple_block_save($delta, $edits){
  if($delta == 'addthis_simple'){
  }
}

/******************
 * addthis_vidpop section
 */

function takepart_addthis_vidpop_block_info(&$blocks){
  $blocks['addthis_vidpop'] = array(
    'info' => t('AddThis - Embedded Video Popup'),
  );
}

function takepart_addthis_vidpop_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_vidpop_block'] = array(
    'variables' => array(),
    'template' => 'theme/takepart-addthis-vidpop-block',
  );
}

function takepart_addthis_vidpop_block_view($delta = ''){
  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_vidpop'){
    //create the block
    $block['subject'] = t('');
    $block['content'] = theme(
      'takepart_addthis_vidpop_block', array()
    );

    return $block;
  }
}

function takepart_addthis_vidpop_block_configure($delta){
  $form = array();

  if($delta == 'addthis_vidpop'){
  }

  return $form;
}

function takepart_addthis_vidpop_block_save($delta, $edits){
  if($delta == 'addthis_vidpop'){
  }
}

/******************
 * addthis_petition section
 */

function takepart_addthis_petition_block_info(&$blocks){
  $blocks['addthis_petition'] = array(
    'info' => t('AddThis - petition'),
  );
}

function takepart_addthis_petition_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_petition_block'] = array(
    'variables' => array(
      'ui_email_note' => '',
      'ui_email_from' => '',
      'twitter_template' => '',
    ),
    'template' => 'theme/takepart-addthis-petition-block',
  );
}

function takepart_addthis_petition_block_view($delta = ''){
  $block = array();

  if($delta == 'addthis_petition'){

    drupal_add_css(
      drupal_get_path('module', 'takepart_addthis')
        . '/css/takepart-addthis-petition-block.css',
      array('group' => CSS_DEFAULT, 'type' => 'file')
    );

    drupal_add_js(
      drupal_get_path('module', 'takepart_addthis')
        . '/js/takepart-addthis-petition-block.js',
      array('group' => JS_DEFAULT, 'type' => 'file')
    );

    $block['subject'] = t('');
    $block['content'] = theme('takepart_addthis_petition_block', array());
  }
  return $block;
}

function takepart_addthis_petition_block_configure($delta){
  $form = array();
  if($delta == 'addthis_petition'){
  }
  return $form;
}

function takepart_addthis_petition_block_save($delta, $edits){
  if($delta == 'addthis_petition'){
  }
}

/******************
 * addthis_ajax_form section
 */

function takepart_addthis_ajax_form_block_info(&$blocks){
  $blocks['addthis_ajax_form'] = array(
    'info' => t('AddThis - Petition Thank You'),
  );
}

function takepart_addthis_ajax_form_theme(&$theme_funcs){
  $theme_funcs['takepart_addthis_ajax_form_block'] = array(
    'variables' => array(
      'ui_email_note' => '',
      'ui_email_from' => '',
      'twitter_template' => '',
      'thank_you_message' => '',
    ),
    'template' => 'theme/takepart-addthis-ajax-form-block',
  );
}

function takepart_addthis_ajax_form_block_view($delta = ''){

  $block = array();

  //there is only one delta here, switch anyway
  if($delta == 'addthis_ajax_form'){

    // add the cookie library for the tracking event latch
    drupal_add_library('system', 'jquery.cookie');

    drupal_add_js(
      drupal_get_path('module', 'takepart_addthis')
        . '/js/takepart-addthis-petition-block.js',
      array('group' => JS_DEFAULT, 'type' => 'file')
    );

    drupal_add_js(
      drupal_get_path('module', 'takepart_addthis')
        . '/js/takepart-petition-metrics.js',
      array('group' => JS_DEFAULT, 'type' => 'file')
    );

    // get the signature from the url
    $id = isset($_GET['signature']) ? $_GET['signature'] : '';
    if ($id !== '' && (!is_numeric($id) || intval($id) != $id || $id < 0)) { $id = ''; }
    if (!empty($id)) { $signature = petition_signature_load($id); }
    if (!empty($signature)) {

      $petition = petition_load($signature->petition_id);
      $email_share_msg_var = "petition:{$petition->type}:{$petition->petition_id}:email_share_msg";
      $twitter_share_msg_var = "petition:{$petition->type}:{$petition->petition_id}:twitter_share_msg";
      $share_url_var = "petition:{$petition->type}:{$petition->petition_id}:share_url";

      // TODO: Remove this when generic petitions have been implemented
      $newsletters = array();
      $lang = $signature->language;
      if (isset($signature->field_wbor_newsletter_opt_in)) {
        $opt_in = $signature->field_wbor_newsletter_opt_in[$lang][0]['value'];
        if (! empty($opt_in)) {
          $newsletters[] = 'Last Call at the Oasis';
        }
      }

      $settings = array(
        'sharing' => array(
          'email' => isset($_COOKIE['petition_signed_as']) ? $_COOKIE['petition_signed_as'] : '',
          'email_msg' =>  variable_get($email_share_msg_var, ''),
          'twitter_msg' => variable_get($twitter_share_msg_var, ''),
        ),
        'petition' => array(
          'name' => $petition->name,
          'track_latch' => $petition->type . '_track',
          'newsletters' => $newsletters,
        ),
      );
      $share_url = variable_get($share_url_var, '');
      if (! empty($share_url)) {
        $settings['sharing']['share_url'] = $share_url;
      }
      drupal_add_js($settings, 'setting');
    }

    $thank_you_message  = "<p>Your signature has been added to the petition, and our movement is one person stronger!</p>";
    $thank_you_message .= "<p>Every signature matters - share yours with people you know who also care about progress. Ask your friends, family, coworkers, and neighbors to join our campaign.</p>";
    $thank_you_message .= "<p>You can share the petition on Facebook or Twitter, or send an email using the form below.</p>";

    $block['subject'] = t('');
    $block['content'] = theme('takepart_addthis_ajax_form_block', array(
      'thank_you_message' => $thank_you_message,s
    ));
  }
  return $block;
}

function takepart_addthis_ajax_form_block_configure($delta){
  $form = array();
  if($delta == 'addthis_ajax_form'){
  }
  return $form;
}

function takepart_addthis_ajax_form_block_save($delta, $edits){
  if($delta == 'addthis_ajax_form'){
  }
}

/**
 * Implements hook_field_info()
 */
function takepart_addthis_field_info() {
  return array(
    'share_bar' => array(
      'label' => t('Share Bar'),
      'description' => t('Share button bar for Facebook, Twitter and email'),
      'instance_settings' => array(),
      'default_widget' => 'addthis_config',
      'default_formatter' => 'button_bar',
    ),
  );
}

/**
 * Implements hook_field_is_empty()
 */
function takepart_addthis_field_is_empty($item, $field) {
  return (empty($item['twitter_message']) || empty($item['email_message'])); 
}

/**
 * Implements hook_field_validate()
 */
function takepart_addthis_field_validate($entity_type, $entity, $field, $instance,
  $langcode, $items, &$errors) {

  foreach ($items as $delta => $item) {
    if (!empty($item['alternate_url']) && !valid_url($item['alternate_url'])) {
      $errors[$field['field_name']][$langcode][$delta][] = array(
        'error' => 'invalid_alternate_url',
        'message' => t('Alternate URL is not valid.'),
      );
    }
  }
}

/**
 * Implements hook_field_widget_error()
 */
function takepart_addthis_field_widget_error($element, $error, $form, &$form_state) {
  if ($error['error'] == 'invalid_alternate_url') {
    form_error($element, $error['message']);
  }
}

/**
 * Implements hook_field_formatter_info()
 */
function takepart_addthis_field_formatter_info() {
  return array(
    'button_bar' => array(
      'label' => t('Button Bar'),
      'field types' => array('share_bar'),
      'settings' => array(
        'orientation' => 'horizontal',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form()
 */
function takepart_addthis_field_formatter_settings_form($field, $instance, $view_mode,
  $form, &$form_state) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  return array(
    'orientation' => array(
      '#type' => 'select',
      '#title' => t('Orientation'),
      '#default_value' => $settings['orientation'],
      '#options' => array(
        'horizontal' => t('Horizontal'),
        'vertical' => t('Vertical'),
      ),
      '#description' => t('The layout orientation of the share bar.'),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_summary()
 */
function takepart_addthis_field_formatter_settings_summary($field, $instance,
  $view_mode) {

  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  return "Orientation: {$settings['orientation']}";
}

/**
 * Implements hook_field_formatter_view()
 */
function takepart_addthis_field_formatter_view($entity_type, $entity, $field, $instance,
  $langcode, $items, $display) {

  $settings = $display['settings'];
  $name = str_replace('_', '-', $field['field_name']);
  $configs = array();
  
  $fb_src = drupal_get_path('module', 'takepart_addthis')
    . '/images/fb_share.png';
  $tw_src = drupal_get_path('module', 'takepart_addthis')
    . '/images/twitter_share.png';
  $em_src = drupal_get_path('module', 'takepart_addthis')
    . '/images/email_share.png';

  $elements = array();
  foreach ($items as $delta => $item) {

    $id = "share-bar-{$name}-{$delta}";

    // transfer the AddThis configurations to JavaScript settings
    $configs[$id] = array(
      'alternate_url' => $item['alternate_url'],
      'twitter_message' => $item['twitter_message'],
      'email_message' => $item['email_message'],
    );

    // build the share bar
    $orientation_class = $settings['orientation'] == 'vertical'
      ? 'share-bar-vertical' : 'share-bar-horizontal';

    $elements[$delta] = array(
      '#type' => 'container',
      '#attributes' => array(
        'class' => array('share-bar-field', $orientation_class, ),
        'id' => $id,
      ),
      'toolbox' => array(
        '#type' => 'container',
        '#attributes' => array(
          'class' => array('addthis_toolbox','addthis_default_style', 
            'addthis_32x32_style'
          ),
        ),
        'facebook' => array(
          '#type' => 'markup',
          '#prefix' => '<a class="addthis_button_facebook">',
          '#markup' => '<img src="/' . $fb_src . '" alt="Share on Facebook" />',
          '#suffix' => '</a>',
        ),
        'twitter' => array(
          '#type' => 'markup',
          '#prefix' => '<a class="addthis_button_twitter">',
          '#markup' => '<img src="/' . $tw_src . '" alt="Share on Twitter" />',
          '#suffix' => '</a>',
        ),
        'email' => array(
          '#type' => 'markup',
          '#prefix' => '<a class="addthis_button_email">',
          '#markup' => '<img src="/' . $em_src . '" alt="Share by Email" />',
          '#suffix' => '</a>',
        ),
      )
    );
  }
  drupal_add_js(array('addthis' => array('fields' => $configs)),
    array('type' => 'setting'));
  $js_path = drupal_get_path('module', 'takepart_addthis')
    . '/js/share-bar-field.js';
  drupal_add_js($js_path, array('type' => 'file'));

  return $elements;
}

/**
 * Implements hook_field_widget_info()
 */
function takepart_addthis_field_widget_info() {
  return array(
    'addthis_config' => array(
      'label' => t('Share Configuration'),
      'field types' => array('share_bar'),
    ),
  );
}

/**
 * Implements hook_field_widget_form()
 */
function takepart_addthis_field_widget_form(&$form, &$form_state, $field, $instance,
  $langcode, $items, $delta, $element) {

  $alternate_url = isset($items[$delta]['alternate_url'])
    ? $items[$delta]['alternate_url'] : '';
  $twitter_message = isset($items[$delta]['twitter_message'])
    ? $items[$delta]['twitter_message'] : '';
  $email_message = isset($items[$delta]['email_message'])
    ? $items[$delta]['email_message'] : '';

  $element['alternate_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Alternate URL'),
    '#description' => t('An alternate URL to share, rather than the current page. %note.', array(
      '%note' => t('This must be a FULL URL'),
    )),
    '#default_value' => $alternate_url,
  );

  $element['twitter_message'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter Message'),
    '#description' => t('The default message to use when sharing this page through Twitter. The following AddThis tokens may be used: %url - shortened URL, %lurl - full length URL, %title - title of page.', array('%url' => '{{url}}', '%lurl' => '{{lurl}}', '%title' => '{{title}}')),
    '#default_value' => $twitter_message,
    '#required' => TRUE,
  );

  $element['email_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Email Message'),
    '#description' => t('The default message to use when sharing this page through email.'),
    '#default_value' => $email_message,
    '#required' => TRUE,
  );

  $element['facebook_note'] = array(
    '#type' => 'markup',
    '#prefix' => '<strong>',
    '#suffix' => '</strong>',
    '#markup' => t('Facebook sharing is configured at the page leve through the Open Graph meta tags'),
  );

  return $element;
}
