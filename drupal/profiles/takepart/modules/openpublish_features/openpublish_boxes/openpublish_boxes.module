<?php

/**
 * Implementation of hook_menu()
 */
function openpublish_boxes_menu() {
  $items['openpublish_boxes/autocomplete/node'] = array(
    'title' => 'Node Autocomplete',
    'access arguments' => TRUE,
    'page callback' => 'openpublish_boxes_node_autocomplete',
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function openpublish_boxes_ctools_plugin_api($module, $api) {
  if ($module == 'boxes' && $api == 'plugins') {
    return array('version' => 1);
  }
}

/**
 * Implements hook_boxes_plugins().
 */
function openpublish_boxes_boxes_plugins() {
  $info = array();
  $path = drupal_get_path('module', 'openpublish_boxes') . '/plugins';
  $info['features'] = array(
    'title' => 'Features Box',
    'handler' => array(
      'parent' => 'box',
      'class' => 'boxes_features',
      'file' => 'boxes_features.inc',
      'path' => $path,
    ),
  );
  $info['image'] = array(
    'title' => 'Image Box',
    'handler' => array(
      'parent' => 'box',
      'class' => 'boxes_image',
      'file' => 'boxes_image.inc',
      'path' => $path,
    ),
  );
  return $info;
}

/**
 * Autocomplete callback for all published nodes
 */
function openpublish_boxes_node_autocomplete($string = '') {
  $matches = array();
  if ($string) {
    $query = db_select('node', 'n');
    $query->addField('n', 'nid');
    $query->addField('n', 'title', 'node_title');
    $query->condition('status', 1);
    $query->condition('n.title', '%' . $string . '%', 'LIKE');

    $result = $query->execute();
    $data = array();
    foreach ($result->fetchAll() as $node) {
      $title = check_plain($node->node_title);
      /*
      if (strlen($title) > 30) {
        $title = node_teaser(check_plain($node->node_title), NULL, 30) . '...';
      }*/
      $title .= ' [nid:' . $node->nid . ']';
      $matches[$title] = $title;
    }
  }
  drupal_json_output($matches);
}

