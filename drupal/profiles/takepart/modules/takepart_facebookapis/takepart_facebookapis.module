<?php

include("includes/facebook_graphi.inc");


/**
 * Implements hook_form_alter().
 */
function takepart_facebookapis_form_alter(&$form, $form_state, $form_id) {

  if(variable_get('fblogin_state', '1') != '1') {
    return;
  }
  
  if(($form_id == 'user_login') && (variable_get('fblogin_backdoor_url', 'backdoor') == current_path()))  {
    if(isset($form['#validate'])) {
      array_unshift($form['#validate'], "_takepart_facebookapis_login_form_validate");
    } else {
      $form['#validate'] = "_takepart_facebookapis_login_form_validate";
    }
  }
  
  if(($form_id == 'user_login') && (variable_get('fblogin_backdoor_url', 'backdoor') != current_path()) && (variable_get('fblogin_state', 'No') != 'No')) {
    
    $form = array();

    drupal_set_title(t(variable_get('fblogin_page_title', 'Login')));
    
    $form['fblogin'] = array(
        '#type' => 'item',
        '#title' => t(' '),
        '#markup' => "<div id=\"fbloginbox\"><p id=\"fblogin_textoverbutton\">" . variable_get('fblogin_textoverbutton', 'If you have a <strong>Facebook Account</strong>') . "</p><div id=\"fb_buttonwrapper\">" . _takepart_facebookapis_getfblogin() . "</div></div>",
      );
    
  }
  
}



function _takepart_facebookapis_getfblogin($dest = null) {
  
  if(($dest == null) && (isset($_GET['destination']))) {
    $dest = $_GET['destination'];
  }
  
  if(variable_get('fblogin_method', 0) != 0) {
    //nuclear option:
    return $block_rendered = fboauth_action_display('connect');
  }
  
  if(variable_get('fbregistration_path', '/user/register') != "/" . $dest) {
    $dest = urlencode($dest);
    $regpath = 'http://' . $_SERVER['HTTP_HOST'] . (variable_get('fbregistration_path', '/user/register') . "?fbreg=true&destination=" . $dest);
    $authpath = 'http://' . $_SERVER['HTTP_HOST'] . ('/tpfboauth/connect?destination=' . $dest);
  } else {
    $regpath = 'http://' . $_SERVER['HTTP_HOST'] . (variable_get('fbregistration_path', '/user/register?fbreg=true'));
    $authpath = 'http://' . $_SERVER['HTTP_HOST'] . ('/tpfboauth/connect');
  }

  $fblogintag = variable_get('fblogin_login_tag_html_a', '<fb:login-button data-scope="email,user_checkins,user_birthday" fb_register="true" fb_only="false">Log In</fb:login-button>');

  //$fblogintag = str_replace('<fb:login-button', '<fb:login-button onlogin="takepart_facebookapi_check_login_session()"  redirect_uri="' . $authpath . '" registration-url="' . $regpath . '"', $fblogintag);

  if(variable_get('fblogin_method_regredir', 0) == 0) {
    $fblogintag = str_replace('<fb:login-button', '<fb:login-button onlogin="takepart_facebookapi_check_login_session()" registration-url="' . $regpath . '"', $fblogintag);
  } else {
    $fblogintag = str_replace('<fb:login-button', '<fb:login-button onlogin="takepart_facebookapi_check_login_session()"', $fblogintag);
  }
  
  drupal_add_js('function takepart_facebookapi_check_login_session() {
        path = \'' . $authpath . '\';
        window.location = path;
      }',
      array('type' => 'inline', 'scope' => 'header', 'weight' => 5)
  );
  return $fblogintag;
}

function _takepart_facebookapis_clearcache() {
  header('Expires: Thu, 01-Jan-70 00:00:01 GMT');
  header('Last-Modified: ' . gmdate( 'D, d M Y H:i:s' ) . ' GMT' );
  header('Cache-Control: no-store, no-cache, must-revalidate' );
  header('Cache-Control: post-check=0, pre-check=0', false );
  header('Pragma: no-cache' );
}

function _takepart_facebookapis_auth($action) {
  
  _takepart_facebookapis_clearcache();
  
  $action_name = $action['name'];
  $app_id = variable_get('fboauth_id', '');
  $app_secret = variable_get('fboauth_secret', '');
  $cookie = _takepart_facebookapis_get_facebook_cookie($app_id, $app_secret);
  if (isset($cookie['access_token'])) {
    
    if(fboauth_uid_load($cookie['user_id']) != null) {
      
      if(variable_get('fblogin_method_regredir', 0) != 0) {
        $uid = fboauth_uid_load($cookie['uid']);
        if(!$uid) {
          if(isset($_GET['destination'])) {
            $redir = (variable_get('fbregistration_path', '/user/register') . "?destination=" . $_GET['destination']);
          } else {
            $redir = (variable_get('fbregistration_path', '/user/register'));
          }
          header("Location: $redir");
          die();
        }
      }
      
      
      if (isset($_SESSION['facebook'])) {
        unset($_SESSION['facebook']);
      }
   
      $destination = fboauth_action_invoke($action_name, $app_id, $cookie['access_token']);
                 
      if (empty($destination)) {
        $destination = isset($_REQUEST['destination']) ? $_REQUEST['destination'] : '<front>';
      }
      drupal_goto($destination);
    } else { 
      
      
      if(isset($_GET['destination']) && (variable_get('fbregistration_path', '/user/register') != "/" . $_GET['destination'])) {
        $redir = (variable_get('fbregistration_path', '/user/register') . "?destination=" . $_GET['destination']);
      } else {
        $redir = (variable_get('fbregistration_path', '/user/register'));
      }
      
      header("Location: $redir");
      die();
      
    }
  } else {
    drupal_set_message( t('There was an issue communicating with facebook.'), 'error' );
    watchdog('takepart_facebookapis', 'no access token', $cookie);
    $destination = isset($_REQUEST['destination']) ? $_REQUEST['destination'] : '<front>';
    drupal_goto($destination);
  }
}

/**
* Implements hook_rdf_namespaces().
*/
function takepart_facebookapis_rdf_namespaces() {
  return array(
    'fb' => 'http://www.facebook.com/2008/fbml',
  );
}


/**
 *  Checks for extra permissions:
 */
function _takepart_facebookapis_login_form_validate($form, &$form_state) {
  if(isset($form_state['values']['name'])) {
    $role = db_query("SELECT r.name AS role FROM {users_roles} AS ur
        LEFT JOIN {role} AS r ON r.rid = ur.rid
        LEFT JOIN {users} AS us ON us.uid = ur.uid
        WHERE us.name=:n
        LIMIT 1",array(':n'=>$form_state['values']['name']))->fetchField();
    if (empty($role)) {
      form_set_error('name', t('%name is not a valid login.', array('%name' => $form_state['values']['name'])));
    }
  } else {
    form_set_error('name', t('Could not retrieve user.'));
  }
}


/**
 * Implement hook_menu().
 */
function takepart_facebookapis_menu() {
  $items = array();
  $items['admin/config/people/takepartfb'] = array(
      'title' => 'TakePart Specific Facebook Configurations',
      'description' => 'Configure settings for Facebook as they apply to the TakePart site.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('takepart_facebookapis_form'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/takepart_facebookapis.admin.inc',
  );
  $items[variable_get('fblogin_backdoor_url', 'backdoor')] = array(
      'title' => 'Drupal Login',
      'page callback' => '_takepart_facebookapis_backdoor',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['facebook/channel'] = array(
      'title' => 'Channel File',
      'page callback' => '_takepart_facebookapis_channelfile',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['tpfboauth/%fboauth_action'] = array(
      'title' => 'Facebook connect',
      'page callback' => '_takepart_facebookapis_auth',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  return $items;
}


function _takepart_facebookapis_channelfile() {
 $cache_expire = 60*60*24*365;
 header("Pragma: public");
 header("Cache-Control: max-age=".$cache_expire);
 header('Expires: ' . gmdate('D, d M Y H:i:s', time()+$cache_expire) . ' GMT');
 echo '<script src="//connect.facebook.net/en_US/all.js"></script>';
 exit();
}


//Menu callback for test page:
function _takepart_facebookapis_backdoor() {
  $form = drupal_get_form('user_login');
  return drupal_render($form);
}


/**
 * Implement hook_requirements().
 */
// facebook 
//facebook connect
//facebook user mgmt
//Facebook Apps
//	Facebook API

function takepart_facebookapis_requirements($phase) {
  $requirements = array();
  if ($phase == 'install') {
    if (module_exists('fb')) {
      $requirements['takepart_facebookapis'] = array(
          'title' => $t('TakePart Facebook Site-wide Integration'),
          'value' => $t('This module is not known to be compatible with Drupal for Facebook.'),
          'severity' => REQUIREMENT_ERROR,
      );
    }
    if (module_exists('takepart_facebook')) {
      $requirements['takepart_facebookapis'] = array(
          'title' => $t('TakePart Facebook Site-wide Integration'),
          'value' => $t('This module is not known to be compatible with TakePart Facebook.'),
          'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}



/**
 * Implements hook_page_alter().
 */
function takepart_facebookapis_page_alter(&$page) {
    $channel_uri = preg_replace("@'@msi", "\'", "http://" . $_SERVER['HTTP_HOST'] . "/facebook_channel");
    $page['page_bottom']['fb-init-code'] = array(
      '#type' => 'markup',
      '#markup' => '<div id="fb-root"></div>
        <script type="text/javascript">
        window.fbAsyncInit = function() {
          FB.init({
            appId      : \'' . variable_get('fboauth_id', '') . '\', // App ID
            channelUrl : \'//' . $_SERVER['HTTP_HOST']  . '/facebook/channel\', // Channel File
            status     : true, // check login status
            cookie     : true, // enable cookies to allow the server to access the session
            xfbml      : true  // parse XFBML
          });
          // Additional initialization code here
        };
        (function(d){
          var js, id = \'facebook-jssdk\'; if (d.getElementById(id)) {return;}
          js = d.createElement(\'script\'); js.id = id; js.async = true;
          js.src = "//connect.facebook.net/en_US/all.js";
          d.getElementsByTagName(\'head\')[0].appendChild(js);
        }(document));
      </script>'
    );
}




/**
 * Implements hook_init().
 */
function takepart_facebookapis_init() { 
  if ((isset($_GET['fb'])) && ($_GET['fb']=="logout")) {
    $app_id = variable_get('fboauth_id', '');
    setcookie('fbsr_' . $app_id,'',time()-3600);
  }
}


/**
 * Implements hook_omniture_variables().
 */
function takepart_facebookapis_omniture_variables() {
  
    $return = array();
    $linkTrackEvents = "";
    //page hit:
    if((variable_get('facebookapi_on_init', '')) != '') {
      drupal_add_js(variable_get('facebookapi_on_init', ''), array('type' => 'inline', 'scope' => 'header', 'weight' => 5));
    }
    //login:
    if (isset($_SESSION['facebook_register_user_login'])) {
      unset($_SESSION['facebook_register_user_login']);
      if((variable_get('facebookapi_on_login', '')) != '') {
        drupal_add_js(variable_get('facebookapi_on_login', ''), array('type' => 'inline', 'scope' => 'header', 'weight' => 5));
      }
    }
    //logout:
    if ((isset($_GET['fb'])) && ($_GET['fb']=="logout")) {
      if((variable_get('facebookapi_on_logout', '')) != '') {
        drupal_add_js(variable_get('facebookapi_on_logout', ''), array('type' => 'inline', 'scope' => 'header', 'weight' => 5));
      }
    }
    //email signup:
    if (isset($_SESSION['facebook_bsd_trigger'])) {
      unset($_SESSION['facebook_bsd_trigger']);
      if((variable_get('facebookapi_on_bsd_signup', '')) != '') {
        drupal_add_js(variable_get('facebookapi_on_bsd_signup', ''), array('type' => 'inline', 'scope' => 'header', 'weight' => 5));
      }
      if($linkTrackEvents = "") {
        $linkTrackEvents = 'event39';
      } else {
        $linkTrackEvents = $linkTrackEvents . ',event39';
      }
      $return = $return + (array('s.linkTrackEvents'=>$linkTrackEvents,'s.events'=>'event39', 's.eVar23'=>'TakePart Newsletter'));
    }
    //register:
    if (isset($_SESSION['facebook_register_trigger'])) {
      unset($_SESSION['facebook_register_trigger']);
      if((variable_get('facebookapi_on_register', '')) != '') {
        drupal_add_js(variable_get('facebookapi_on_register', ''), array('type' => 'inline', 'scope' => 'header', 'weight' => 5));
      }
      _takepart_facebookapis_clearcache();
      if($linkTrackEvents = "") {
        $linkTrackEvents = 'event21';
      } else {
        $linkTrackEvents = $linkTrackEvents . ',event21';
      }
      $return = $return + (array('s.linkTrackEvents'=>$linkTrackEvents,'s.events'=>'event21'));
    }
    return array("variables" => $return);
}

/**
 * Implements hook_user_login().
 */
function takepart_facebookapis_user_login(&$edit, $account) {
  $_SESSION['facebook_register_user_login'] = true;
}

/**
 * Implements hook_user_logout().
 */
function takepart_facebookapis_user_logout($account) {
  $query = &drupal_static(__FUNCTION__);
  $query = array('query'=>array('fb'=>'logout'));
}

/**
 * Implements hook_drupal_goto_alter().
 */
function takepart_facebookapis_drupal_goto_alter(&$path, &$options, &$http_response_code) {
  $query = &drupal_static('takepart_facebookapis_user_logout');
  if (!$path && $query) {
    drupal_goto('<front>', $query);
  }
}


function _takepart_facebookapis_get_user_session() {
  if (!isset($_SESSION['facebook'])) {
    $app_id = variable_get('fboauth_id', '');
    $app_secret = variable_get('fboauth_secret', '');
    $cookie = _takepart_facebookapis_get_facebook_cookie($app_id, $app_secret);
    if (isset($cookie['access_token'])) {
      $result = fboauth_graph_query('/me', $cookie['access_token']);
      $_SESSION['facebook'] = $result;
      return $result;
    } else {
      return array();
    }
  } else {
    return $_SESSION['facebook'];
  }
}