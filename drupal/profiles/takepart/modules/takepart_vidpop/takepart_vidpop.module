<?php

// contant: default ad id for vidpop
define('TAKEPART_VIDPOP_DEFAULT_AD_ID', 'TP3_ROS_Leaderboard_728x90');



/***
 * implementation of hook_init()
 */
function takepart_vidpop_init() {
  $path = drupal_get_path('module', 'takepart');
  drupal_add_css($path . '/modules/takepart_vidpop/css/takepart_vidpop.css', array('every_page' => TRUE));
  drupal_add_js($path . '/modules/takepart_vidpop/js/takepart_vidpop.js', 'file');
}


/**
 * Implement hook_theme().
 *
 * This one is used as the base to reduce errors when updating.
 */
function takepart_vidpop_theme() {
  $template_path = drupal_get_path('module', 'takepart') . '/modules/takepart_vidpop/theme';

  return array(
    'node__video_embed' => array(
      'path'      => $template_path,
      'template'  => 'node--video-embed',
      'variables' => array('node' => NULL),
    ),
    'vidpop_popup' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-popup',
      'variables' => array('node' => NULL),
    ),
  );
}



function takepart_vidpop_preprocess_vidpop_popup(&$vars) {
  if (isset($vars['field_promo_headline'])) {
    // save values for ad click js
    drupal_add_js(array('takepart_vidpop'=> array('embeddedvideotitle' => $vars['field_promo_headline'][0]['value'])),'setting');
  };
}


function takepart_vidpop_preprocess_page(&$vars) {
  // save values for ad click js
  if (isset($vars['node'])) {
    drupal_add_js(array('takepart_vidpop'=> array('hostpagetitle' => $vars['node']->title)),'setting');
  };
}


function takepart_vidpop_preprocess_node(&$vars, $hook) {
  // See if this is the Rollins map page - be sure to test for correct node id
  $rollins_nid = 27693;
  if ($vars['node']->nid  == $rollins_nid) {
    // load the map popups
    takepart_vidpop_process_map_popups($vars['node']->body['und'][0]['value']);
  }
}


/**
 * Implements hook_menu().
 */
function takepart_vidpop_menu() {
  $items['admin/config/media/vidpop/settings'] = array(
    'title' => 'Videop popup settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('takepart_vidpop_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'takepart_vidpop.admin.inc',
  );
  $items['vidpop/mapembed/%'] = array(
    'title' => 'Videop map callback',
    'page callback' => 'takepart_vidpop_get_map_video',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/***
 * format image to look like a youtube video preview
 *
 * @param $uri    uri of image
 * @param $vars   variables from node preprocessing
 *                $vars['field_video_embedded'] contains the embedded video
 *
 * uses image style tp_embed_video_thumb to create a 420x315 image
 *
 */
function takepart_vidpop_format_preview($uri, $vars) {
  $vidpop_path = drupal_get_path('module', 'takepart') . '/modules/takepart_vidpop';

  // this is the preview image to click on
  $preview_image = theme('image_style', array('style_name' => 'tp_embed_video_thumb', 'path' => $uri));
  // this is a mask on top of the overlay, with top/bottom bars and arrow button
  $overlay_image = theme('image', array('path' => $vidpop_path . '/css/images/youtube-overlay.png', 'attributes' => array('rel' => '#details', 'class' => 'vidpop-trigger')));

  $promo_headline = $vars['field_promo_headline'][0]['safe_value'];
  $promo_text = $vars['field_promo_text'][0]['safe_value'];

  // theme the popup contents
  $formatted_popup = theme('vidpop_popup', $vars);

  // this is the href string for colorbox
  $vidpop_id = 'vidpop-details-' . $vars['nid'];
  $href_string = '?width=870&amp;height=520&amp;inline=true#' . $vidpop_id;

  // NOTE: we set the colorbox width to 870; it has padding that will pull it out
  // to our desired 900
  $formatted = <<<EOT
<div class="vidpop-embed-promo-headline">$promo_headline999</div>
<div class="vidpop-preview">$preview_image
  <a class="colorbox-inline" href="$href_string"><div class="vidpop-preview-overlay">$overlay_image
  <div class="vidpop-preview-overlay-text">
    <div class="line1"><span class="watch">WATCH</span>$promo_headline</div>
    <div class="line2">$promo_text</div>
  </div>
  </div></a>
</div>
<div class="vidpop-embed-promo-text">
$promo_text999
</div>

<div class="vidpop-overlay">
  <div id="$vidpop_id">$formatted_popup</div>
</div>
EOT;

  return $formatted;
}


/***
 * @returns formatted banner
 */
function takepart_vidpop_get_banner() {
  // have we called the ad emitter?
  $js = drupal_add_js();
  $have_ads = false;
  foreach ($js as $key => $val) {
    if (strpos($key, 'google_service.js')> 0) {
      // we have it
      $have_ads = true;
      break;
    }
  }

  // get id of ad to use
  $ad_id = variable_get('takepart_vidpop_ad_id', TAKEPART_VIDPOP_DEFAULT_AD_ID);
  if (!$have_ads) {
    // no other ads on the page, so we need to output some javascript
    $header1 = 'GS_googleAddAdSenseService("' . variable_get('takepart_ads_dfp_property_code', '') . '");
GS_googleEnableAllServices();';
    $header2 = 'GA_googleFetchAds();';

    drupal_add_js('http://partner.googleadservices.com/gampad/google_service.js', 'external');
    drupal_add_js($header1, 'inline');
    drupal_add_js($header2, 'inline');
  }

  //register the slot
  $ad_html = 'GA_googleAddSlot("' . variable_get('takepart_ads_dfp_property_code', '') . '", "' . $ad_id . '");';
  drupal_add_js($ad_html, 'inline');
  $banner = <<<HTM
<script type='text/javascript'>
  GA_googleFillSlot('$ad_id');
</script>
HTM;


  return $banner;
}


/***
 * get the social links
 */
function takepart_vidpop_get_social_links() {
  $block = block_load('takepart_addthis', 'addthis_vidpop');
  $social_links =  render(_block_get_renderable_array( _block_render_blocks( array($block) )));

  return $social_links;
}


/***
 * ajax callback to embed video in a map
 *
 * arg is the nid
 *
 * url is /vidpop/mapembed/NID
 */
function takepart_vidpop_get_map_video() {
  $nid = arg(2);
  $node = node_load($nid);
  $output = 'error reading node';
  if ($node) {
    //$build = node_view($node, 'vidpop_popup');
    $build = node_view($node, 'full');
    $build['#theme'] = 'vidpop_popup';
    $rendered = render($build);

    // format like a colorbox
    $id = 'vidpop-details-' . $nid;
    $output = <<<EOT
<div class="vidpop-overlay">
  <div id="$id">
    $rendered
  </div>
</div>
EOT;
  }

  print $output;
  drupal_exit();
}


/***
 * function: preload popups for map page
 *
 * @param $text body text, containing embedded javascript
 */
function takepart_vidpop_process_map_popups($text) {
  $data = explode("\n", $text);
  foreach ($data as $junk => $line) {
    if (preg_match("/^.+addresses\[\d+\]\=\[(\d+)\,/", $line, $res)) {
      $node_id = $res[1];
      $node = node_load($node_id);
      if ($node) {
        //$build = node_view($node, 'full');
        //$build['#theme'] = 'vidpop_popup';
        //$rendered = render($build);

        $vnode = node_view(node_load($node_id),'vidpop_map');
        $template_file = drupal_get_path('module', 'takepart_vidpop') . '/theme/vidpop-popup.tpl.php';
        $content = array(
          'field_video_embedded' => $vnode['field_video_embedded'],
          'field_promo_headline' => $vnode['field_promo_headline'],
          'field_promo_text'     => $vnode['field_promo_text']
        );
        $classes= "vidpop-popup";

        //$rendered = theme_render_template($template_file, $node);
        ob_start();                                   // Start output buffering
        include DRUPAL_ROOT . '/' . $template_file;   // Include the template file
        $rendered = ob_get_clean();                        // End buffering and return its contents

        // format like a colorbox
        $id = 'vidpop-details-' . $node_id;
        $output = <<<EOT
<div class="vidpop-overlay">
  <div id="$id">
    $rendered
  </div>
</div>
EOT;

        print $output;
      }
    }
  }
}


/**
 * Implements hook_entity_info_alter().
 */
function takepart_vidpop_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['vidpop_map'] = array(
    'label' => t('Video popup for map page'),
    'custom settings' => TRUE,
  );
}

