<?php

// constant: default ad id for vidpop
define('TAKEPART_VIDPOP_DEFAULT_AD_ID', 'TP3_ROS_Leaderboard_728x90');


/**
 * Implements hook_menu().
 */
function takepart_vidpop_menu() {
  $items['admin/config/media/vidpop/settings'] = array(
    'title' => 'Video popup settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('takepart_vidpop_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'takepart_vidpop.admin.inc',
  );
  $items['vidpop/mapembed/%'] = array(
    'title' => 'Video map callback',
    'page callback' => 'takepart_vidpop_get_map_video',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['vidpop/map_details/%'] = array(
    'title' => 'Video map callback to get details',
    'page callback' => 'takepart_vidpop_get_map_details',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['vidpop/map_details_mobile/%'] = array(
    'title' => 'Video map callback to get details (mobile version)',
    'page callback' => 'takepart_vidpop_get_map_details_mobile',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['vidpop/mobile-video/%'] = array(
    'title' => 'Video map callback to display mobile page',
    'page callback' => 'takepart_vidpop_mobile_video_page_from_node',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implement hook_theme().
 *
 * This one is used as the base to reduce errors when updating.
 */
function  takepart_vidpop_theme() {
  $template_path = drupal_get_path('module', 'takepart') . '/modules/takepart_vidpop/theme';

  return array(
    'node__video_embed' => array(
      'path'      => $template_path,
      'template'  => 'node--video-embed',
      'variables' => array('node' => NULL),
    ),
    'vidpop_preview' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-preview',
      'variables' => array('preview_image' => NULL, 'p_overlay_image' => NULL, 'p_promo_headline' => NULL, 'p_promo_text' => NULL, 'link_class' => NULL, 'href_string' => NULL, 'vp_class' => NULL),
    ),
    'vidpop_preview_mobile' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-preview-mobile',
      'variables' => array('p_youtube_id' => NULL, 'p_overlay_image' => NULL, 'p_promo_headline' => NULL, 'p_promo_text' => NULL, 'link_class' => NULL, 'href_string' => NULL, 'vp_class' => NULL),
    ),
    'vidpop_popup' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-popup',
      'variables' => array('p_content' => NULL),
    ),
    'vidpop_popup_mobile' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-popup-mobile',
      'variables' => array('p_content' => NULL),
    ),
    'vidpop_mobile_video_page' => array(
      'path'      => $template_path,
      'template'  => 'vidpop-mobile-video-page',
      'variables' => array('p_video_nid' => NULL, 'p_video_title' => NULL, 'p_video_text' => NULL, 'p_youtube_id' => NULL, 'p_referrer' => NULL),
    ),
  );
}


// NOTE: these next two allow us to have a page template override that
//       is in our module directory; see http://www.metachunk.com/blog/adding-module-path-drupal-7-theme-registry

/**
 * Implements hook_theme_registry_alter()
 **/
function takepart_vidpop_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'takepart_vidpop');
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'pow', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('page');
  foreach ($hooks as $h) {
    _takepart_vidpop_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
}

/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
 */
function _takepart_vidpop_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}


/***
 * implementation of hook_init()
 */
function takepart_vidpop_init() {
  $path = drupal_get_path('module', 'takepart');
  drupal_add_css($path . '/modules/takepart_vidpop/css/takepart_vidpop.css', array('every_page' => TRUE));
  drupal_add_js($path . '/modules/takepart_vidpop/js/takepart_vidpop.js', 'file');
  $GLOBALS['has_vidpop'] = false;
  $GLOBALS['vidpop_nobanner'] = false;
  $GLOBALS['vidpop_textlink'] = false;
}


function takepart_vidpop_preprocess_vidpop_popup(&$vars) {
}


/***
 * @param $vars
 *
 * Implementation of hook_preprocess_page
 */
function takepart_vidpop_preprocess_page(&$vars) {
  // save values for ad click js
  if (isset($vars['node'])) {
    drupal_add_js(array('takepart_vidpop'=> array('hostpagetitle' => $vars['node']->title)),'setting');
  }
}


/***
 * @param $vars
 *
 * Implementation of hook_preprocess_html
 */
function takepart_vidpop_preprocess_html(&$vars) {
  if (variable_get('takepart_vidpop_banners_enabled', false)) {
    $vars['classes_array'][] = "vidpop-banners-enabled";
  }
  else {
    $vars['classes_array'][] = "vidpop-banners-disabled";
  }

  if ($GLOBALS['has_vidpop']) {
    $vars['classes_array'][] = "has-video-popup";
  }
  if (!$GLOBALS['vidpop_nobanner']) {
    $vars['classes_array'][] = "has-video-popup-banner";
  }
}


/***
 * Implementation of hook_js_alter()
 *
 * @param $javascript
 */
function takepart_vidpop_js_alter(&$javascript) {
  // we need to use only the final version of embeddedvideotitle, but it may have
  // been added more than once
  $remove_entries = array();
  $data_index = 0;
  foreach ($javascript['settings']['data'] as $idx => $data) {
    if (isset($data['takepart_vidpop']['embeddedvideotitle'])) {
      $remove_entries[] = $idx;
      $data_index++;
    }
  }

  if ($data_index > 1) {
    // remove all but last entry
    for ($i = ($data_index - 2); $i >= 0; $i--) {
      $n = $remove_entries[$i];
      unset($javascript['settings']['data'][$n]);
    }
  }


  // do the same for embeddedvideotype
  $remove_entries = array();
  $data_index = 0;
  foreach ($javascript['settings']['data'] as $idx => $data) {
    if (isset($data['takepart_vidpop']['embeddedvideotype'])) {
      $remove_entries[] = $idx;
      $data_index++;
    }
  }

  if ($data_index > 1) {
    // remove all but last entry
    for ($i = ($data_index - 2); $i >= 0; $i--) {
      $n = $remove_entries[$i];
      unset($javascript['settings']['data'][$n]);
    }
  }
}


function takepart_vidpop_preprocess_node(&$vars, $hook) {
  if ($vars['node']->type == 'openpublish_video') {
    if (isset($vars['field_promo_headline'])) {
      $js_index = $vars['node']->nid;
      //static $js_index = 0;
      static $save_embeddedvideotitle = array();
      static $save_embeddedvideotype = array();

      // save values for ad click js
      $embeddedvideotitle = $save_embeddedvideotitle;
      $embeddedvideotitle[$js_index] = $vars['field_promo_headline'][0]['value'];
      $save_embeddedvideotitle = $embeddedvideotitle;
      drupal_add_js(array('takepart_vidpop' => array('embeddedvideotitle' => $embeddedvideotitle)), 'setting');

      $embeddedvideotype = $save_embeddedvideotype;
      $embeddedvideotype[$js_index] = $vars['node']->type;
      $save_embeddedvideotype = $embeddedvideotype;
      drupal_add_js(array('takepart_vidpop' => array('embeddedvideotype' => $embeddedvideotype)), 'setting');

      $js_index++;
    };
  }

  if (true) {
  //if (!takepart_vidpop_mobile_browser()) {
      // we are on a non-mobile device; load hidden popups
    //
    if (strstr($vars['node']->body['und'][0]['value'], 'VIDPOP=YES')) {
      // load the map popups
      takepart_vidpop_process_map_popups($vars['node']->body['und'][0]['value'], $vars);
    }
  }
}

/***
 * format image to look like a youtube video preview
 *
 * @param $uri    uri of image
 * @param $vars   variables from node preprocessing
 *                $vars['field_video_embedded'] contains the embedded video
 *
 * uses image style tp_embed_video_thumb to create a 420x315 image
 *
 */
function takepart_vidpop_format_preview($uri, $vars) {
  $vidpop_path = drupal_get_path('module', 'takepart') . '/modules/takepart_vidpop';

  // this is the preview image to click on
  if (isset($vars['field_thumbnail']['und'][0])) {
    $preview_image = theme('image_style', array('style_name' => 'tp_embed_video_thumb', 'path' => $vars['field_thumbnail']['und'][0]['file']->uri));
  }
  else {
    $preview_image = theme('image_style', array('style_name' => 'tp_embed_video_thumb', 'path' => $uri));
  }
  // this is a mask on top of the overlay, with top/bottom bars and arrow button
  //$overlay_image = theme('image', array('path' => $vidpop_path . '/css/images/youtube-overlay.png', 'attributes' => array('rel' => '#details', 'class' => 'vidpop-trigger')));

  $promo_headline = $vars['field_promo_headline'][0]['safe_value'];
  if (isset($vars['field_promo_text'][0])) {
    $promo_text = $vars['field_promo_text'][0]['safe_value'];
  }
  else {
    // sometimes it isn't set
    $promo_text = $vars['node']->title;
  }
  // theme the popup contents
  $overlay_image = theme('image', array('path' => $vidpop_path . '/css/images/youtube-overlay.png'));

  // id of the video popup division
  $vidpop_id = 'vidpop-details-' . $vars['nid'];
  $vp_class = 'vp-' . $vars['nid'];

  if ((takepart_vidpop_mobile_browser()) && (!takepart_vidpop_is_ipad())) {
    // mobile version
    // get the id of the embedded video
    $uri = $vars['field_video_embedded'][0]['file']->uri;
    $u2 = explode('/', $uri);
    $youtube_id = $u2[3];

    if (false) {
      // this version replicates the details of the popups
      $href_string = '/vidpop/mobile-video/' . $vars['node']->nid;
      $link_class = "vidpop-mobile-preview";

      $formatted = theme('vidpop_preview_mobile', array(
        'p_youtube_id'    => $youtube_id,
        'overlay_image'   => $overlay_image,
        'promo_headline'  => $promo_headline,
        'promo_text'      => $promo_text,
        'link_class'      => $link_class,
        'href_string'     => $href_string,
        'vp_class'        => $vp_class,
      ));
    }

    if (variable_get('takepart_log_requests', false)) {
      watchdog('takepart_browsercaps', 'vidpop_format_preview (mobile) ' . $promo_text);
    }

    if (true) {
      // this version shows just the video, no popup data
      $formatted = <<<EOT
      <div class="video-only">
        <iframe width="480" height="360" src="http://www.youtube.com/embed/$youtube_id?rel=0" frameborder="0" allowfullscreen></iframe>
      </div>
EOT;

    }
  }
  else {
    // desktop, preview needed
    // regular browser, use popup
    // this is the href string for colorbox
    $href_string = '?width=870&amp;height=420&amp;inline=true#' . $vidpop_id;
    $link_class = "colorbox-inline";

    // NOTE: we set the colorbox width to 870; it has padding that will pull it out
    // to our desired 900
    $formatted = theme('vidpop_preview', array(
      'preview_image'   => $preview_image,
      'overlay_image'   => $overlay_image,
      'promo_headline'  => $promo_headline,
      'promo_text'      => $promo_text,
      'link_class'      => $link_class,
      'href_string'     => $href_string,
      'vp_class'        => $vp_class,
    ));

    // the formatted popup image
    $formatted_popup = theme('vidpop_popup', array(
      'p_content' => $vars['content']
    ));

    if (variable_get('takepart_log_requests', false)) {
      watchdog('takepart_browsercaps', 'vidpop_format_preview (desktop) ' . $promo_text);
    }

    // add hidden popups if on non-mobile
    $formatted .= <<<EOT
<div class="vidpop-overlay">
  <div id="$vidpop_id">$formatted_popup</div>
</div>
EOT;
  }

  return $formatted;
}


/***
 * @returns formatted banner
 */
function takepart_vidpop_get_banner() {
  // have we called the ad emitter?
  $js = drupal_add_js();
  $have_ads = false;
  foreach ($js as $key => $val) {
    if (strpos($key, 'google_service.js')> 0) {
      // we have it
      $have_ads = true;
      break;
    }
  }
  //watchdog('vidmap', 'getting banner, have_ads=' . intval($have_ads));
    // get id of ad to use
  $ad_id = variable_get('takepart_vidpop_ad_id', TAKEPART_VIDPOP_DEFAULT_AD_ID);
  if (!$have_ads) {
    //watchdog('vidmap', 'adding gs');
      // no other ads on the page, so we need to output some javascript
    $header1 = 'GS_googleAddAdSenseService("' . variable_get('takepart_ads_dfp_property_code', '') . '");
GS_googleEnableAllServices();';
    $header2 = 'GA_googleFetchAds();';

    drupal_add_js('http://partner.googleadservices.com/gampad/google_service.js', 'external');
    drupal_add_js($header1, 'inline');
    drupal_add_js($header2, 'inline');
  }

  //register the slot
  //watchdog('vidmap', 'registering ' . $ad_id);
  $ad_html = 'GA_googleAddSlot("' . variable_get('takepart_ads_dfp_property_code', '') . '", "' . $ad_id . '");';
  //watchdog('vidmap', 'ad_html: ' . $ad_html);
  drupal_add_js($ad_html, 'inline');
  $banner = <<<HTM
<script type='text/javascript'>
  GA_googleFillSlot('$ad_id');
</script>
HTM;

  //watchdog('vidmap', 'banner: ' . strlen($banner));

  return $banner;
}


/***
 * get the social links
 */
function takepart_vidpop_get_social_links() {
  $block = block_load('takepart_addthis', 'addthis_vidpop');
  $social_links =  render(_block_get_renderable_array( _block_render_blocks( array($block) )));

  return $social_links;
}


/***
 * ajax callback to embed video in a map
 *
 * arg is the nid
 *
 * url is /vidpop/mapembed/NID
 */
function takepart_vidpop_get_map_video() {
  $nid = arg(2);
  $node = node_load($nid);
  $output = 'error reading node';
  if ($node) {
    //$build = node_view($node, 'vidpop_popup');
    $build = node_view($node, 'full');
    $build['#theme'] = 'vidpop_popup';
    $rendered = render($build);

    // format like a colorbox
    $id = 'vidpop-details-' . $nid;
    $output = <<<EOT
<div class="vidpop-overlay">
  <div id="$id">
    $rendered
  </div>
</div>
EOT;
  }

  print $output;
  drupal_exit();
}


/***
 * ajax callback to get map details
 *
 * arg is the nid
 *
 * url is /vidpop/mapembed/NID
 *
 * @returns rendered video for display
 */
function takepart_vidpop_get_map_details() {
  $nid = arg(2);
  $node = node_load($nid);
  if (variable_get('takepart_log_requests', false)) {
    watchdog('takepart_browsercaps', 'video map  details ' . $nid . ': ' . $node->title);
  }

  if ($node) {
    $vnode = node_view($node);

    // old way - this creates a non-embedded player, which is pretty much obsolete
    //$output = drupal_render($vnode['field_video_embedded']);

    // create embedded player
    // get the id of the embedded video
    $uri = $vnode['field_video_embedded'][0]['file']['#uri'];
    $u2 = explode('/', $uri);
    $youtube_id = $u2[3];
    $output = '<iframe width="640" height="360" src="http://www.youtube.com/embed/' . $youtube_id . '?hl=en&fs=1&showinfo=1" frameborder="0" allowfullscreen></iframe>';

  }
  else {
    $output = __FUNCTION__ . ': could not load nid ' . $nid;
  }

  print $output;
  drupal_exit();
}


/***
 * ajax callback to get map details, mobile version
 *
 * arg is the nid
 *
 * url is /vidpop/mapembed/NID
 *
 * @returns rendered video for display
 */
function takepart_vidpop_get_map_details_mobile() {
  $nid = arg(2);
  $node = node_load($nid);
  if ($node) {
    $vnode = node_view($node);
    $output = drupal_render($vnode['field_video_embedded']);
  }
  else {
    $output = __FUNCTION__ . ': could not load nid ' . $nid;
  }

  print $output;
  drupal_exit();
}


/***
 * function: preload popups for map page
 *
 * @param $text body text, containing embedded javascript
 * @param $vars variable data
 */
function takepart_vidpop_process_map_popups($text, $vars) {
  $data = explode("\n", $text);
  foreach ($data as $junk => $line) {
    if (preg_match("/^.*addresses\[\d+\]\=\[(\d+)\,/", $line, $res)) {
      $node_id = $res[1];
      $node = node_load($node_id);
      if ($node) {
        $vnode = node_view(node_load($node_id),'vidpop_map');
        $template_file = drupal_get_path('module', 'takepart_vidpop') . '/theme/vidpop-popup-map.tpl.php';
        $content = array(
          'field_video_embedded' => $vnode['field_video_embedded'],
          'field_promo_headline' => $vnode['field_promo_headline'],
          'field_promo_text'     => $vnode['field_promo_text']
        );
        $classes= "vidpop-popup";
        $attributes = drupal_attributes($vars['attributes_array']);

        //$rendered = theme_render_template($template_file, $node);
        ob_start();                                   // Start output buffering
        include DRUPAL_ROOT . '/' . $template_file;   // Include the template file
        $rendered = ob_get_clean();                        // End buffering and return its contents

        // format like a colorbox
        $id = 'vidpop-details-' . $node_id;
        if (takepart_vidpop_mobile_browser()) {
          $class = "map-mobile";
        }
        else {
          $class = "map-standard";
        }
        $output = <<<EOT
<div class="vidpop-overlay">
  <div id="$id" class="$class">
    $rendered
  </div>
</div>
EOT;

        print $output;
      }
    }
  }
}


/**
 * Implements hook_entity_info_alter().
 */
function takepart_vidpop_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['vidpop_map'] = array(
    'label' => t('Video popup for map page'),
    'custom settings' => TRUE,
  );
}


/***
 * function: returns "loading video" graphic as html
 *
 */
function takepart_vidpop_loading_graphic() {
  return '<div class="vidpop-loader"></div>';
}


/***
 * ajax callback to display video node page, mobile version
 * includes details from desktop video popup
 *
 * arg is the nid
 *
 * url is /vidpop/mobile_video_page_from_node/NID
 *
 * @returns rendered video for display
 */
function takepart_vidpop_mobile_video_page_from_node() {
  $nid = arg(2);
  $node = node_load($nid);
  $GLOBALS['vidpop_textlink'] = true;

  if (variable_get('takepart_log_requests', false)) {
    watchdog('takepart_browsercaps', 'video page from node ' . $nid . ': ' . $node->title);
  }

  $modpath = drupal_get_path('module', 'takepart');
  drupal_add_css($modpath . '/modules/takepart_vidpop/css/takepart_vidpop_mobile.css', array('every_page' => TRUE));

  drupal_set_title("Takepart video: " . $node->title);

  $file = file_load($node->field_video_embedded['und'][0]['fid']);
  $uri = 0;
  $u2 = explode('/', $file->uri);
  $youtube_id = $u2[3];

  $text = field_view_field('node', $node, 'field_promo_text');
  $text['#label_display'] = 'hidden';
  $rendered_text = render($text);

  $formatted_page = theme('vidpop_mobile_video_page', array(
    'p_video_nid'   => $nid,
    'p_video_title' => $node->title,
    'p_video_text'  => $rendered_text,
    'p_youtube_id'  => $youtube_id,
    'p_referrer'    => $_SERVER['HTTP_REFERER']

  ));

  return array('#markup' => $formatted_page);
}


