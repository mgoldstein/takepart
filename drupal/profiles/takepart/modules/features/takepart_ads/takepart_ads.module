<?php
/**
 * @file
 * TakePart ads module.
 */

/**
 * Include the tag object functions.
 */
require_once __DIR__ . '/takepart_ads.tag.inc';

/**
 * Implements hook_menu().
 */
function takepart_ads_menu() {

  // Top level admin item.
  return array(
    'admin/config/system/ads' => array(
      'title' => 'Doubleclick Ad Support',
      'description' => 'Manage ad settings and tags',
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('access administration pages'),
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
    ),
    'admin/config/system/ads/settings' => array(
      'title' => 'Settings',
      'description' => 'Manage ad settings',
      'weight' => -10,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('takepart_ads_settings_form'),
      'access arguments' => array('access administration pages'),
      'file' => 'takepart_ads.admin.inc',
    ),
    'admin/config/system/ads/tags' => array(
      'title' => 'Tags',
      'description' => 'Manage ad tags',
      'page callback' => 'takepart_ads_tag_listing_page',
      'access arguments' => array('access administration pages'),
      'file' => 'takepart_ads.admin.inc',
    ),
    'admin/config/system/ads/tags/list' => array(
      'title' => 'List',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
    ),
    'admin/config/system/ads/tags/add' => array(
      'title' => 'Add tag',
      'description' => 'Add a new tag',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('takepart_ads_tag_form', NULL),
      'type' => MENU_LOCAL_ACTION,
      'access arguments' => array('access administration pages'),
      'file' => 'takepart_ads.admin.inc',
    ),
    'admin/config/system/ads/tags/manage/%takepart_ads_tag' => array(
      'title callback' => 'takepart_ads_tag_page_title',
      'title arguments' => array(6),
      'description' => 'Edit a tag',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('takepart_ads_tag_form', 6),
      'access arguments' => array('access administration pages'),
      'file' => 'takepart_ads.admin.inc',
    ),
    'admin/config/system/ads/tags/manage/%takepart_ads_tag/edit' => array(
      'title' => 'Edit',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    ),
    'admin/config/system/ads/tags/manage/%takepart_ads_tag/delete' => array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('takepart_ads_tag_delete_form', 6),
      'access arguments' => array('access administration pages'),
      'file' => 'takepart_ads.admin.inc',
    ),
  );
}

/**
 * Ad tag placeholder loader.
 */
function takepart_ads_tag_load($name) {
  return takepart_ads_load_tag($name);
}

function takepart_ads_tag_url($name) {
  $urls = &drupal_static(__FUNCTION__, array());
  if (!isset($urls[$name])) {
    $tag = takepart_ads_load_tag($name);
    $urls[$name] = is_null($tag) ? NULL : $tag->url;
  }
  return $urls[$name];
}

function _custom_targeting_overrides($stringwithkeyvalue) {
    foreach ($pairs_array as $key => $value) {
    }
}

function takepart_ads_preprocess_page(&$vars) {
    if (function_exists('wordlet_active_page')) {
        $wordlet_page = wordlet_active_page();
        if ($wordlet_page !== FALSE) {
            if ($wordlet_page['suppress_ad_block']) {
                return;
            }
        }
    }

    $ad_slots = takepart_ads();
    $gptad_slots = takepart_gpt_ads();

    $ad_html = '';
    $gptad_html = '';

    foreach ($ad_slots as $ad) {
        $gptad = '';
        foreach ($gptad_slots as $gptads) {
            //GPT:
            if (isset($gptads[$ad])) {
                $gptad = $gptads[$ad];
                break;
            }
        }
        if (!empty($gptad)) {

            $path = drupal_get_path('module', 'takepart_ads');
            drupal_add_js($path . '/js/check_ad_calls.js');

            //GPT:
            $adsize = '';
            preg_match('/[0-9]+x[0-9]+/', $ad, $adsize);
            $lr = explode("x", $adsize[0]);
            $gptad_html .= 'if (ad_call_check('.$lr[0].')) { ';
            
            if ($ad === "TP_Mobile_Interstitial_1x1") {
                $gptad_html .= 'if (window.innerWidth < 768) { ';
                $gptad_html .= 'googletag.defineSlot(\'/' . variable_get('takepart_ads_dfp_property_code_gpt', '4355895')
                      . '/' . $ad . '\', [' . $lr[0] . ', ' . $lr[1] . '], \'' . $gptad . '\').addService(googletag.pubads());' . "\n";
                $gptad_html .= 'googletag.defineOutOfPageSlot(\'/' . variable_get('takepart_ads_dfp_property_code_gpt', '4355895')
                      . '/' . $ad . '\', \'' . $gptad . '-oop\').addService(googletag.pubads());' . "\n}\n";
            }
            else if ($ad === "TP_Mobile_320x50") {
              /*
              $gptad_html .= 'googletag.defineSlot(\'/' . variable_get('takepart_ads_dfp_property_code_gpt', '4355895')
                      . '/' . $ad . '\', [[300, 50], [320, 50]], \'' . $gptad . '\').addService(googletag.pubads());' . "\n";
              */
            } else {
            $gptad_html .= 'googletag.defineSlot(\'/' . variable_get('takepart_ads_dfp_property_code_gpt', '4355895')
                      . '/' . $ad . '\', [' . $lr[0] . ', ' . $lr[1] . '], \'' . $gptad . '\').addService(googletag.pubads());' . "\n";
            }
            $gptad_html .= '}'."\n";
        } else {
            //GAM:
            $ad_html .= 'GA_googleAddSlot("' . variable_get('takepart_ads_dfp_property_code', '') . '", "' . $ad . '");';
        }
    }

    if ( isset($vars['node']->field_topic['und']) ) {
        $field_topic = $vars['node']->field_topic['und'];
        $topic = "";
        $gpt_topic = "";
        foreach ($field_topic as $key => $value) {
            $tterm = taxonomy_term_load($value['tid']);
            $tterms[] = str_replace(" & ", "-", $tterm->name);
        }
        $topic .= 'GA_googleAddAttr("Topic", ["' . implode('", "', $tterms) . '"]);' . "\n";
        $gpt_topic .= 'googletag.pubads().setTargeting("Topic", ["' . implode('", "', $tterms) . '"]);' . "\n";
    }
    elseif ( isset($vars['page']['content']['system_main']['#term']->name) && ($vars['page']['content']['system_main']['#bundle'] === 'topic') ) {
        $field_topic = strtolower(str_replace(" & ", "-", $vars['page']['content']['system_main']['#term']->name));
        $topic .= 'GA_googleAddAttr("Topic", "' . $field_topic . '");' . "\n";
        $gpt_topic .= 'googletag.pubads().setTargeting("Topic", "' . $field_topic . '");' . "\n";
    }

    $gptad_html .= 'googletag.pubads().collapseEmptyDivs();';
    $field_free_tag = isset($vars['node']->field_free_tag['und']) ? $vars['node']->field_free_tag['und'] : array();
    $actionSponsor = isset($vars['node']->field_action_sponsor['und']) ? $vars['node']->field_action_sponsor['und'] : array();
    $petitionSponsor = isset($vars['node']->field_petition_sponsor['und']) ? $vars['node']->field_petition_sponsor['und'] : array();
    $field_series = isset($vars['node']->field_series['und']) ? $vars['node']->field_series['und'] : array();
    
    $terms = array();
    if (isset($vars['node']->type)) {
        $contentType = 'GA_googleAddAttr("Type", "' . $vars['node']->type . '");' . "\n";
        $gpt_contentType = 'googletag.pubads().setTargeting("Type", "' . $vars['node']->type . '");' . "\n";
    }
    elseif ($vars['page']['content']['system_main']['#bundle'] === 'topic') {
        $contentType = 'GA_googleAddAttr("Type", "topic_hub");' . "\n";
        $gpt_contentType = 'googletag.pubads().setTargeting("Type", "topic_hub");' . "\n";
    }
    elseif ($vars['page']['content']['system_main']['form']['#title'] === 'Site Search') {
        $contentType = 'GA_googleAddAttr("Type", "search");' . "\n";
        $gpt_contentType = 'googletag.pubads().setTargeting("Type", "search");' . "\n";
    }
    else {
        $contentType = "";
        $gpt_contentType = "";
    }

    $override = filter_input(INPUT_GET, 'dfpKeyval');
    if ($override) {
        $pairs = explode(",", $override);

        foreach ($pairs as $param) {
            $i = strpos($param, ":");
            if (strtolower(substr($param, 0, $i)) === "freetag") {
                $i++;
                $term = substr($param, $i);
                $terms[] = htmlspecialchars(trim($term), ENT_QUOTES, "UTF-8");
            }
        }
    }

    if (count($field_free_tag)) {
        $free_tags = "";
        $gpt_free_tags = "";
        foreach ($field_free_tag as $key => $value) {
            $term = taxonomy_term_load($value['tid']);
            $terms[] = htmlspecialchars(trim($term->name), ENT_COMPAT, "UTF-8");
        }
    }

    if (count($field_free_tag) || $override) {
        $free_tags .= 'GA_googleAddAttr("FreeTag", ["' . implode('", "', $terms) . '"]);' . "\n";
        $gpt_free_tags .= 'googletag.pubads().setTargeting("FreeTag", ["' . implode('", "', $terms) . '"]);' . "\n";
    }

    if (count($field_series)) {
        $series = "";
        $gpt_series = "";
        if ($field_series[0]['tid'] != 0) {
            $sterm = taxonomy_term_load($field_series[0]['tid']);
            $series .= 'GA_googleAddAttr("Series", "' . htmlspecialchars(trim($sterm->name), ENT_COMPAT, "UTF-8") . '");' . "\n";
            $gpt_series .= 'googletag.pubads().setTargeting("Series", "' . htmlspecialchars(trim($sterm->name), ENT_COMPAT, "UTF-8") . '");' . "\n";
        }
    }

    if (count($actionSponsor) || count($petitionSponsor)) {
        $sponsor_tags = "";
        $gpt_sponsor_tags = "";
        $sponsors = array();
        foreach ($actionSponsor as $key => $value) {
            $sponsors[] = htmlspecialchars(trim($value['node']->title), ENT_COMPAT, "UTF-8");
        }
        foreach ($petitionSponsor as $key => $value) {
            $sponsors[] = htmlspecialchars(trim($value['title']), ENT_COMPAT, "UTF-8");
        }
        $sponsor_tags .= 'GA_googleAddAttr("Sponsor", ["' . implode('", "', $sponsors) . '"]);' . "\n";
        $gpt_sponsor_tags .= 'googletag.pubads().setTargeting("Sponsor", ["' . implode('", "', $sponsors) . '"]);' . "\n";
    }

    if ($vars['node']->title != "") {
        $pageTitle = 'GA_googleAddAttr("PageTitle", "' . htmlspecialchars(trim($vars['node']->title), ENT_COMPAT, "UTF-8") . '");' . "\n";
        $gpt_pageTitle = 'googletag.pubads().setTargeting("PageTitle", "' . htmlspecialchars(trim($vars['node']->title), ENT_COMPAT, "UTF-8") . '");' . "\n";
    }
    elseif (isset($vars['page']['content']['system_main']['#term']->name)) {
        $pageTitle = 'GA_googleAddAttr("PageTitle", "' . htmlspecialchars(trim($vars['page']['content']['system_main']['#term']->name), ENT_COMPAT, "UTF-8") . '");' . "\n";
        $gpt_pageTitle = 'googletag.pubads().setTargeting("PageTitle", "' . htmlspecialchars(trim($vars['page']['content']['system_main']['#term']->name), ENT_COMPAT, "UTF-8") . '");' . "\n";
    }
    elseif ($vars['page']['content']['system_main']['form']['#title'] === 'Site Search') {
        $pageTitle = 'GA_googleAddAttr("PageTitle", "Site Search");' . "\n";
        $gpt_pageTitle = 'googletag.pubads().setTargeting("PageTitle", "Site Search");' . "\n";
    }
    elseif ($vars['is_front']) {
        $pageTitle = 'GA_googleAddAttr("PageTitle", "homepage");' . "\n";
        $gpt_pageTitle = 'googletag.pubads().setTargeting("PageTitle", "homepage");' . "\n";

    }

    $targeting = "";
    $gpt_targeting = "";
    if ($topic != "" || $gpt_topic != "") {
        $targeting .= $topic;
        $gpt_targeting .= $gpt_topic;
    }
    if ($contentType != "" || $gpt_contentType != "") {
        $targeting .= $contentType;
        $gpt_targeting .= $gpt_contentType;
    }
    if ($free_tags != "" || $gpt_free_tags != "") {
        $targeting .= $free_tags;
        $gpt_targeting .= $gpt_free_tags;
    }
    if ($sponsor_tags != "" || $gpt_sponsor_tags != "") {
        $targeting .= $sponsor_tags;
        $gpt_targeting .= $gpt_sponsor_tags;
    }
    if ($pageTitle != "" || $gpt_pageTitle != "") {
        $targeting .= $pageTitle;
        $gpt_targeting .= $gpt_pageTitle;
    }

    //GAM:
    $header1 = 'GS_googleAddAdSenseService("' . variable_get('takepart_ads_dfp_property_code', '') . '");
    GS_googleEnableAllServices();';
    $header2 = $ad_html;
    $header3 = 'GA_googleFetchAds();';

    if (!empty($ad_html)) {
        drupal_add_js('//partner.googleadservices.com/gampad/google_service.js', 'external');
        drupal_add_js($header1, 'inline');
        drupal_add_js($header2, 'inline');
        drupal_add_js($header3, 'inline');
        drupal_add_js($targeting, array('type' => 'inline', 'scope' => 'header'));
    }

    //GPT:
    if (!empty($gptad_html)) {
        drupal_add_js("<!-- \n var googletag = googletag || {};
                  googletag.cmd = googletag.cmd || [];
                  (function() {
                  var gads = document.createElement('script');
                  gads.async = true;
                  gads.type = 'text/javascript';
                  var useSSL = 'https:' == document.location.protocol;
                  gads.src = (useSSL ? 'https:' : 'http:') +
                  '//www.googletagservices.com/tag/js/gpt.js';
                  var node = document.getElementsByTagName('script')[0];
                  node.parentNode.insertBefore(gads, node);
                  })(); \n // -->", array('type' => 'inline', 'scope' => 'header'));
        drupal_add_js("<!-- \n" . 'googletag.cmd.push(function() {' . "\n" .
                $gptad_html . "\n" .
                'googletag.pubads().enableSingleRequest();' . "\n" .
                $gpt_targeting . // custom targeting
                'googletag.enableServices();' . "\n" . '});' . "\n" .
                'var gpt_ad_tags = new Array();' . "\n // -->", array('type' => 'inline', 'scope' => 'header'));
        }
}

/*
 * keep a static list of all adds
 */

function takepart_ads($slot = FALSE) {
    $slots = &drupal_static(__FUNCTION__);
    $slots = isset($slots) ? $slots : array();
    if ($slot) {
        $slots[] = $slot;
    }
    return $slots;
}

/*
 * keep a static list of all adds
 */

function takepart_gpt_ads($slot = FALSE) {
    $slots = &drupal_static(__FUNCTION__);
    $slots = isset($slots) ? $slots : array();
    if ($slot) {
        $slots[] = $slot;
    }
    return $slots;
}

/**
 * Implements hook_boxes_plugins().
 */
function takepart_ads_boxes_plugins() {
    $info = array();
    $path = drupal_get_path('module', 'takepart_ads') . '/plugins';
    $info['ga_ad'] = array(
        'title' => 'GA Ad',
        'handler' => array(
            'parent' => 'box',
            'class' => 'boxes_ga_ad',
            'file' => 'ga_ads.inc',
            'path' => $path,
        ),
    );
    return $info;
}

function takepart_ads_bundle($form, $form_state) {
    $keys = isset($form_state['triggering_element']['#ajax']['replace with']) ?
            $form_state['triggering_element']['#ajax']['replace with'] :
            array();
    $return = $form['options']['entity'];
    foreach ($keys as $key) {
        $return = $return[$key];
    }
    return $return;
}
