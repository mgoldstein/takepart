<?php

function takepart_ads_preprocess_page(&$vars) {

    if (function_exists('wordlet_active_page')) {
      $wordlet_page = wordlet_active_page();
      if ($wordlet_page !== FALSE) {
        if ($wordlet_page['suppress_ad_block']) {
          return;
        }
      }
    }

    // $ad_slots = array();
    $ad_slots = takepart_ads();
    $gptad_slots = takepart_gpt_ads();

    $ad_html = '';
    $gptad_html = '';

    foreach ($ad_slots as $ad) {
        $gptad = '';

        foreach ($gptad_slots as $gptads) {
            //GPT:
            if (isset($gptads[$ad])) {
                $gptad = $gptads[$ad];
                break;
            }
        }

        if (!empty($gptad)) {
            //GPT:
            $adsize = '';
            preg_match('/[0-9]+x[0-9]+/', $ad, $adsize);
            $lr = explode("x", $adsize[0]);

            $gptad_html .= 'googletag.defineSlot(\'/' . variable_get('takepart_ads_dfp_property_code_gpt', '4355895') . '/' . $ad . '\', [' . $lr[0] . ', ' . $lr[1] . '], \'' . $gptad . '\').addService(googletag.pubads());' . "\n";
        } else {
            //GAM:
            $ad_html .= 'GA_googleAddSlot("' . variable_get('takepart_ads_dfp_property_code', '') . '", "' . $ad . '");';
        }
    }

    $gptad_html .= 'googletag.pubads().collapseEmptyDivs();';
    $contentType = isset($vars['node']->type) ? 'GA_googleAddAttr("Type", "' . $vars['node']->type . '");' . "\n" : "";
    $gpt_contentType = isset($vars['node']->type) ? 'googletag.pubads().setTargeting("Type", "' . $vars['node']->type . '");' . "\n" : "";
    $field_topic = isset($vars['node']->field_topic['und']) ? $vars['node']->field_topic['und'] : array();
    $field_free_tag = isset($vars['node']->field_free_tag['und']) ? $vars['node']->field_free_tag['und'] : array();
    $actionSponsor = isset($vars['node']->field_action_sponsor['und']) ? $vars['node']->field_action_sponsor['und'] : array();
    $petitionSponsor = isset($vars['node']->field_petition_sponsor['und']) ? $vars['node']->field_petition_sponsor['und'] : array();
    $field_series = isset($vars['node']->field_series['und']) ? $vars['node']->field_series['und'] : array();
            
    if (count($field_topic)) {
        $topic = "";
        $gpt_topic = "";
        $topic_terms = array();
        foreach ($field_topic as $key => $value) {
            $tterm = taxonomy_term_load($value['tid']);
            $tterms[] = trim($tterm->name);
        }
        $topic .= 'GA_googleAddAttr("Topic", ["' . implode('", "', $tterms) . '"]);' . "\n";
        $gpt_topic .= 'googletag.pubads().setTargeting("Topic", ["' . implode('", "', $tterms) . '"]);' . "\n";
    }

    if (count($field_free_tag)) {
        $free_tags = "";
        $gpt_free_tags = "";
        $terms = array();
        foreach ($field_free_tag as $key => $value) {
            $term = taxonomy_term_load($value['tid']);
            $terms[] = htmlspecialchars(trim($term->name), ENT_QUOTES, "UTF-8");
        }
        $free_tags .= 'GA_googleAddAttr("FreeTag", ["' . implode('", "', $terms) . '"]);' . "\n";
        $gpt_free_tags .= 'googletag.pubads().setTargeting("FreeTag", ["' . implode('", "', $terms) . '"]);' . "\n";
    }

    if (count($field_series)) {
        $series = "";
        $gpt_series = "";
        if ($field_series[0]['tid'] != 0) {
            $term = $field_series[0]['taxonomy_term'];
            $topic .= 'GA_googleAddAttr("Series", "' . htmlspecialchars(trim($term->name), ENT_QUOTES, "UTF-8") . '");' . "\n";
            $gpt_topic .= 'googletag.pubads().setTargeting("Series", "' . htmlspecialchars(trim($term->name), ENT_QUOTES, "UTF-8") . '");' . "\n";
        }
    }
    
    if (count($actionSponsor) || count($petitionSponsor)) {
        $sponsor_tags = "";
        $gpt_sponsor_tags = "";
        $sponsors = array();
        foreach ($actionSponsor as $key => $value) {
            $sponsors[] = htmlspecialchars(trim($value['node']->title), ENT_QUOTES, "UTF-8");
        }
        foreach ($petitionSponsor as $key => $value) {
            $sponsors[] = htmlspecialchars(trim($value['title']), ENT_QUOTES, "UTF-8");
        }
        $sponsor_tags .= 'GA_googleAddAttr("Sponsor", ["' . implode('", "', $sponsors) . '"]);' . "\n";
        $gpt_sponsor_tags .= 'googletag.pubads().setTargeting("Sponsor", ["' . implode('", "', $sponsors) . '"]);' . "\n";
    }

    if ($vars['node']->title != "") {
        $pageTitle = 'GA_googleAddAttr("PageTitle", "' . htmlspecialchars(trim($vars['node']->title), ENT_QUOTES, "UTF-8") . '");' . "\n";
        $gpt_pageTitle = 'googletag.pubads().setTargeting("PageTitle", "' . htmlspecialchars(trim($vars['node']->title), ENT_QUOTES, "UTF-8") . '");' . "\n";
    }

    $targeting = "";
    $gpt_targeting = "";
    if ($topic != "" || $gpt_topic != "") {
        $targeting .= $topic;
        $gpt_targeting .= $gpt_topic;
    }
    if ($contentType != "" || $gpt_contentType != "") {
        $targeting .= $contentType;
        $gpt_targeting .= $gpt_contentType;
    }
    if ($free_tags != "" || $gpt_free_tags != "") {
        $targeting .= $free_tags;
        $gpt_targeting .= $gpt_free_tags;
    }
    if ($sponsor_tags != "" || $gpt_sponsor_tags != "") {
        $targeting .= $sponsor_tags;
        $gpt_targeting .= $gpt_sponsor_tags;
    }
    if ($pageTitle != "" || $gpt_pageTitle !="") {
        $targeting .= $pageTitle;
        $gpt_targeting .= $gpt_pageTitle;
    }

    //GAM:
    $header1 = 'GS_googleAddAdSenseService("' . variable_get('takepart_ads_dfp_property_code', '') . '");
GS_googleEnableAllServices();';
    $header2 = $ad_html;
    $header3 = 'GA_googleFetchAds();';

    if (!empty($ad_html)) {
        drupal_add_js('http://partner.googleadservices.com/gampad/google_service.js', 'external');
        drupal_add_js($header1, 'inline');
        drupal_add_js($header2, 'inline');
        drupal_add_js($header3, 'inline');
        drupal_add_js($targeting, array('type' => 'inline', 'scope' => 'header'));
    }

    //GPT:
    if (!empty($gptad_html)) {
        drupal_add_js("var googletag = googletag || {};
                  googletag.cmd = googletag.cmd || [];
                  (function() {
                  var gads = document.createElement('script');
                  gads.async = true;
                  gads.type = 'text/javascript';
                  var useSSL = 'https:' == document.location.protocol;
                  gads.src = (useSSL ? 'https:' : 'http:') +
                  '//www.googletagservices.com/tag/js/gpt.js';
                  var node = document.getElementsByTagName('script')[0];
                  node.parentNode.insertBefore(gads, node);
                  })();", array('type' => 'inline', 'scope' => 'header'));
        drupal_add_js('googletag.cmd.push(function() {' . "\n" .
                $gptad_html . "\n" .
                'googletag.pubads().enableSingleRequest();' . "\n" .
                $gpt_targeting . // custom targeting
                'googletag.enableServices();' . "\n" . '});' . "\n" .
                'var gpt_ad_tags = new Array();', array('type' => 'inline', 'scope' => 'header'));
    }
}

/*
 * keep a static list of all adds
 */

function takepart_ads($slot = FALSE) {
    $slots = &drupal_static(__FUNCTION__);
    $slots = isset($slots) ? $slots : array();
    if ($slot) {
        $slots[] = $slot;
    }
    return $slots;
}

/*
 * keep a static list of all adds
 */

function takepart_gpt_ads($slot = FALSE) {
    $slots = &drupal_static(__FUNCTION__);
    $slots = isset($slots) ? $slots : array();
    if ($slot) {
        $slots[] = $slot;
    }
    return $slots;
}

/**
 * Implements hook_menu().
 */
function takepart_ads_menu() {
    $items['admin/config/system/ads'] = array(
        'title' => 'Doubleclick Ad Settings',
        'description' => 'Manage ads settings.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('takepart_ads_configure_ads'),
        'access arguments' => array('administer site configuration'),
        'weight' => -10,
        'file' => 'takepart_ads.admin.inc',
    );
    return $items;
}

/**
 * System settings form to manage ad variables
 */
function takepart_ads_configure_ads() {
  $form['takepart_ads_dfp_property_code'] = array(
    '#type' => 'textfield',
    '#title' => t('GAM Property Code'),
    '#description' => t('Enter your DFP Propery Code here.'),
    '#default_value' => variable_get('takepart_ads_dfp_property_code', ''),
    '#required' => TRUE
  );

  $form['takepart_ads_dfp_property_code'] = array(
      '#type' => 'textfield',
      '#title' => t('GPT Property Code'),
      '#description' => t('Enter your DFP Propery Code here.'),
      '#default_value' => variable_get('takepart_ads_dfp_property_code_gpt', '4355895'),
      '#required' => TRUE
  );

  return system_settings_form($form, FALSE);
}

/**
 * Implements hook_boxes_plugins().
 */
function takepart_ads_boxes_plugins() {
    $info = array();
    $path = drupal_get_path('module', 'takepart_ads') . '/plugins';
    $info['ga_ad'] = array(
        'title' => 'GA Ad',
        'handler' => array(
            'parent' => 'box',
            'class' => 'boxes_ga_ad',
            'file' => 'ga_ads.inc',
            'path' => $path,
        ),
    );
    return $info;
}

function takepart_ads_bundle($form, $form_state) {
    $keys = isset($form_state['triggering_element']['#ajax']['replace with']) ?
            $form_state['triggering_element']['#ajax']['replace with'] :
            array();
    $return = $form['options']['entity'];
    foreach ($keys as $key) {
        $return = $return[$key];
    }
    return $return;
}
