<?php

/**
 * Implement hook_menu().
 */
function takepart_calendar_menu() {
  $items = array();
  $items['calendar/xml'] = array(
      'title' => 'BSD Test Page',
      'page callback' => '_takepart_calendar_xml',
      'access callback' => true,
      'type' => MENU_CALLBACK,
  );
  return $items;
}





/*
 * Menu callback for RSS:
 */
function _takepart_calendar_xml($node) {
    
  $xml = '<takepart_action>';
  $uri = $_SERVER["REQUEST_URI"];
  //$uriparts = explode('/', $uri);
  $pagelink = $actual_link = 'http://'.$_SERVER['HTTP_HOST'] . "/" . drupal_lookup_path('alias',"node/".$node);
  
  if(preg_match("/\/(\d+)$/",$uri,$matches))
  {
    $nodeid=$matches[1];
    $calarray = _takepart_calendar_array($nodeid);
    
    for ($i=1;$i<count($calarray);$i++) {
      
      $itemdate = $calarray[$i]['start'];
      $itemdate =  _takepart_calendar_xml_parsedate($itemdate);

      if(round((strtotime($itemdate) - time()) / 86400) == 1) {
        
        $subtextimage = _takepart_calendar_xml_getimgs($calarray[$i]['subtext']);
        
        if($subtextimage == $calarray[$i]['subtext']) {
          $subtext = $calarray[$i]['subtext'];
          $subtextimage = "";
        } else {
          $subtext = _takepart_calendar_xml_getimgalts($subtextimage);
        }

        $xml .= '<action>';
        $xml .= '<todays_date>'.strtotime($itemdate).'</todays_date>';
        $xml .= '<topic_name>' . $subtext . '</topic_name>';
        $xml .= '<topic_icon>' . $subtextimage . '</topic_icon>';
        $xml .= '<action_title>'. _takepart_calendar_xml_fixtring($calarray[$i]['title']) . '</action_title>';
        $xml .= '<action_page>'. _takepart_calendar_xml_fixtring($calarray[$i]['url']) . '</action_page>';
        $xml .= '<calendar_page>' . $pagelink . '</calendar_page>';
        $xml .= '</action>';
      
      }
    }
  } 
  
  $xml .= '</takepart_action>';

  header ("Content-Type:text/xml");
  
  echo $xml;
  exit();
  
}


function _takepart_calendar_xml_fixtring($str) {
  if (preg_match('/"([^"]+)"/', $str, $m)) {
    return $m[1];
  } elseif (preg_match('~\'(.*?)\'~', $str, $m)) {
    return $m[1];    
  } else {
    return $str;
  }
}


function _takepart_calendar_xml_getimgs($str) {
  if (preg_match('/<img[^>]+>/i', $str, $m)) {
    return $m[0];
  } else {
    return $str;
  }
}

function _takepart_calendar_xml_getimgalts($str) {
  if (preg_match('/< *img[^>]*alt *= *["\']?([^"\']*)/i', $str, $m)) {
    return $m[1  ];
  } else {
    return "";
  }
}

function _takepart_calendar_xml_parsedate($str) {
  if (preg_match('~\((.*?)\)~', $str, $m)) {
    $parts = explode(",", $m[1]);
    return ($parts[1]+1) . '/' . ($parts[2]+1) . '/' . $parts[0];
  } else {
    return $str;
  }
}


function _takepart_calendar_array($nodeid) {
  $content = node_load($nodeid);
  $json = $content->field_calendar['und'][0]['takepart_calendar'];
  return _takepart_calendar_array_parse($json);
}

function _takepart_calendar_array_parse($json) {
  //sorry, I wrote this at 3am.
  preg_match("/\[([^\]]+)\]/", $json, $match);
  if($match[1]) {
    $json = $match[1];
  }
  
  $retarray = array();

  $tokens = array("title", 
                  "start",
                  "end",
                  "url",
                  "subtext");

  $matches = array();
  preg_match_all("/\{([^\}]+)\}/", $json, $matches);
  
  foreach ($matches[0] as $section) {
    
    $secarray = array();
   
    for ($i=0;$i<count($tokens);$i++) {
        $test = $tokens[$i] . ":";
        $tknright = substr($section, strpos($section, $test, 0), strlen($section));
        if($tokens[$i] == 'subtext') {
          $tknright = substr($tknright, 0, strpos($tknright, "}", 0));
        } else {
          $tknright = substr($tknright, 0, strpos($tknright, "\r", 0));
        }
        $secarray[$tokens[$i]] = $tknright;
    }
        
    array_push($retarray, $secarray);

  }

  return ($retarray);  
}



function json_decode_b($json)
{
  $comment = false;
  $out = '$x=';
  for ($i=0; $i<strlen($json); $i++)
  {
    if (!$comment)
    {
      if (($json[$i] == '{') || ($json[$i] == '['))
        $out .= ' array(';
      else if (($json[$i] == '}') || ($json[$i] == ']'))
        $out .= ')';
      else if ($json[$i] == ':')
        $out .= '=>';
      else
        $out .= $json[$i];
    }
    else
      $out .= $json[$i];
    if ($json[$i] == '"' && $json[($i-1)]!="\\")
      $comment = !$comment;
  }
  print "----------------------" . "\n";
  print $out . "\n";
  print "----------------------" . "\n";
  eval($out . ';');
  return $x;
}














/**
 * Implements hook_init().
 */
function _takepart_calendar_init() {
  //@todo: only add this w/ content
  //move to formatter_view?
  //media print $css_paths[] = drupal_get_path('module', 'takepart_calendar') . '/fullcalendar/fullcalendar.print.css';

  //$css_path = drupal_get_path('module', 'takepart_calendar') . '/themes/cupertino/theme.css';
  //drupal_add_css($css_path);

  $css_path = drupal_get_path('module', 'takepart_calendar') . '/themes/takepart/theme.css';
  drupal_add_css($css_path);

  $css_path = drupal_get_path('module', 'takepart_calendar') . '/fullcalendar/fullcalendar.css';
  drupal_add_css($css_path);

  #@todo: use drupal's jquery:
  //$js_path = drupal_get_path('module', 'takepart_calendar') . '/jquery/jquery-1.5.2.min.js';
  //drupal_add_js($js_path);
  //$js_path = drupal_get_path('module', 'takepart_calendar') . '/jquery/jquery-ui-1.8.11.custom.min.js';
  //drupal_add_js($js_path);
  //$js_path = drupal_get_path('module', 'takepart_calendar') . '/fullcalendar/fullcalendar.min.js';
  $js_path = drupal_get_path('module', 'takepart_calendar') . '/fullcalendar/fullcalendar.js';
  drupal_add_js($js_path);


  drupal_add_js("jQuery(document).ready(function() {
      var date = new Date();
      var d = date.getDate();
      var m = date.getMonth();
      var y = date.getFullYear();
      if (typeof calendar_events != 'undefined') {
	   if(calendar_events) {
        jQuery('#calendar').fullCalendar({
          editable: false	,
          events: calendar_events,
          disableDragging: true
        });
       }
	  }
    });",
  array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
  );


  drupal_add_js("jQuery(document).ready(function() {
  					var shareattach = (function() {
  					    //Attach tracking to share icons
  						jQuery('.fc-event-sharebar a').click(function() { 
                          var link_title = jQuery(this).attr('title');
                          var title = convert_title(link_title);
                          s.events='event25';
                          s.prop26=title;
                          s.eVar27=title;
                          s.linkTrackVars='eVar27,prop26,events';
                          s.linkTrackEvents='event25';
                          s.tl(this.href, 'o', 'Content Share');						
						});
						//Attach tracking to calendar links
  						jQuery('.fc-event-title a').click(function() { 
                          var link_title = jQuery(this).text();
                          var pg_title = '" . drupal_get_title() . "';
                          var pg_title = convert_title(pg_title);
                          s.events = 'event19';
                          s.eVar28 = (pg_title + ' - ' + link_title);
                          s.linkTrackVars='eVar28,events';
                          s.linkTrackEvents='event19';
                          s.tl(this.href, 'o', pg_title);					
						});						
						//Refresh Google Share and addthis:
						(function() {
						    if((typeof gapi != 'undefined') && (gapi)) {
        						gapi.plusone.go();
        						var script = 'http://s7.addthis.com/js/250/addthis_widget.js#domready=1';
    							if (window.addthis){
        							window.addthis = null;
    							}
    							jQuery.getScript( script );
    						}
  						})();
					});
        			jQuery('.fc-header-right').click(shareattach);
        			jQuery('.fc-header-left').click(shareattach);
        			shareattach();
      			});",
  array('type' => 'inline', 'scope' => 'footer', 'weight' => 6)
  );

  
  drupal_add_js("jQuery(document).ready(function() {
		jQuery('.fc .fc-today-computed ').hover(  
         function() {  
          jQuery(this).addClass('fc-hover');  
          jQuery('.fc td.fc-today').addClass('fc-hover');  
         },  
         function() {  
          jQuery(this).removeClass('fc-hover');  
          jQuery('.fc td.fc-today').removeClass('fc-hover');  
         }  
        );
	});",
  array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
  );
  
  //Google Plus:
  drupal_add_js("(function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();",
  array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
  );
 

}

/**
 * Implements hook_field_info().
 */
function takepart_calendar_field_info() {
  return array(
    'takepart_calendar' => array(
      'label' => t('TakePart Calendar'),
  	  'fieldable' => TRUE,	    	  
      'description' => t('Managable Calendar'),
      'default_widget' => 'takepart_calendar_widget',
      'default_formatter' => 'takepart_calendar_formatter',
  ),
  );
}



/**
 * Implements hook_field_formatter_info().
 */
function takepart_calendar_field_formatter_info() {
  return array(
'takepart_calendar_formatter' => array(
'label' => t('Test TakePart calendar formatter'),
          'field types' => array('takepart_calendar'),
  ),
  );
}


/**
 * Implements hook_field_formatter_view().
 */
function takepart_calendar_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

 //@todo: build admin interface :)
  $element = array();

  switch ($display['type']) {
    case 'takepart_calendar_formatter':

      foreach ($items as $delta => $item) {
        if ($item['takepart_calendar']) {
          
          $json = $item['takepart_calendar'];
          //@todo: turn this into an ajax feed:
          //$element[$delta]['#markup'] = '<span><script type=\'text/javascript\'>var calendar_events = ' . $json .';</script><div id=\'calendar\'></div></span>';
          if(!empty($json)) {
            _takepart_calendar_init();  
            $element[$delta] = array('#markup' => '<span><script type=\'text/javascript\'>var calendar_events = ' . $json .';</script><div id=\'calendarheader\'></div><div id=\'calendar\'></div></span>');
          }
        }
      }
      break;
  }
  return $element;
}




/**
 * Implements hook_field_widget_form().
 */
function takepart_calendar_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $field_name = $field['field_name'];
  $field_type = $field['type'];

  $default = $instance['default_value'][0][$field_type][$field_type];

  //@todo: check delta for null offset?


  switch ($instance['widget']['type']) {
    case 'takepart_calendar':

      //$element['takepart_calendar']['textarea'] = array(
      $element['takepart_calendar'] = array(
          '#type' => 'textarea',
          '#title' => $element['#title'],
          '#description' => $element['#description'],
          '#default_value' => $items[$delta]['takepart_calendar'],
          '#required' => $element['#required'],
          '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
          '#delta' => $delta,
          '#element_validate' => array('_takepart_calendar_validation'),
      );
      
      /*
      $element['takepart_calendar']['html'] = array(
  			'#markup' => "<script type=\"text/javascript\">
				<!--//--><![CDATA[//><!--
				alert(jQuery('#edit-field-calendar-und-0-takepart-calendar-textarea').val());
				//--><!]]>
			</script>",
      );
      */
      
      /*
       $element['takepart_calendar_html'] = array(
      '#type' => 'markup',
      '#value' => t('TEST MARKUP'),
      );


      /*
      *
      drupal_add_js("jQuery('test');",
      array('type' => 'inline', 'scope' => 'footer', 'weight' => 6)
      );
      */

      /*
       drupal_add_js("jQuery(document).ready(function() {
      alert('ready');
      //alert(jQuery('#edit-field-cal-test-und-0-takepart-calendar').attr('id'));
      });",
      array('type' => 'inline', 'scope' => 'footer', 'weight' => 6)
      );
      */

      break;
  }
  return $element;
}


/**
 * Implements hook_field_widget_error().
 */
function takepart_calendar_widget_error($element, $error, $form, &$form_state) {
  switch ($error['error']) {
    case 'takepart_calendar_invalid':
      form_error($element, $error['message']);
      break;
  }
}


/**
 * Implements hook_field_is_empty().
 */
function takepart_calendar_field_is_empty($item, $field) {
  if (empty($item['takepart_calendar'])) {
    return true;
  }
}

/**
 * Implements hook_field_widget_info().
 */
function takepart_calendar_field_widget_info() {
  return array(
    'takepart_calendar' => array(
      'label' => t('TakePart Calendar'),
      'field types' => array('takepart_calendar'),
  ),
  );
}


function _takepart_calendar_validation($element, &$form_state) {
  if (isset($element['#value'])) {
    //form_set_value($element, array('takepart_calendar' => $value), $form_state);
  }
}



/* For futue implementation, blocks:
 function takepart_calendar_block_info() {
$blocks = array();

$blocks['info'] = array(
'info' => t('TakePart Calendar Block')
);

return $blocks;
}

function takepart_calendar_block_view($delta = ''){
$block = array();

$block['subject'] = "TPC Subject";
$block['content'] = "TakePart Calendar Content";

return $block;
}
*/