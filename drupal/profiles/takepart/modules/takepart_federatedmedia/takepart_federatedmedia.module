<?php

/**
 * Implements hook_permission().
 */
function takepart_federatedmedia_permission() {
    return array(
        'administer Federated Media configuration' => array(
            'title' => t('Administer Federated Media configuration'),
        )
    );
}

/**
 * Implements hook_menu().
 */
function takepart_federatedmedia_menu() {
    $items['admin/config/system/federatedmedia'] = array(
        'title' => 'Federated Media Tracking',
        'description' => "Configure the settings used to integrate Federated Media tracking.",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('federatedmedia_admin_settings'),
        'access arguments' => array('administer Federated Media configuration'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Implements hook_page_alter().
 */
function takepart_federatedmedia_page_alter(&$page) {
    global $user;

    // Check if we should track the currently active user's role.
    $track = 0;
    if (is_array($user->roles)) {
        foreach ($user->roles as $role) {
            $role = str_replace(' ', '_', $role);
            $track += variable_get("federatedmedia_track_{$role}", FALSE);
        }
    }

    // Don't track page views in the admin sections, or for certain roles.
    if (arg(0) == 'admin' || $track <= 0) {
        return;
    }

    $fmscripturl = check_plain(variable_get("federatedmedia_js_file_location", '//static.fmpub.net/site/takepart'));
    $fmbug = "<!-- FM Tracking Pixel -->" . "\n";
    $fmbug .= '<script type="text/javascript" src="' . $fmscripturl . '"></script>' . "\n";
    $fmbug .= "<!-- /FM Tracking Pixel -->" . "\n";

    $page['page_bottom']['federatedmedia'] = array(
        'bug' => array(
            '#type' => 'markup',
            '#markup' => $fmbug,
        ),
    );
}

/**
 * Menu callback for Federated Media settings.
 */
function federatedmedia_admin_settings() {

    $form['general'] = array(
        '#type' => 'fieldset',
        '#title' => t('General settings'),
        '#collapsible' => TRUE,
        '#weight' => '-10',
    );

    $form['general']['federatedmedia_js_file_location'] = array(
        '#type' => 'textfield',
        '#title' => t("Complete path to Federated Media Javascript file"),
        '#default_value' => check_plain(variable_get("federatedmedia_js_file_location", '//static.fmpub.net/site/takepart')),
    );

    $form['roles'] = array(
        '#type' => 'fieldset',
        '#title' => t('User role tracking'),
        '#collapsible' => TRUE,
        '#description' => t('Define which user roles should be tracked by Federated Media'),
        '#weight' => '-6',
    );

    $result = db_select('role', 'r')
            ->fields('r')
            ->orderBy('name', 'ASC')
            ->execute();

    foreach ($result as $role) {
        // Can't use empty spaces in varname.
        $role_varname = str_replace(' ', '_', $role->name);
        // Only the basic roles are translated.
        $role_name = in_array($role->rid, array(DRUPAL_ANONYMOUS_RID, DRUPAL_AUTHENTICATED_RID)) ? t($role->name) : $role->name;
        $form['roles']["federatedmedia_track_{$role_varname}"] = array(
            '#type' => 'checkbox',
            '#title' => $role_name,
            '#default_value' => variable_get("federatedmedia_track_{$role_varname}", TRUE),
        );
    }

    return system_settings_form($form);
}

/**
 * Used to replace the value of federatedmedia variables. The variables need to be
 * defined with hook_federatedmedia_variables().
 *
 * @param string $name
 *  The property.
 * @param string $value
 *  The value for the property.
 */
function federatedmedia_set_variable($name = NULL, $value = NULL) {
  $variables = &drupal_static(__FUNCTION__, array());
  if (empty($name)) {
    return $variables;
  }
  else {
    $variables[$name] = $value;
  }
}

function federatedmedia_get_variables() {
  return federatedmedia_set_variable();
}