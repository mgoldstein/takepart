<?php
// $Id$
/**
 * TakePart User Module
 * @file
 * Creates a user interface for customizations to login and register forms.
 * @author tracycsmith
 * @date 06/10/2011
 * @company Phase2 Technology
 */

/* ToDo 
 * 
 * - Add comments to functions
 * - Add link if username is already taken to login
 * - Add custom validation for email address
 * - ? Change terms of use error message
 */
 
function takepart_user_menu_alter(&$items) {
//  $items['user/%user_category/edit']['title'] = 'My Account';

  $items['user']['type']          = MENU_CALLBACK;
  $items['user/register']['type'] = MENU_CALLBACK;
  $items['user/password']['type'] = MENU_CALLBACK;
  /*
$items['user/%user'] = array(
    'type' => MENU_CALLBACK, 
  );
*/
  unset($items['user/%user/view']);
  unset($items['user/%user/bookmarks']);
  unset($items['user/%user/openid']);
  unset($items['user/%user/track']);
  unset($items['user/%user/imce']);
  
  $items['user/%user']['page callback'] = 'takepart_user_profile_redirect';
}

/* This function adds a checkbox on account settings to not send the user register email */
function takepart_user_form_user_admin_settings_alter(&$form, &$form_state) {
  // allow admin to choose if a notification mail is sent to user (who register without approval)
  $form['email_no_approval_required']['user_mail_register_no_approval_required_notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Send welcome emails through Drupal to user upon registering.'),
    '#description' => t('By checking this box welcome emails for this email type will be sent to the user when the user registers.'),
    '#weight' => -99,
    '#default_value' => variable_get('user_mail_register_no_approval_required_notify', true),
  );
}
/* This functions insures that the drupal username is always used */
function takepart_user_username_alter(&$name, $account) {
	$name = $account->name;
}

function takepart_user_profile_redirect() {
  global $user;
  if (empty($user->uid) || $user->uid != arg(1)) {
    drupal_not_found();
  }
  else {
    drupal_goto('user/' . intval($user->uid) . '/edit');
  }
}

function takepart_user_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // add in our registration confirmation page.
  $form['#submit'][] = 'takepart_user_register_submit';
  
  $register_title = variable_get("takepart_user_register_page_title","Join TakePart");
  drupal_set_title($register_title);
  $form['#prefix'] = '<h2 class="title">' . $register_title . '</h2>';
  $form['#prefix'] .= variable_get("takepart_user_register_intro_text","<p>In order to participate in discussions on TakePart.com, you must be a member (no obligation).</p>");
  $form['#prefix'] .= variable_get("takepart_user_register_intro_text_fb","<p class='fb-register-text'>To register using your Facebook account click the Connect with Facebook button. Once you are connected with Facebook your Facebook picture will appear and the fields below will be filled out with your Facebook information.  Confirm all the required fields are filled out and click Register.</p>");
  global $user;
  $form['fb_user']['#weight'] = -100;
  if (!(user_access('administer users'))) {
    $form['#validate'][] = '_takepart_user_validate';
    $form['actions']['submit']['#value'] = 'Register';
  }
  else {
    unset($form['field_account_dateofbirth']);
  }
}

/**
 * submit handler for adding our custom registraiton page.
 * borrowed from logintoboggan
 */
function takepart_user_register_submit($form, &$form_state) {
  $redirect = variable_get('takepart_registration_confirmation_page_url', '<front>');
  $form_state['redirect'] = $redirect;
}

function takepart_user_form_user_login_alter(&$form, &$form_state, $form_id) {
  $login_title = variable_get("takepart_user_login_page_title","Member Login");
  drupal_set_title($login_title);
  $form['#prefix'] = '<h2 class="title">' . $login_title . '</h2>';
  $form['#prefix'] .= variable_get("takepart_user_login_intro_text","<p class='fb-login-text'>Click Connect with Facebook or complete the form below to log in.</p>");
  
  //$form['#prefix'] .= variable_get("takepart_user_login_intro_text","<p><fb:login-button scope=\"!perms\" v=\"2\">Connect</fb:login-button></p>");
  //$form['#prefix'] .= variable_get("takepart_user_login_intro_text"," <fb:login-button onlogin=\"window.location.reload()\" data-scope=\"email,user_checkins\"></fb:login-button>");
  //$form['#prefix'] .= variable_get("takepart_user_login_intro_text"," <fb:login-button onlogin=\"FB.login(function(response) {}, {perms:Drupal.settings.fb.perms}); return false;\" data-scope=\"email,user_checkins\"></fb:login-button>");
  //$form['#prefix'] .= fbconnect_render_button(array('perms' => 'email'));
  $form['actions']['submit']['#value'] = 'Log In';
  $form['#submit'][] = 'takepart_user_login_submit';
}

/**
 * submit handler for adding our custom destination after login.
 * borrowed from logintoboggan
 */
function takepart_user_login_submit($form, &$form_state) {
  $form_state['redirect'] = '<front>';
}

function takepart_user_form_user_pass_alter(&$form, &$form_state, $form_id) {
  $pass_title = variable_get("takepart_user_password_page_title","Forgot Password");
  drupal_set_title($pass_title);
}
                       
function takepart_user_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if(!in_array("administrator", $user->roles) && ($user->uid <> 1)) {
    $form['field_account_dateofbirth']['#access'] = FALSE;
  } else {
    unset($form['field_account_dateofbirth']);
  }
}

function _takepart_user_validate(&$form, &$form_state) {
  $values = $form_state['values'];
  if (isset($values['field_account_dateofbirth'])) {
    $language = $form['field_account_dateofbirth']['#language'];
    $user_dob = $values['field_account_dateofbirth'][$language][0]['value'];
    if (_takepart_checkage($user_dob) == 0) {
      $_SESSION['underaged'] = true;
      $underage_msg = variable_get('takepart_user_registration_underage_message','You do not meet TakePart&#39;s age requirement.');
      form_set_error($name = 'field_account_dateofbirth', t($underage_msg));
    }   // end checkage   
  } // end date of birth
}

function _takepart_checkage($user_dob) {
  $ageTime = strtotime($user_dob); // Get the person's birthday timestamp
  $t = time(); // Store current time for consistency
  $age = ($ageTime < 0) ? ( $t + ($ageTime * -1) ) : $t - $ageTime;
  $year = 60 * 60 * 24 * 365;
  $age_years = $age / $year;
  return $age_years < 18 ? FALSE : TRUE;
}
