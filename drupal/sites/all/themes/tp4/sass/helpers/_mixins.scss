// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}


@mixin breakpoint($breakpoint-size) {
  @media all and (min-width: $breakpoint-size) {
    @content;
  }
}

//For views and list items
@mixin breakpoint-grid-breakdown($column-counts, $breakpoints: $breakpoint-mobile $breakpoint-tablet $breakpoint-desktop, $selector: '.views-row') {
  #{$selector} {
    @each $breakpoint in $breakpoints {
      $key: index($breakpoints, $breakpoint);
      $column-count: nth($column-counts, $key);
      @include breakpoint($breakpoint) {
        @for $i from 1 through $column-count {
          $remainder: $i % $column-count;
          &:nth-child(#{$column-count}n+#{$remainder}) {
            $page-grid-column-span: $zen-column-count / $column-count;
            $page-grid-column-position: 1 + (($i - 1) * $page-grid-column-span);
            @include zen-grid-item($page-grid-column-span, $page-grid-column-position);
            // Clear the first item in every row so they don't stack on top
            // of each other.
            @if $remainder == 1 or $column-count == 1 {
              clear: both;
              padding: 0;
            } @else {
              clear: none;
              padding-left: 20px;
              padding-right: 20px;
            }
          }
        }
      }
    }
  }

  // A clearfix so elements following this grid will be placed correctly.
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin dashed-separator-after {
  &:after {
    content: '';
    display: block;
    height: 0;
    width: 76px;
    margin: .5em 0;
    border-bottom: 1px dashed black;
  }
}

@mixin tp-icon {
  font-family: "SSGizmo";
  font-size: 1.5em;
  line-height: 0.666666667;
  vertical-align: bottom;
}

@mixin icon-photo-gallery {
  &:after {
    @include tp-icon();
    content: " \1F4F7";
  }
}
@mixin icon-video {
  &:after {
    @include tp-icon();
    content: " \1F4F9";
  }
}
