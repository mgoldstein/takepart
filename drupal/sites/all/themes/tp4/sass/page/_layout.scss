/**
 * @file
 * Positioning for a fixed-width, desktop-centric layout.
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */
// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
// $zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;
html {}
body {
  width: 100%;
  margin: 0;
  border-top: 5px solid $light-mint;
  border-bottom: 5px solid $light-mint;
  position: relative;
  &.snapjs-left{
    overflow: hidden;
    border-bottom: none;
    #page-wrap{
      overflow: auto;
      position: absolute;
    }
  }
}
#page-wrap{
  position: relative;
  background-color: #fff;
  height: auto;
  overflow: hidden;
}
.header-wrapper,
.preface-wrapper,
.main-wrapper,
.suffix-wrapper,
.footer-wrapper {
  width: auto;
  height: auto;
  padding: 0;
}
.header-wrapper {
  padding-top: 1em;
}
.footer-wrapper {
  padding-bottom: 1em;
}
#header,
#preface,
#main,
#suffix,
#footer {
  @include zen-grid-container();
  max-width: $page-width;
  margin: 0 auto;
  padding: 0;
}
#preface {
  min-height: 1em; // TODO figure out a better way to do this
}
#main {
  #primary { // mobile first and pages with no sidebar
      @include zen-grid-item(12, 1);
  }
  &.with-sidebar { // most pages
    #primary {
      @include breakpoint($breakpoint-tablet) {
        @include zen-grid-item(7, 1);
      }
      @include breakpoint($breakpoint-desktop) {
        @include zen-grid-item(8, 1);
      }
    }
  }
  &.with-skinny { // this should never happen
    #primary{
      @include breakpoint($breakpoint-desktop){
        @include zen-grid-item(10, 1);
      }
    }
  }
  &.with-sidebar.with-skinny { // homepage
    #primary {
        @include breakpoint($breakpoint-desktop){
          @include zen-grid-item(6, 1);
          @include zen-clear(none);
          padding: 0;
      }
    }
  }
  #sidebar {
    @include zen-grid-item(12, 1); // mobile-first
    @include zen-clear();
    @include breakpoint($breakpoint-tablet) {
      @include zen-grid-item(5, 8);
      @include zen-clear(none); // cancel clear
    }
    @include breakpoint($breakpoint-desktop) {
      @include zen-grid-item(4, 9);
    }
  }

  // the default style establishes mobile first parameters
  // and covers the unusual case where #skinny is by itself
  #skinny { 
    @include zen-grid-item(12, 1);
    @include zen-clear();
    @include breakpoint($breakpoint-tablet){
      @include zen-grid-item(5, 8);
    }
    @include breakpoint($breakpoint-desktop){
      @include zen-grid-item(2, 11);
      @include zen-clear(none);
    }
  }
  &.with-sidebar {
    #skinny{
      @include breakpoint($breakpoint-tablet){
        @include zen-grid-item(12, 1);
      }
      @include breakpoint($breakpoint-desktop){
        @include zen-grid-item(2, 7);
        padding-left: 15px;
        padding-right: 15px;
      }
    }
  }
}
