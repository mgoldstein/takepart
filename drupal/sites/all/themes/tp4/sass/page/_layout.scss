/**
 * @file
 * Positioning for a fixed-width, desktop-centric layout.
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */
// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
// $zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;

html{
}
body{
  width: 100%;
}
.header-wrapper, .preface-wrapper, .main-wrapper, .suffix-wrapper, .footer-wrapper{
  width: 100%;
  height: auto;
}
header#header, #preface, main#main, #suffix, footer{
  @include zen-grid-container;
  max-width: $zen-grid-width;
  width: 100%;
  margin: 0 auto;
  @include zen-clear();
}

main#main{
  $zen-column-count:  12;
  $zen-gutter-width:  0px;
  @include zen-grid-container;
  margin: 0 auto;
  max-width: 960px;
  width: 100%;
  #primary{
    @include zen-grid-item(12, 1);
  }
  #sidebar{
    @include zen-grid-item(4, 9);
  }
  &.with-skinny{
    #primary{
      @include zen-grid-item(10, 1);
    }
    #skinny{
      @include zen-grid-item(2, 11);
    }
  }
  &.with-sidebar{
    #primary{
      @include zen-grid-item(8, 1);
    }
  }
  &.with-sidebar.with-skinny{
    #primary{
      @include zen-grid-item(6, 1);
    }
    #skinny{
      @include zen-grid-item(2, 7);
    }
  }
}