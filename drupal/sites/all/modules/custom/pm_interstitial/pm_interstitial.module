<?php
/**
 * @file
 * Marketing interstitials.
 */

require_once('pm_interstitial.forms.inc');

/**
 * Implements hook_help().
 */
function pm_interstitial_help($path, $arg) {
  $output = '';
  if ($path == 'admin/help#pm_interstitial') {
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t("The Interstitial module provides marketing interstitials with limited user targeting.") . '</p>';
    $output .= '<h3>' . t('Use') . '</h3>';
    $output .= '<dl>';
    $output .= '<dt>' . t('Configure global settings') . '</dt>';
    $output .= '<dd>';
    $output .= t('To configure the global settings visit the
      <a href="@settings-config">Settings Configuration</a> page. On this page
      you can configure campaign ids used when targeting users.',
      array('@settings-config' => url('admin/config/participant-media/interstitials'))
    );
    $output .= '</dd>';
    $output .= '</dl>';
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function pm_interstitial_menu() {
  $items = array();

    $items['admin/config/participant-media'] = array(
		'title' => 'Participant Media',
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('access administration pages'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
		'weight' => -16,
    );

    $items['admin/config/participant-media/interstitials'] = array(
		'title' => 'Interstitial Settings',
		'description' => 'Global settings for marketing interstitials',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('pm_interstitial_admin_form'),
		'access callback' => 'user_access',
		'access arguments' => array('pm_interstitial configure settings'),
		'weight' => 0,
    );

	$items['admin/config/participant-media/interstitials/settings'] = array(
		'title' => 'Global Settings',
		'description' => 'Global settings for marketing interstitials',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('pm_interstitial_admin_form'),
		'access callback' => 'user_access',
		'access arguments' => array('pm_interstitial configure settings'),
		'weight' => 1,
	);

	$items['admin/config/participant-media/interstitials/newsletter'] = array(
		'title' => 'Newsletter',
		'description' => 'Newsletter interstitial settings',
		'type' => MENU_LOCAL_TASK,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('pm_interstitial_newsletter_form'),
		'access callback' => 'user_access',
		'access arguments' => array('pm_interstitial configure settings'),
		'weight' => 2,
	);

	$items['admin/config/participant-media/interstitials/social'] = array(
		'title' => 'Social Follow',
		'description' => 'Social Follow interstitial settings',
		'type' => MENU_LOCAL_TASK,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('pm_interstitial_social_form'),
		'access callback' => 'user_access',
		'access arguments' => array('pm_interstitial configure settings'),
		'weight' => 3,
	);

	$items['interstitials/%'] = array(
		'description' => t('interstitial iframe'),
		'page callback' => 'pm_interstitial_page',
		'page arguments' => array(1),
		'access callback' => TRUE,
	);

	return $items;
}


function pm_interstitial_page($type) {

	global $base_url;
	$path = $base_url.base_path().drupal_get_path('module', 'pm_interstitial');

	// Include CSS & JS
	drupal_add_css($path.'/css/interstitial.css');
	drupal_add_css($path.'/css/'.$type.'.css');
	drupal_add_js($path.'/js/'.$type.'.js');


	switch($type) {
	case 'newsletter':

		drupal_set_title(variable_get('pm_interstitial_newsletter_page_title'));

		$config = array(
			'email_label' => variable_get('pm_interstitial_newsletter_email_label', ''),
			'name' => variable_get('pm_interstitial_newsletter_name',''),
			'source' => variable_get('pm_interstitial_newsletter_signup_source',''),
			'header' => variable_get('pm_interstitial_newsletter_form_header',''),
			'email_placeholder' => variable_get('pm_interstitial_newsletter_email_placeholder',''),
			'submit_caption' => variable_get('pm_interstitial_newsletter_submit_caption',''),
			'footer' => variable_get('pm_interstitial_newsletter_footer',''),
			'thank_you_message' => variable_get('pm_interstitial_newsletter_thank_you', ''),
		);

		$vars = array(
			'image' => theme('image', array(
				'path' => variable_get('pm_interstitial_newsletter_header_image', ''),
				'alt' => variable_get('pm_interstitial_newsletter_header_alt', ''),
			)),
			'header' => variable_get('pm_interstitial_newsletter_header', ''),
			'body' => variable_get('pm_interstitial_newsletter_body', ''),
			// This could probably be merged into $content or something
			'newsletter_form' => drupal_render(drupal_get_form('newsletter_campaign_email_only_signup_form', $config)),
			'do_not_show' => variable_get('pm_interstitial_newsletter_dont_show_text', ''),
		);

		return array('content' => theme('pm_interstitial_newsletter', $vars));
		break;

	case 'social-follows':

		drupal_set_title(variable_get('pm_interstitial_social_page_title'));

		$vars = array(
			'image' => theme('image', array(
				'path' => variable_get('pm_interstitial_social_header_image', ''),
				'alt' => variable_get('pm_interstitial_social_header_alt', ''),
			)),
			'header' => variable_get('pm_interstitial_social_header', ''),
			'body' => variable_get('pm_interstitial_social_body', ''),
			// This could probably be merged into $content or something
			'facebook' => l(theme('image', array(
					'path' => variable_get('pm_interstitial_social_fb_image', ''),
					'alt' => variable_get('pm_interstitial_social_fb_alt', ''),
				)), variable_get('pm_interstitial_social_fb_url',''), array(
					'target' => '_blank',
					'html' => true,
					'attributes' => array(
						'data-service' => variable_get('pm_interstitial_social_fb_token', 'facebook'),
						'class' => array('social-link', 'tplinkpos'), 
					),
				)
			),
			'twitter' => l(theme('image', array(
					'path' => variable_get('pm_interstitial_social_twitter_image', ''),
					'alt' => variable_get('pm_interstitial_social_twitter_alt', ''),
				)), 'https://www.twitter.com/'.str_replace('@','',variable_get('pm_interstitial_social_twitter_url','')), array(
					'target' => '_blank',
					'html' => true,
					'attributes' => array(
						'data-service' => variable_get('pm_interstitial_social_twiter_token', 'twitter'),
						'class' => array('social-link', 'tplinkpos'), 
					),
				)
			),
			'thank_you' => variable_get('pm_interstitial_social_thank_you', ''),
			'footer' => variable_get('pm_interstitial_social_footer', ''),
			'do_not_show' => variable_get('pm_interstitial_social_dont_show_text', ''),
		);

		return array('content' => theme('pm_interstitial_social_follows', $vars));
		break;
	}
}


function pm_interstitial_theme() {

	return array(
		'pm_interstitials' => array(
			'variables' => array(
				'header' => '',
				'content' => '',
				'footer' => '',
			),
			'arguments' => array(),
			'render element' => 'page',
			'template' => 'theme/pm_interstitials',
		),
		'pm_interstitial_newsletter' => array(
			'variables' => array(
				'header' => variable_get('pm_interstitial_newsletter_header', ''),
				'body' => variable_get('pm_interstitial_newsletter_body',''),
				'thank_you' => variable_get('pm_interstitial_newsletter_thank_you',''),
				'footer' => variable_get('pm_interstitial_newsletter_footer',''),
				'do_not_show' => variable_get('pm_interstitial_newsletter_dont_show_text',''),
			),
			'template' => 'theme/pm_interstitial_newsletter'
		),
		'pm_interstitial_social_follows' => array(
			'variables' => array(
				'header' => variable_get('pm_interstitial_social_header', ''),
				'body' => variable_get('pm_interstitial_social_body',''),
				'thank_you' => variable_get('pm_interstitial_social_thank_you',''),
				'footer' => variable_get('pm_interstitial_social_footer',''),
				'do_not_show' => variable_get('pm_interstitial_social_dont_show_text',''),
			),
			'template' => 'theme/pm_interstitial_social_follows'
		),
	);

}


/**
 * Implements hook_preprocess_page()
 */
function pm_interstitial_preprocess_page(&$variables){
  if (arg(0) === 'interstitials') {
	$variables['theme_hook_suggestions'][] = 'pm_interstitials';
  }
}

/**
 * Implements hook_permission().
 */
function pm_interstitial_permission() {
  return array(
    'pm_interstitial configure settings' => array(
      'title' => t('Configure global settings'),
      'description' => t('Configure the marketing interstitial global settings.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_context_registry().
 *
 * Registers the interstitial data attribute reaction.
 */
function pm_interstitial_context_registry() {
  return array(
    'reactions' => array(
      'pm_interstitial_referer' => array(
        'title' => t('Interstitial Referer'),
        'description' => t('Adds the marketing interstitial referer type to the page.'),
        'plugin' => 'pm_interstitial_referer',
      ),
    )
  );
}

/**
 * Implements hook_context_plugins().
 *
 * Provides the interstitial data attribute reaction.
 */
function pm_interstitial_context_plugins() {
  return array(
    'pm_interstitial_referer' => array(
      'handler' => array(
        'path' => drupal_get_path('module', 'pm_interstitial') . '/plugins',
        'file' => 'context.reactions.inc',
        'class' => 'InterstitialReaction',
        'parent' => 'context_reaction',
      ),
    ),
  );
}

/**
 * Implementation of hook_preprocess_html().
 *
 * Activates the interstitial data attribute reaction.
 */
function pm_interstitial_preprocess_html(&$vars) {

   global $user;
   // Don't bother signed in users.
   if ($user->uid === 0) {
     // Fire the provider url reaction with the current activation state.
     if ($plugin = context_get_plugin('reaction', 'pm_interstitial_referer')) {
       $cmpid = isset($_GET['cmpid']) ? $_GET['cmpid'] : '';
       $plugin->execute($vars, $cmpid);
     }
   }

  $current_path = current_path();
  if (arg(0) === 'interstitials') {
    $vars['theme_hook_suggestions'][] = 'html__entity_iframe__node';
  }
}

/**
 * Implements hook_block_info().
 */
function pm_interstitial_block_info() {
  return array(
    'interstitials' => array(
      'info' => t('Interstitial URLs'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function pm_interstitial_block_view($delta = '') {
  $interstitials = array(
    'newsletter' => 'Newsletter Interstitial',
    'social' => 'Social Interstitial',
  );
  $links = array();
  if ($delta === 'interstitials') {
    foreach($interstitials as $type => $label) {
      $url = InterstitialReaction::get_interstitial($type);
      if ($url !== FALSE) {
        $links[] = l($label, $url, array(
          'attributes' => array(
            'data-interstitial-type' => $type,
            'rel' => 'nofollow',
			'class' => array('interstitial'),
          ),
        ));
      }
    }
  }
  return array(
    'subject' => '',
    'content' => implode("\n", $links),
  );
}

/**
 * Implements hook_preprocess_block().
 */
function pm_interstitial_preprocess_block(&$variables) {
  $block = $variables['block'];
  if ($block->module === 'pm_interstitial' && $block->delta === 'interstitials') {
    $variables['classes_array'][] = 'element-invisible';
  }
}
