<?php
/**
 * @file
 * TakePart Campaign Redesign
 */

/**
 * Implements hook_help().
 */
function tp_campaigns_help($path, $arg) {
	switch ($path) {
		case 'admin/help#tp_campaigns':
			return '<p>' . t('Module for the Campaign Redesign, April 2014') . '</p>';		
	}
}

/**
 * Implements hook_block_info().
 */
function tp_campaigns_block_info(){
  $blocks = array();
  $blocks['tp_campaigns_hero'] = array(
    'info' => t('Campaign Hero')
   );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tp_campaigns_block_view($delta = ''){
  $block = array();
  switch ($delta) {
    case 'tp_campaigns_hero':
      $block['content'] = tp_campaigns_hero();
      break;
  }
  return $block;
}

/**
 * Implements hook_theme
 */
function tp_campaigns_theme() {
  return array(
    'tp_card_tray' => array(
      'template' => 'field-formatter--card-tray',
      'variables' => array(
        'items' => array(),
        'entity' => '',
      )
    ),
    'tp_card_reference' => array(
      'template' => 'field-formatter--card-reference',
      'variables' => array(
        'items' => array(),
        'entity' => '',
      )
    ),
    'tp_campaigns_hero' => array(
      'template' => 'campaign-hero',
      'variables' => array(
        'items' => array(),
        'entity' => '',
        'campaign_node' => '',

      )
    )
  );
}

/*
 * Implements hook_field_formatter_info()
 */
function tp_campaigns_field_formatter_info(){
  return array(
    'tp_card_tray' => array(
      'label' => t('Card Tray'),
      'field types' => array('entityreference'),
    ),
    'tp_card_reference' => array(
      'label' => t('Card Reference'),
      'field types' => array('entityreference'),
    ),
  );
}

/*
 * Implements hook_field_formatter_view()
 */
function tp_campaigns_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display){
  $element = array();
  $settings = $display['settings'];
  switch($display['type']){
    case 'tp_card_tray':
      $element = array(
        '#theme' => 'tp_card_tray',
        '#items' => $items,
        '#entity' => $entity,
      );
    break;
    case 'tp_card_reference':
      $element = array(
        '#theme' => 'tp_card_reference',
        '#items' => $items,
        '#entity' => $entity,
      );
    break;
  }
  return $element;
}

/*
 * Implements hook_init
 */
function tp_campaigns_init(){
  $card_types = array(
    'campaign_card_media',
    'campaign_card_iframe',
    'campaign_card_social',
    'campaign_card_news',
    );
  variable_set('card_types', $card_types);
}




//hook form alter
function tp_campaigns_form_alter(&$form, &$form_state, $form_id){
  // There is a bug with jQuery Update and Drupal Core that makes the code below poop on everything
  // $form['field_campaign_content_side']['#states'] = array(
  //   'visible' => array(   // action to take.
  //     ':input[name=field_campaign_media_col\[und\]]' => array(
  //       array('value' => 1 ),
  //       array('value' => 2 ),
  //       array('value' => 3 ),
  //     ),
  //   ),
  // );
  
  //Campaign Media Card
  $form['field_campaign_media_photo']['#states'] = array(
    'visible' => array(   // action to take.
      ':input[name=field_campaign_media_type\[und\]]' => array('value' => 0),
    ),
  );
  $form['field_campaign_media_video']['#states'] = array(
    'visible' => array(   // action to take.
      ':input[name=field_campaign_media_type\[und\]]' => array('value' => 1),
    ),
  );
  
  //Campaign News Card
  $form['field_campaign_single_news_ref']['#states'] = array(
    'visible' => array(   // action to take.
      ':input[name=field_campaign_news_type\[und\]]' => array('value' => 0),
    ),
  );
  $form['field_campaign_multi_news_ref']['#states'] = array(
    'visible' => array(   // action to take.
      ':input[name=field_campaign_news_type\[und\]]' => array('value' => 1),
    ),
  );
  $form['field_campaign_news_filter_tag']['#states'] = array(
    'visible' => array(   // action to take.
      ':input[name=field_campaign_news_type\[und\]]' => array('value' => 1),
    ),
  );

}

function tp_campaigns_form_campaign_node_form_alter(&$form, &$form_state){

  //if the menu has a value, disable it
  if(isset($form_state['node']->field_campaign_menu['und'][0]['value']) == TRUE){
    $form['field_campaign_menu']['#disabled'] = TRUE;
    $form['field_campaign_menu']['#attributes']['class'][] = 'disabled';
  }
}

/*
 * Create us some menus.
 */
function tp_campaigns_node_presave($node) {
  if($node->type == 'campaign' && isset($node->field_campaign_menu['und'][0]['value']) == true){
  
    //check to see if menu exists, if it doesn't, create it.  
    $menu_name = $node->field_campaign_menu['und'][0]['value'];
    if(menu_tree_all_data($menu_name) == NULL){
      $menu = array(
       'menu_name' => 'menu-'. $menu_name,
       'title' => $node->title,
       'description' => 'Campaign Menu For '. $node->title,
      );
    }
    menu_save($menu); //uncomment this line when ready and no longer testing
  }
}


function tp_campaigns_hero(){
  // code for the tp campaigns block
  $node = 'node';
  $node = node_load(arg(1));
  if(isset($node->field_campaign_reference['und'][0]['target_id']) == true){
    $node = $node->field_campaign_reference['und'][0]['target_id'];
    $campaign_node = node_load($node);
  }

  return theme('tp_campaigns_hero', array('campaign_node' => $campaign_node));
}







