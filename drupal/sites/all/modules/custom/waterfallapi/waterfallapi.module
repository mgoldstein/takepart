<?php

include(drupal_get_path('module', 'waterfallapi') . '/includes/waterfallapi.inc');

function waterfallapi_block_info() {
  $blocks = array();

  $blocks['waterfallsubscription'] = array(
    'info' => t('Waterfall Subscription Block')
  );

  return $blocks;
}

function waterfallapi_block_configure($delta = '') {

  $form = array();
  if ($delta == 'waterfallsubscription') {
    $form['waterfallsubscriptioncelltitle'] = array(
		'#type' => 'textfield',
		'#title' => t('Cell Title'),
		'#size' => 60,
		'#description' => t('Title for cell field.'),
		'#default_value' => variable_get('waterfallsubscriptioncelltitle',  ''),
    );
    $form['waterfallsubscriptionziptitle'] = array(
		'#type' => 'textfield',
		'#title' => t('ZIP Title'),
		'#size' => 60,
		'#description' => t('Title for ZIP field.'),
		'#default_value' => variable_get('waterfallsubscriptionziptitle',  ''),
    );
     $form['waterfallsubscriptiontext'] = array(
		'#type' => 'textarea',
		'#title' => t('Block Contents'),
		'#cols' => 60,
		'#rows' => 5,
		'#description' => t('This text will appear above the cellphone entry in the waterfall subscription block.'),
		'#default_value' => variable_get('waterfallsubscriptiontext',  ''),
    );
    $form['waterfallsubscriptionsubtext'] = array(
		'#type' => 'textarea',
		'#title' => t('Block SubText Contents'),
		'#cols' => 60,
		'#rows' => 5,
		'#description' => t('This text will appear below the zip entry in the waterfall subscription block.'),
		'#default_value' => variable_get('waterfallsubscriptionsubtext',  ''),
    );
    $form['waterfallsubscriptionSMS'] = array(
		'#type' => 'textarea',
		'#title' => t('SMS Text'),
		'#cols' => 60,
		'#rows' => 5,
		'#description' => t('Text to send in SMS message.'),
		'#default_value' => variable_get('waterfallsubscriptionSMS',  ''),
    );
    $form['waterfallsubscriptionSMSConfirm'] = array(
		'#type' => 'textarea',
		'#title' => t('SMS Confirmation Message'),
		'#cols' => 60,
		'#rows' => 5,
		'#description' => t('Confirmation message.'),
		'#default_value' => variable_get('waterfallsubscriptionSMSConfirm',  ''),
    );
    $form['waterfallsubscriptionHappyMsg'] = array(
		'#type' => 'textarea',
		'#title' => t('Success Message'),
		'#cols' => 60,
		'#rows' => 3,
		'#default_value' => variable_get('waterfallsubscriptionHappyMsg', 'This cell phone number is now registered'),
    );
    $form['waterfallsubscriptionUnHappyMsg'] = array(
		'#type' => 'textarea',
		'#title' => t('Success Message'),
		'#cols' => 60,
		'#rows' => 3,
		'#default_value' => variable_get('waterfallsubscriptionUnHappyMsg', 'Invalid phone number'),
    );

  }
  return $form;
}

function waterfallapi_block_save($delta = '', $edit = array()) {
  if ($delta == 'waterfallsubscription') {
    variable_set('waterfallsubscriptiontext', $edit['waterfallsubscriptiontext']);
    variable_set('waterfallsubscriptioncelltitle', $edit['waterfallsubscriptioncelltitle']);
    variable_set('waterfallsubscriptionziptitle', $edit['waterfallsubscriptionziptitle']);
    variable_set('waterfallsubscriptionsubtext', $edit['waterfallsubscriptionsubtext']);
    variable_set('waterfallsubscriptionSMS', $edit['waterfallsubscriptionSMS']);
    variable_set('waterfallsubscriptionSMSConfirm', $edit['waterfallsubscriptionSMSConfirm']);
    variable_set('waterfallsubscriptionHappyMsg', $edit['waterfallsubscriptionHappyMsg']);
    variable_set('waterfallsubscriptionUnHappyMsg', $edit['waterfallsubscriptionUnHappyMsg']);
  }
  return;
}


function waterfallapi_block_view($delta = '') {
  switch ($delta) {
    case 'waterfallsubscription':
	  drupal_add_css (drupal_get_path('module', 'waterfallapi') . '/waterfallapi.css');
	  drupal_add_js (drupal_get_path('module', 'waterfallapi') .'/waterfallapi.js');
	  $block['subject'] = t('Waterfall SMS Block');
	  $block['content'] = waterfallapi_block_contents($delta);
	  break;
  }
  return $block;
}


function waterfallapi_block_contents($which_block) {
  switch ($which_block) {
    case 'waterfallsubscription':
      return array('waterfallsubscriptiontext' => array('#markup' => "<div class=\"waterfallsubscriptiontext\">" . variable_get('waterfallsubscriptiontext', '') . "</div>",),
        	'form' => drupal_get_form('waterfallapi_form'),
        	'waterfallsubscriptionsubtext' => array('#markup' => "<div class=\"waterfallsubscriptionsubtext\">" . variable_get('waterfallsubscriptionsubtext', '') . "</div>",),
        	);

  }
}


function waterfallapi_menu() {
  $items['admin/reports/waterfallapi'] = array(
    'page callback' => 'waterfallapi_page',
    'access callback' => TRUE,
    'title' => 'Waterfall API',
  );
  return $items;
}

function waterfallapi_page() {
  global $user; 
  $nbr_records = db_query("SELECT count(msisdns) FROM {waterfallapi_signups}")->fetchField();
  $title = "<h2>" . $nbr_records . " Records</h2>";

  $page = array(
    '#type' => 'markup',
    '#markup' => $title . waterfallapi_generate_report(),
  );
  //logged in only:
  if($user->uid != 0) {
  	return $page;
  }
}

function waterfallapi_generate_report() {
  $query = db_select('waterfallapi_signups', 'entries')
    ->extend('PagerDefault')
    ->fields('entries', array('msisdns', 'zip', 'created'))
    ->orderBy('created', 'DESC')
    ->limit(20);

  $result = $query->execute();
  $output = '<table>';
  foreach ($result as $row) {
    $output .= '<tr><td>' . $row->msisdns .'</td><td>' . $row->zip .
    '</td><td>' . date('Y-m-d h:i:s',$row->created) .'</td></tr>' ;
  }
  $output .= '</table>';

  $output .= theme('pager');
  return $output;
}

function waterfallapi_form($form, &$form_state) {
    $form = array();

	$form['cellphone'] = array(
		'#type' => 'fieldset',
		'#title' => variable_get('waterfallsubscriptioncelltitle', t('Enter Your Cell Phone Number:')),
		'#collapsible' => FALSE,
		'#collapsed' => FALSE,
		'#attributes' => array('class' => array('cellphone')),
	);


	$form['cellphone']['areacode'] = array(
		'#type' => 'textfield',
		'#size' => 3,
		'#maxlength' => 3,
		'#attributes' => array('class' => array('areacode')),
	);

	$form['cellphone']['phone1'] = array(
		'#type' => 'textfield',
		'#size' => 3,
		'#maxlength' => 3,
		'#attributes' => array('class' => array('phone1')),
	);

	$form['cellphone']['phone2'] = array(
		'#type' => 'textfield',
		'#size' => 4,
		'#maxlength' => 4,
		'#attributes' => array('class' => array('phone2')),
	);

	$form['zip'] = array(
		'#type' => 'fieldset',
		'#title' => variable_get('waterfallsubscriptionziptitle', t('Enter Your Zip Code to Get Local Tips:') . '<div>(Optional)</div>'),
		'#collapsible' => FALSE,
		'#collapsed' => FALSE,
		'#attributes' => array('class' => array('zip')),
	);

	$form['zip']['zipcode'] = array(
		'#type' => 'textfield',
		'#size' => 5,
		'#maxlength' => 5,
		'#attributes' => array('class' => array('zipcode')),
	);

    $form['zip']['submit'] = array (
        '#type' => 'submit',
        '#value' => 'Subscribe',
    );

    $form['zip']['submit']['#ajax'] = array(
      'callback' => 'waterfallapi_form_callback',
      'wrapper' => 'waterfallapi-form',
      'method' => 'replace',
      'effect' => 'fade',
    );

    return $form;
}

function waterfallapi_form_callback($form, &$form_state) {
	return $form;
}

function waterfallapi_form_validate($form, &$form_state) {
	if(!is_numeric($form['cellphone']['areacode']['#value'])) form_set_error('Phone Number', t(variable_get('waterfallsubscriptionUnHappyMsg', 'Invalid phone number')));
	if(!is_numeric($form['cellphone']['phone1']['#value'])) form_set_error('Phone Number', t(variable_get('waterfallsubscriptionUnHappyMsg', 'Invalid phone number')));
	if(!is_numeric($form['cellphone']['phone2']['#value'])) form_set_error('Phone Number', t(variable_get('waterfallsubscriptionUnHappyMsg', 'Invalid phone number')));
	if(($form['zip']['zipcode']['#value'] != '') && (!is_numeric($form['zip']['zipcode']['#value']))) {
		form_set_error('Zip Code', t('The Zip code must be numeric.'));
	}
}

function waterfallapi_form_submit($form, &$form_state) {
	global $user; 
	$canadian = false;
	$areacode = $form['cellphone']['areacode']['#value'];
	$prefix = $form['cellphone']['phone1']['#value'];
	$line = $form['cellphone']['phone2']['#value'];
	$zip = $form['zip']['zipcode']['#value'];
	$waterFallAPI = new waterFallAPI;
	$getCanadianAreaCodes = $waterFallAPI->getCanadianAreaCodes();
	$canadian = in_array($areacode, $getCanadianAreaCodes);
	$waterFallAPI->authenticate('TakePart','sms4takepart');
	if($canadian) { //Canada:
		$shortcode = '505b80e60364fb7d2e2f10e6';
		$listid = '50b6b8fb0cf2d5cf4a820402';
		$flowid = '50b6b92d0cf2d5cf4a82042a';
		$waterFallAPI->setSessionShortCode($shortcode);
	} else { //US:
		$shortcode = '50ac121203644bd985ef24d4';
		$listid = '50b6b8990cf2d5cf4a8203ad';
		$flowid = '50b6ba030cf2d5cf4a820510';
		$waterFallAPI->setSessionShortCode($shortcode);
	}

    //@todo: some of these fields are no longer needed:
	$subinfo = $waterFallAPI->addSubscriber($listid, $areacode.$prefix.$line, 
											array(
			    								'50b4fbf80cf2d5cf4a7e15e5'  => $zip
			    							),  
			    							variable_get('waterfallsubscriptionSMS',  ''), 
			    							variable_get('waterfallsubscriptionSMSConfirm',  ''),
			    							$flowid, $shortcode);

    $waterFallAPI->addMetadata(array('50b4fbf80cf2d5cf4a7e15e5'  => $zip), $areacode.$prefix.$line);
	
	$result = db_insert('waterfallapi_signups')->fields(array(
		  'msisdns' => $areacode.$prefix.$line,
		  'zip' => $zip,
		  'uid' => $user->uid,
		  'created' => time(),
		))->execute();

	drupal_set_message(t(variable_get('waterfallsubscriptionHappyMsg', 'This cell phone number is now registered')), 'status');

	return $form;

}