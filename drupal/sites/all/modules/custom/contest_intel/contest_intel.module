<?php

define('ENTRY_FORM_ID', 137);
define('FIRST_NAME_FIELD_ID', 2725);
define('LAST_NAME_FIELD_ID', 2727);
define('EMAIL_FIELD_ID', 2723);
define('AGE_CHECK_FIELD_ID', 2882);
define('ABOUT_YOU_FIELD_ID', 2883);
define('TRIP_VISIT_FIELD_ID', 2884);
define('VIDEO_FIELD_ID', 2737);
define('AGREE_TO_RULES_FIELD_ID', 2885);
define('AGREE_TO_SHARE_FIELD_ID', 2886);

function contest_intel_preprocess_markup($markup) {
  $allowed_tags = '<a><b><i><strong><em><br><br/><img><p><ul><ol><li>'
    . '<blockquote><hr><hr/><h1><h2><h3><h4><h5><h6>';
  $markup = strip_tags($markup, $allowed_tags);
  $markup = str_replace(array("\r\n", "\r"), "\n", $markup);
  $markup = str_replace("\n\n\n", '</p><p>', $markup);
  $markup = str_replace("\n\n", '<br/>', $markup);
  return $markup;
}

function contest_intel_entry_form_defaults($config) {
  $default_config = array(
    'required_label' => t('<p>All fields required.</p>'),
    'first_name_label' => t('First Name'),
    'last_name_label' => t('Last Name'),
    'email_label' => t('Email'),
    'age_check_label' => t('Are you the age of majority in your state of residence?'),
    'about_you_label' => t('About You'),
    'about_you_description' => '',
    'trip_visit_label' => t('Which country would you prefer to visit on the trip? (Choose one.)'),
    'video_label' => t('Upload Your Video'),
    'video_description' => '',
    'contest_rules_label' => t('I agree to <a href="@rules">Official Contest Rules and Submission Agreement</a>', array(
      '@rules' => url('rules'),
    )),
    'share_info_label' => t('I agree that TakePart can share my information with Intel and Me to We'),
    'terms_of_use' => t('<p>Subject to <a href="@privacy">TakePart Privacy Policy</a> and <a href="@tos">Terms of Use</a></p>', array(
      '@privacy' => url('privacy-policy'),
      '@tos' => url('terms-of-use'),
    )),
    'submit_caption' => t('Submit Application'),
  );

  foreach ($default_config as $name => $value) {
    if (empty($config[$name])) {
      $config[$name] = $value;
    }
  }

  return $config;
}

/**
 * Configuration form
 */
function contest_intel_entry_configuration($form, $config) {

  $config = contest_intel_entry_form_defaults($config);

  $form['required_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Required Label'),
    '#default_value' => $config['required_label'],
  );

  $form['first_name_label'] = array(
    '#type' => 'textfield',
    '#title' => t('First Name Label'),
    '#default_value' => $config['first_name_label'],
  );

  $form['last_name_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name Label'),
    '#default_value' => $config['last_name_label'],
  );

  $form['email_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Label'),
    '#default_value' => $config['email_label'],
  );

  $form['age_check_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Age Check Label'),
    '#default_value' => $config['age_check_label'],
  );

  $form['about_you_label'] = array(
    '#type' => 'textfield',
    '#title' => t('About You Label'),
    '#default_value' => $config['about_you_label'],
  );

  $form['about_you_description'] = array(
    '#type' => 'textarea',
    '#title' => t('About You Description'),
    '#default_value' => $config['about_you_description'],
  );

  $form['trip_visit_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Trip Visit Label'),
    '#default_value' => $config['trip_visit_label'],
  );

  $form['video_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Video Label'),
    '#default_value' => $config['video_label'],
  );

  $form['video_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Video Description'),
    '#default_value' => $config['video_description'],
  );

  $form['contest_rules_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Contest Rules Label'),
    '#default_value' => $config['contest_rules_label'],
  );

  $form['share_info_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Share Info Label'),
    '#default_value' => $config['share_info_label'],
  );

  $form['terms_of_use'] = array(
    '#type' => 'textfield',
    '#title' => t('Terms of Use'),
    '#default_value' => $config['terms_of_use'],
  );

  $form['submit_caption'] = array(
    '#type' => 'textfield',
    '#title' => t('Submit Caption'),
    '#default_value' => $config['submit_caption'],
  );

  $form['thank_you_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Thank You'),
    '#default_value' => $config['thank_you_message'],
  );

  $form['signup_error_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Signup Error Message'),
    '#default_value' => $config['signup_error_message'],
  );

  return $form;
}

/**
 * Entry form
 */
function contest_intel_entry_form($form, &$form_state, $config) {

  $config = contest_intel_entry_form_defaults($config);
  $form_state['contest_intel_entry'] = array(
    'selector' => '#contest-intel-entry-form',
    'config' => $config,
  );

  $form['required_label'] = array(
    '#type' => 'markup',
    '#markup' => contest_intel_preprocess_markup($config['required_label']),
  );

  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => $config['first_name_label'],
  );

  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => $config['last_name_label'],
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => $config['email_label'],
  );

  $form['age_check'] = array(
    '#type' => 'radios',
    '#title' => $config['age_check_label'],
    '#options' => array(
      'yes' => t('Yes'),
      'no' => t('No'),
    ),
  );

  $form['about_you'] = array(
    '#type' => 'radios',
    '#title' => $config['about_you_label'],
    '#visible_description' => contest_intel_preprocess_markup($config['about_you_description']),
    '#options' => array(
      'access to clean water' => t('Access to Clean Water'),
      'human trafficking' => t('Human Trafficking'),
      'health and sanitation' => t('Health & Sanitation'),
      'classroom access' => t('Classroom Access & Supplies'),
      'early marriage' => t('Early Marriage'),
      'graduation rates' => t('Graduation Rates'),
    ),
    '#theme_wrappers' => array(
      'radios',
      'contest_intel_visible_description',
    ),
  );

  $form['trip_visit'] = array(
    '#type' => 'radios',
    '#title' => $config['trip_visit_label'],
    '#options' => array(
      'Ecuador' => t('Ecuador'),
      'India' => t('India'),
      'Kenya' => t('Kenya'),
      'no preference' => t('No Preference'),
    ),
  );

  $form['video'] = array(
    '#type' => 'textfield',
    '#title' => $config['video_label'],
    '#visible_description' => contest_intel_preprocess_markup($config['video_description']),
    '#theme_wrappers' => array(
      'contest_intel_visible_description',
      'form_element',
    ),
  );

  $form['agree_to_rules'] = array(
    '#type' => 'checkbox',
    '#title' => $config['contest_rules_label'],
  );

  $form['agree_to_share'] = array(
    '#type' => 'checkbox',
    '#title' => $config['share_info_label'],
  );

  $form['terms_of_use'] = array(
    '#type' => 'markup',
    '#markup' => contest_intel_preprocess_markup($config['terms_of_use']),
  );

  $form['actions'] = array(
    '#type' => 'actions',
    '#weight' => 40,
  );
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => $config['submit_caption'],
    '#weight' => 40,
    '#ajax' => array(
      'callback' => 'contest_intel_entry_form_callback',
      'progress' => array(
        'type' => 'throbber',
        'message' => NULL,
      ),
    ),
  );

  if (!isset($form['#pre_render'])) {
    $form['#pre_render'] = array();
  }
  array_unshift($form['#pre_render'], 'contest_intel_entry_form_pre_render');

  return $form;
}

/**
 * Entry form validation
 */
function contest_intel_entry_form_validate($form, &$form_state) {

  $first_name = trim($form_state['values']['first_name']);
  if (strlen($first_name) == 0) {
    form_set_error('first_name', t('Please enter your first name.'));
  }

  $last_name = trim($form_state['values']['last_name']);
  if (strlen($last_name) == 0) {
    form_set_error('last_name', t('Please enter your last name.'));
  }

  $email = trim($form_state['values']['email']);
  if (strlen($email) == 0) {
    form_set_error('email', t('Please enter your email.'));
  }

  $age_check = trim($form_state['values']['age_check']);
  if (empty($age_check)) {
    form_set_error('age_check', t('Please select one below.'));
  }

  $about_you = trim($form_state['values']['about_you']);
  if (empty($about_you)) {
    form_set_error('about_you', t('Please select one below.'));
  }

  $trip_visit = trim($form_state['values']['trip_visit']);
  if (empty($trip_visit)) {
    form_set_error('trip_visit', t('Please select one below.'));
  }

  $video = trim($form_state['values']['video']);
  if (strlen($video) == 0) {
    form_set_error('video', t('Please paste a link to your video.'));
  }

  $agree_to_rules = trim($form_state['values']['agree_to_rules']);
  if (empty($agree_to_rules)) {
    form_set_error('agree_to_rules', t('If you would like to enter the Intel for Change contest, please agree to the Official Contest Rules.'));
  }

  $agree_to_share = trim($form_state['values']['agree_to_share']);
  if (empty($agree_to_share)) {
    form_set_error('agree_to_share', t('If you would like to enter the Intel for Change contest, please agree that we can share your information with third parties.'));
  }
}

/**
 * Entry form submit
 */
function contest_intel_entry_form_submit($form, &$form_state) {

  $mapping = array(
    'first_name' => FIRST_NAME_FIELD_ID,
    'last_name' => LAST_NAME_FIELD_ID,
    'email' => EMAIL_FIELD_ID,
    'age_check' => AGE_CHECK_FIELD_ID,
    'about_you' => ABOUT_YOU_FIELD_ID,
    'trip_visit' => TRIP_VISIT_FIELD_ID,
    'video' => VIDEO_FIELD_ID,
    'agree_to_rules' => AGREE_TO_RULES_FIELD_ID,
    'agree_to_share' => AGREE_TO_SHARE_FIELD_ID,
  );

  $args = $form_state['contest_intel_entry'];
  $config = $args['config'];

  $form_state['contest_intel_entry_signup_failed'] = FALSE;
  try {

    $api = bluestatedigital_get_api('signup');
    $fields = $api->listFormFields(ENTRY_FORM_ID);

    foreach ($mapping as $name => $id) {
      $fields[$id]['value'] = array(
        'type' => 'value',
        'value' => $form_state['values'][$name],
      );
    }

    $signup = array(ENTRY_FORM_ID => $fields);
    $api->processSignup($signup);
  }
  catch (BlueStateDigitalApiException $ex) {
    $form_state['contest_intel_entry_signup_failed'] = TRUE;
    $message = 'Error sending contest entry [@code] @body';
    watchdog('contest_intel', $message, array(
      '@code' => $ex->getResponseCode(),
      '@body' => $ex->getResponseBody(),
    ));
  }
}

/**
 * Entry form AJAX callback
 */
function contest_intel_entry_form_callback($form, &$form_state) {

  // Standard form submission stuff.
  $commands = array();

  $args = $form_state['contest_intel_entry'];
  $selector = $args['selector'];

  $errors = form_get_errors();
  if (empty($errors) && !$form_state['contest_intel_entry_signup_failed']) {
    $config = $args['config'];
    $message = contest_intel_preprocess_markup($config['thank_you_message']);
    $message = '<div class="thank-you-message"><p>' . $message . '</p></div>';
    $commands[] = ajax_command_replace($selector, $message);
  }
  elseif ($form_state['contest_intel_entry_signup_failed']) {
    $config = $args['config'];
    $message = contest_intel_preprocess_markup($config['signup_error_message']);
    $message = '<div class="signup-error-message"><p>' . $message . '</p></div>';
    $commands[] = ajax_command_replace($selector, $message);
  }
  else {
    $markup = drupal_render($form);
    $commands[] = ajax_command_replace($selector, $markup);
  }

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}

function contest_intel_entry_form_pre_render($element) {
  $errors = form_get_errors();
  if ($errors) {
    foreach ($errors as $field => $error) {
      $element[$field]['#inline_error_message'] = $error;
      array_unshift($element[$field]['#theme_wrappers'], 'contest_intel_inline_error_message');
    }
  }
  return $element;
}

function contest_intel_theme() {
  return array(
    'contest_intel_visible_description' => array(
      'render element' => 'element',
    ),
    'contest_intel_inline_error_message' => array(
      'render element' => 'element',
    ),
  );
}

function theme_contest_intel_visible_description($variables) {
  $element = $variables['element'];
  if (isset($element['#visible_description'])) {
  return '<div class="visible-description">' . $element['#visible_description'] . '</div>' . $element['#children'];
  }
  return $element['#children'];
}

function theme_contest_intel_inline_error_message($variables) {
  $element = $variables['element'];
  if (isset($element['#inline_error_message'])) {
  return '<p class="error">' . $element['#inline_error_message'] . '</p>' . $element['#children'];
  }
  return $element['#children'];
}
