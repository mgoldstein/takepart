<?php

/**
 * Implements hook_watchdog().
 */
function tp_custom_log_watchdog(array $log_entry) {
  global $base_url;

  if(drupal_is_cli()) {
    return TRUE;
  }
  $message = strtr(variable_get('syslog_format', '!base_url|!timestamp|!type|!ip|!request_uri|!referer|!uid|!link|!message'), array(
    '!base_url'    => $base_url,
    '!timestamp'   => $log_entry['timestamp'],
    '!type'        => $log_entry['type'],
    '!ip'          => $log_entry['ip'],
    '!request_uri' => $log_entry['request_uri'],
    '!referer'     => $log_entry['referer'],
    '!uid'         => $log_entry['uid'],
    '!link'        => strip_tags($log_entry['link']),
    '!message'     => strip_tags(!isset($log_entry['variables']) ? $log_entry['message'] : strtr($log_entry['message'], $log_entry['variables'])),
  ));

  $log_types = explode(',',variable_get('tp_custom_log_types', 'drupal'));

  if(in_array($log_entry['type'], $log_types)) {
    if(!file_exists($realpath.'/log')) {
      if ($wrapper = file_stream_wrapper_get_instance_by_uri('public://')) {
        $realpath = $wrapper->realpath();
        file_put_contents($realpath.'/log/log_'.date("j.n.Y").'.txt', $message.PHP_EOL, FILE_APPEND);
        //Delete old logs Only do it once a day at max
        $custom_log_clean_date = variable_get('custom_log_clean_date',0);
        $now = time();
        if($custom_log_clean_date < ($now - 60*60*24)) {
          variable_set('custom_log_clean_date',$now);
          $files = glob($realpath.'/log/'."*");
          //Only delete files in the log that are 30 days old
          foreach ($files as $file)
            if (is_file($file))
              if ($now - filemtime($file) >= 60 * 60 * 24 * 30) // 30 days
                unlink($file);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tp_custom_log_form_system_logging_settings_alter(&$form, &$form_state) {
  $form['tp_custom_log_types'] = array(
    '#type'          => 'textfield',
    '#title'         => t('TP Custom Log Types'),
    '#default_value' => variable_get('tp_custom_log_types', 'drupal'),
    '#description'   => t('CSV of the different watchdog types that will be logged to a flat file.')
  );

  $form['actions']['#weight'] = 1;
}
