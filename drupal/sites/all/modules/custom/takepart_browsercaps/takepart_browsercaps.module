<?php

/**
 * Modes for testing
 */

define('TAKEPART_BROWSERCAPS_MODE_NORMAL', 0);
define('TAKEPART_BROWSERCAPS_MODE_FORCE_MOBILE', 1);
define('TAKEPART_BROWSERCAPS_MODE_FORCE_DESKTOP', 2);




/**
 * Implements hook_menu().
 */
function takepart_browsercaps_menu() {
  $items['admin/config/media/browsercaps/settings'] = array(
    'title' => 'Browsercaps settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('takepart_browsercaps_settings_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'takepart_browsercaps.admin.inc',
  );
  $items['test/sniffer'] = array(
    'title' => 'User Agent Sniffer',
    'page callback' => 'takepart_browsercaps_sniffer',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/***
 * Implementationof hook_init()
 *
 * creates global js var detected_mobile_browser
 * accessed as Drupal.settings.takepart_browsercaps.detected_mobile_browser
 *
 */
function takepart_browsercaps_init() {
  if (takepart_vidpop_mobile_browser()) {
    drupal_add_js(array('takepart_browsercaps' => array('detected_mobile_browser' => 1)), 'setting');
  }
  else {
    drupal_add_js(array('takepart_browsercaps' => array('detected_mobile_browser' => 0)), 'setting');
  }
}


/***
 * Display browsercaps test page
 *
 */
function takepart_browsercaps_sniffer() {
  drupal_set_title("User Agent Sniffer");

  $browsercaps = browscap_get_browser();
  $output = 'browser: ' . $browsercaps['parent'] . '<br />';
  $output .= "Mobile? ";
  $output .= takepart_vidpop_mobile_browser() ? 'yes' : 'no';
  $output .= '<pre>' . print_r($browsercaps, 1) . '</pre>';

  return $output;
}


/***
 * @file return true if an ipad was detected
 *
 * @return int
 */
function takepart_vidpop_is_ipad() {
  $browsercaps = browscap_get_browser();

  if (isset($browsercaps['parent'])) {
    if ((preg_match("/^Mobile.+/", $browsercaps['parent'])) && (preg_match("/^.*iPad.*/", $browsercaps['useragent']))) {
      // treat ipad as non-mobile
      return true;
    }
  }

  return false;
}


/***
 * @file return true if a mobile device was detected
 *
 * @return int
 */
function takepart_vidpop_mobile_browser() {
  $mode = variable_get('takepart_browsercaps_force', TAKEPART_BROWSERCAPS_MODE_NORMAL);
  switch ($mode) {
    case TAKEPART_BROWSERCAPS_MODE_FORCE_MOBILE:
      return true;

    case TAKEPART_BROWSERCAPS_MODE_FORCE_DESKTOP:
      return false;

    case TAKEPART_BROWSERCAPS_MODE_NORMAL:
      break;  // normal mode; process below
  }

  $browsercaps = browscap_get_browser();

  //watchdog('browsercaps', 'parent: ' . $browsercaps['parent'] . '  useragent: ' . $browsercaps['useragent']);
  /* typical values:
        ff, ubuntu:
        parent: Firefox 13.0 useragent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1

        atomic, ipad:
        parent: Mobile Safari 5.1 useragent: Mozilla/5.0 (iPad; U; CPU OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3

        safari, ipad:
        parent: Mobile Safari 6.0 useragent: Mozilla/5.0 (iPad; CPU OS 6_0_1 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A523 Safari/8536.25

        safari, iphone:
        parent: Mobile Safari 6.0 useragent: Mozilla/5.0 (iPhone; CPU iPhone OS 6_0_1 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A525 Safari/8536.25
  */
  if (isset($browsercaps['parent'])) {
    if (preg_match("/^Mobile.+/", $browsercaps['parent'])) {
      // iOS
      if (preg_match("/^.*iPad.*/", $browsercaps['useragent'])) {
        // treat ipad as non-mobile
        return false;
      }
      return true;
    }
    if (preg_match("/^Silk.*/", $browsercaps['parent'])) {
      // Kindle Fire
      return true;
    }
  }

  if (isset($browsercaps['useragent'])) {
    if (preg_match("/^.*Mobile.*/", $browsercaps['useragent'])) {
      // Droid
      return true;
    }
  }

  return false;
}


