<?php
/**
 * @file
 * Content Follow Up Module
 */

/* Entity
 ******************************************************************************/
/**
 * Implements hook_entity_info().
 */
function followup_entity_info() {

  $info = array();

  $info['followup'] = array(
    'label' => t('Follow Up'),
    'entity class' => 'FollowUp',
    'controller class' => 'FollowUpController',
    'base table' => 'followup',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'bundle' => 'type',
      'label' => 'title',
    ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'bundles' => array(),
    'view modes' => array(
      'full' => array(
        'label' => t('Full page'),
        'custom settings' => FALSE,
      ),
      'teaser' => array(
        'label' => t('Teaser'),
        'custom settings' => TRUE,
      ),
      'rss' => array(
        'label' => t('RSS'),
        'custom settings' => FALSE,
      ),
    ),
    'uri callback' => 'entity_class_uri',
    'access callback' => 'followup_access',
    'module' => 'followup',
    'admin ui' => array(
      'path' => 'node/%node/updates',
      'file' => 'followup.admin.inc',
      'controller class' => 'FollowUpUIController',
      'menu wildcard' => '%followup',
    ),
  );

  $info['followup_type'] = array(
    'label' => t('Follow Up Type'),
    'entity class' => 'FollowUpType',
    'controller class' => 'FollowUpTypeController',
    'base table' => 'followup_type',
    'fieldable' => FALSE,
    'bundle of' => 'followup',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'name' => 'type',
      'label' => 'label',
      'status' => 'status',
      'module' => 'module',
    ),
    'uri callback' => 'entity_class_uri',
    'access callback' => 'followup_access',
    'module' => 'followup',
    'admin ui' => array(
      'path' => 'admin/structure/followup_types',
      'file' => 'followup_type.admin.inc',
      'controller class' => 'FollowUpTypeUIController',
    ),
  );

  return $info;
}

/**
 * Implements hook_entity_info_alter().
 */
function followup_entity_info_alter(&$entity_info) {

  // Add the follow up types to the list of bundles for follow ups.
  foreach (followup_type_load() as $type => $info) {
    $entity_info['followup']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/followup_types/manage/%followup_type',
        'bundle argument' => 4,
        'real path' => 'admin/structure/followup_types/manage/' . $type,
        'access arguments' => array('administer followup followup_type'),
      ),
    );
  }
}

/**
 * Follow up type place holder loader.
 */
function followup_type_load($type_name = NULL) {
  $types = entity_load_multiple_by_name('followup_type',
    isset($type_name) ? array($type_name) : FALSE);
  return isset($type_name) ? reset($types) : $types;
}

/**
 * Follow up place holder loader.
 */
function followup_load($id = NULL) {
  $entities = entity_load('followup', isset($id) ? array($id) : FALSE);
  return isset($id) ? reset($entities) : $entities;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function followup_entity_property_info_alter(&$info) {
  $properties = &$info['followup']['properties'];
  $properties['created'] = array(
    'label' => t("Date created"),
    'type' => 'date',
    'description' => t("The date the follow up was created."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'update followup followup',
    'schema field' => 'created',
  );
  $properties['changed'] = array(
    'label' => t("Date changed"),
    'type' => 'date',
    'description' => t("The date the followup was last changed."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'update followup followup',
    'schema field' => 'changed',
  );
}

/**
 * Implements hook_field_extra_fields().
 */
function followup_field_extra_fields() {
  $extra = array('followup' => array());
  foreach (followup_type_load() as $type) {
    $extra['followup'][$type->type] = array(
      'form' => array(
        'title' => array(
          'label' => t('Title'),
          'description' => t('The title of the update'),
          'weight' => -10,
        ),
        'status' => array(
          'label' => t('Published'),
          'description' => t('The published status of the update'),
          'weight' => -5,
        ),
      ),
      'display' => array(
        'title' => array(
          'label' => t('Title'),
          'description' => t('The title of the update'),
          'weight' => -10,
        ),
      ),
    );
  }
  return $extra;
}


/* Access Control
 ******************************************************************************/
/**
 * Implements hook_permission().
 */
function followup_permission() {
  // Return permissions for the standard API entity operations.
  return array(
    'administer followup followup' => array(
      'title' => t('Administer Follow Ups'),
      'restrict access' => TRUE,
    ),
    'view followup followup' => array(
      'title' => t('View Follow Ups'),
      'restrict access' => TRUE,
    ),
    'update followup followup' => array(
      'title' => t('Update Follow Ups'),
      'restrict access' => TRUE,
    ),
    'create followup followup' => array(
      'title' => t('Create Follow Ups'),
      'restrict access' => TRUE,
    ),
    'delete followup followup' => array(
      'title' => t('Delete Follow Ups'),
      'restrict access' => TRUE,
    ),
    'administer followup followup_type' => array(
      'title' => t('Administer Follow Up Types'),
      'restrict access' => TRUE,
    ),
    'view followup followup_type' => array(
      'title' => t('View Follow Up Types'),
      'restrict access' => TRUE,
    ),
    'update followup followup_type' => array(
      'title' => t('Update Follow Up Types'),
      'restrict access' => TRUE,
    ),
    'create followup followup_type' => array(
      'title' => t('Create Follow Up Types'),
      'restrict access' => TRUE,
    ),
    'delete followup followup_type' => array(
      'title' => t('Delete Follow Up Types'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Access callback for follow ups.
 */
function followup_access($op, $entity, $account, $entity_type) {
  // Block unknown operations.
  $allowed_ops = array('administer', 'view', 'update', 'create', 'delete');
  if (in_array($op, $allowed_ops)) {
    return user_access("$op followup $entity_type", $account)
      || user_access("administer followup $entity_type", $account);
  }
  return FALSE;
}


/* Theming
 ******************************************************************************/
/**
 * Implements hook_theme().
 */
function followup_theme() {
  return array(
    'followup_add_list' => array(
      'variables' => array(
        'content' => NULL,
        'base_url' => NULL,
      ),
      'file' => 'followup.admin.inc',
    ),
  );
}

/**
 * Implements hook_admin_paths().
 */
function followup_admin_paths() {
  if (variable_get('node_admin_theme')) {
    $paths = array(
      'node/*/updates' => TRUE,
      'node/*/updates/list' => TRUE,
      'node/*/updates/publish' => TRUE,
      'node/*/updates/add' => TRUE,
      'node/*/updates/add/*' => TRUE,
      'node/*/updates/import' => TRUE,
      'node/*/updates/manage/*' => TRUE,
      'node/*/updates/manage/*/edit' => TRUE,
      'node/*/updates/manage/*/clone' => TRUE,
      'node/*/updates/manage/*/delete' => TRUE,
      'node/*/updates/manage/*/revert' => TRUE,
      'node/*/updates/manage/*/export' => TRUE,
    );
    return $paths;
  }
}
