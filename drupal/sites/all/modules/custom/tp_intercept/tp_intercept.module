<?php
/**
 * @file
 * Code for the TakePart Intercept Module feature.
 */

include_once 'tp_intercept.features.inc';

DEFINE('TP_INTERCEPT_MENU', 'admin/config/takepart/intercept');

/**
 * Implements hook_menu().
 */
function tp_intercept_menu() {
  $items = array();
  
  $items[TP_INTERCEPT_MENU] = array(
    'title' => t('Takepart - Intercept'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tp_intercept_admin_form'),
    'file' => 'tp_intercept.admin.inc',
    'file path' => drupal_get_path('module', 'tp_intercept') . '/inc',
    'access arguments' => array('administer site configuration'),
  );
  
  $items[TP_INTERCEPT_MENU . '/config'] = $items[TP_INTERCEPT_MENU];
  $items[TP_INTERCEPT_MENU . '/config']['type'] = MENU_DEFAULT_LOCAL_TASK;
  
  //@todo: create generated path based on admin setting
  $intercept_path = variable_get('tp_intercept_js_path', 'api/intercept/intercept.js');
  if (!empty($intercept_path)) {
    //creates a dynamic menu based on path
    $items[$intercept_path] = array(
      'page callback' => '_tp_intercept_callback',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK
    );
  }
  
  return $items;
}

/**
 *  Implement hook_theme().
 */
function tp_intercept_theme($existing, $type, $theme, $path) {
  return array(
    'tp_intercept_js' => array(
      'variables' => array(
        'vars' => NULL,
      ),
      'template' => '/inc/tp_intercept_js'
    ),
  );
}

/**
 *  Implements hook_context_plugins().
 */
function tp_intercept_context_plugins() {
  $plugins = array();
  
  $plugins['tp_intercept_context'] = array(
  'handler' => array(
    'path' => drupal_get_path('module', 'tp_intercept'),
    'file' => 'tp_intercept_reaction.inc',
    'class' => 'tp_intercept_reaction',
    'parent' => 'context_reaction',
    ),
  );
  
  return $plugins;
}

/**
 *  Implements hook_context_registr().
 */
function tp_intercept_context_registry() {
  return array(
    'reactions' => array(
      'tp_intercept' => array(
        'title' => t('TP - Intercept Javascript'),
        'plugin' => 'tp_intercept_context',
      ),
    ),
  );
}

/**
 *  Implements hook_context_page_reaction().
 */
function tp_intercept_context_page_reaction() {
  if ($plugin = context_get_plugin('reaction', 'tp_intercept')) {
    $plugin->execute();
  }
}

/**
 *  @function:
 *    function is a custom page callback that is used to create the js
 */
function _tp_intercept_callback() {
  $intercept = new tp_intercept();
  
  //set properties
  $intercept->freq = variable_get('tp_intercept_freq', 7);
  $intercept->script = variable_get('tp_intercept_js', '<script type="text/javascript">
(function(){var g=function(e,h,f,g){
this.get=function(a){for(var a=a+"=",c=document.cookie.split(";"),b=0,e=c.length;b<e;b++){for(var d=c[b];" "==d.charAt(0);)d=d.substring(1,d.length);if(0==d.indexOf(a))return d.substring(a.length,d.length)}return null};
this.set=function(a,c){var b="",b=new Date;b.setTime(b.getTime()+6048E5);b="; expires="+b.toGMTString();document.cookie=a+"="+c+b+"; path=/; "};
this.check=function(){var a=this.get(f);if(a)a=a.split(":");else if(100!=e)"v"==h&&(e=Math.random()>=e/100?0:100),a=[h,e,0],this.set(f,a.join(":"));else return!0;var c=a[1];if(100==c)return!0;switch(a[0]){case "v":return!1;case "r":return c=a[2]%Math.floor(100/c),a[2]++,this.set(f,a.join(":")),!c}return!0};
this.go=function(){if(this.check()){var a=document.createElement("script");a.type="text/javascript";a.src=g+ "&t=" + (new Date()).getTime();document.body&&document.body.appendChild(a)}};
this.start=function(){var a=this;window.addEventListener?window.addEventListener("load",function(){a.go()},!1):window.attachEvent&&window.attachEvent("onload",function(){a.go()})}};
try{(new g(100,"r","QSI_S_ZN_3TQACyOSd1g2V5H","//zn3tqacyosd1g2v5h-participantmedia.siteintercept.qualtrics.com/WRSiteInterceptEngine/?Q_ZID=ZN_3TQACyOSd1g2V5H&Q_LOC="+encodeURIComponent(window.location.href))).start()}catch(i){}})();
</script><div id="ZN_3TQACyOSd1g2V5H"><!--DO NOT REMOVE-CONTENTS PLACED HERE--></div>
<!--END SITE INTERCEPTÑ>');
  
  $output = $intercept->generate_js();
  
  print $output;
}