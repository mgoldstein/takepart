<?php

/**
 *  Implements hook_menu().
 */
DEFINE('TP_ADS', 'admin/config/takepart/advertisements');
DEFINE('TP_ADS_THEME_FILE', 'inc/tp_ads.theme.inc');

/**
 *  Implements hook_menu().
 */
function tp_ads_menu() {
  $items = array();
  
  //main group menu
  $items[TP_ADS] = array(
    'title' => t('TakePart - Advertisements Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tp_ads_admin_form'),
    'file' => 'tp_ads.admin.inc',
    'file path' => drupal_get_path('module', 'tp_ads') . '/forms',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  /*disabled for now. @dev this can be enabled and used for other settings
  $items[tp_ads . '/settings'] = array(
    'title' => t('TakePart - General Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tp_ads_admin_general_form'),
    'file' => 'tp_ads.admin.inc',
    'file path' => drupal_get_path('module', 'tp_ads') . '/forms',
    'access arguments' => array('administer site configuration'),
  );*/
  
  return $items;
}

/**
 *  Implements hook_theme().
 */
function tp_ads_theme($existing, $type, $theme, $path) {
  return array(
    //custom theme function that handles the script processing
    'tp_ads_script' => array(
      'variables' => array(
        'ad_slot' => NULL,
        'ad_gpd_id' => NULL,
        'width' => NULL,
        'height' => NULL,
        'class' => NULL,
        'disable_label' => NULL
      ),
      'file' => TP_ADS_THEME_FILE,
    ),
    'tp_ads_header' => array(
      'variables' => array(
        'dpf_code' => NULL,
        'ad_slot' => NULL,
        'ad_gpd_id' => NULL,
        'width' => NULL,
        'height' => NULL,
      ),
      'file' => TP_ADS_THEME_FILE,
    ),
  );
}

/**
 *  Implements hook_preprocess_HOOK().
 */ 
function tp_ads_preprocess_page(&$vars) {
  global $theme;
  
  //ensures that the only theme this appears on is fresh theme as the fresh theme will handle mobile display
  if ($theme == 'fresh') {   
    $header_script = array();
  
    //variables
    $settings = variable_get('tp_ads_settings', '');
    $selector = $settings['tp_ads_settings_selector'];
    $dpf_code = variable_get('takepart_ads_dfp_property_code_gpt', '4355895'); //pulled from original module
    
    //processes the data for front end js
    if (!empty($settings)) {
      foreach ($settings as $key => $value) {
        //ensure that we dont process the selector
        if ($key == 'tp_ads_settings_selector') {
          continue;
        }
        
        //mobile
        $ad_slot = $value['ad_slot'];
        $ad_gpd_id = $value['ad_gpd_id'];
        $width = $value['ad_width'];
        $height = $value['ad_height'];
        
        //desktop
        $desktop_ad_slot = (!empty($value['desktop_overrides']['ad_slot'])) ? $value['desktop_overrides']['ad_slot'] : $value['ad_slot'];
        $desktop_ad_gpd_id = (!empty($value['desktop_overrides']['ad_gpd_id'])) ? $value['desktop_overrides']['ad_gpd_id'] : $value['ad_gpd_id'];
        $desktop_width = (!empty($value['desktop_overrides']['ad_width'])) ? $value['desktop_overrides']['ad_width'] : $value['ad_width'];
        $desktop_height = (!empty($value['desktop_overrides']['ad_height'])) ? $value['desktop_overrides']['ad_height'] : $value['ad_height'];
        
        //calls theme to create markup
        $script = theme('tp_ads_script', array(
            'ad_slot' => $ad_slot,
            'ad_gpd_id' => $ad_gpd_id,
            'width' => $width,
            'height' => $height,
            'class' => 'mobile'
          )
        );
        
        //ensures that it removes any EOL
        $value['javascript'] = str_replace(PHP_EOL, '', $script);
        
        //calls theme to create markup
        $desktop_script = theme('tp_ads_script', array(
            'ad_slot' => $desktop_ad_slot,
            'ad_gpd_id' => $desktop_ad_gpd_id,
            'width' => $desktop_width,
            'height' => $desktop_height,
            'class' => 'desktop'
          )
        );
        
        //ensures that it removes any EOL
        $value['javascript_desktop'] = str_replace(PHP_EOL, '', $desktop_script);        
        
        //header script that is needed to define the ad slot
        $header_script[] = theme('tp_ads_header', array(
          'dpf_code' => $dpf_code,
          'ad_slot' => $desktop_ad_slot,
          'ad_gpd_id' => $desktop_ad_gpd_id,
          'width' => $desktop_width,
          'height' => $desktop_height
          )
        );
        
        $ads[] = $value;
      }
    }

    //loads the bg skin takeover from boxes
    $takeover = boxes_box_load('bg_skin_sponsor');
    
    //checks to make sure the option is set
    if (!empty($takeover->options['ga_ad_gpt_id'])) {
      $takeover_id = $takeover->options['ga_ad_gpt_id'];
      $takeover_ad_slot = $takeover->options['ga_ad_slot'];
      
      $header_script[] = theme('tp_ads_header', array(
        'dpf_code' => $dpf_code,
        'ad_slot' => $takeover_ad_slot,
        'ad_gpd_id' => $takeover_id,
        'width' => 1,
        'height' => 1
        )
      );
      
      $vars['page']['footer']['#suffix'] = str_replace('[targets]', '', theme('tp_ads_script', array(
          'ad_slot' => $takeover_ad_slot,
          'ad_gpd_id' => $takeover_id,
          'width' => 1,
          'height' => 1,
          'class' => 'desktop',
          'disable_label' => TRUE
        )
      ));
    }

    //creates the array needed
    $ads_wrapper['ads'] = $ads;
    $ads_wrapper['selector'] = $selector;
    
    //calls function to add header
    _tp_ads_insert_leader_ad($vars);
    _tp_ads_insert_header($header_script);
    _tp_ads_insert_more_on_takepart();
    
    //adds the js
    drupal_add_js(array('tp_ad_settings' => $ads_wrapper), 'setting');
    drupal_add_js(drupal_get_path('module', 'tp_ads') .'/js/tp_ads.js');
  }
}

/**
 *  @function:
 *    Custom function that is used to insert the ad for more on takepart
 */
function _tp_ads_insert_more_on_takepart() {
  $more_on_takepart = array();
  $override = variable_get('tp_more_on_takepart_last_item', array());
  
  //break if empty
  if (empty($override) || empty($override['ad_slot'])) {
    return;
  }

  //variable for more on takepart overrid
  $value['ad_slot'] = $override['ad_slot'];
  $value['ad_gpd_id'] = $override['ad_gpd_id'];

  //Height and width values from DFP module (tp_dfp)
  $value['width'] = variable_get('dfp_creative_width', '152');
  $value['height'] = variable_get('dfp_creative_height', '200');
  
  //calls theme to create markup
  $script = theme('tp_ads_script', array(
      'ad_slot' => $value['ad_slot'],
      'ad_gpd_id' => $value['ad_gpd_id'],
      'width' => $value['width'],
      'height' => $value['height'],
      //'disable_label' => TRUE,
      //'class' => ''
    )
  );
  
  //ensures that it removes any EOL
  $value['javascript'] = str_replace(PHP_EOL, '', $script);
  
  //ensures that it removes any EOL
  $value['javascript_desktop'] = $value['javascript'];
  $value['placement'] = 1;
  
  //populate the data for the more on takepart settings
  $more_on_takepart[] = $value;
  $more_on_takepart_wrapper['ads'] = $more_on_takepart;
  $more_on_takepart_wrapper['selector'] = '.tp-more-on-takepart .more-on-takepart.override';
  
  //add js settings
  drupal_add_js(array('tp_ad_more_on_takepart' => $more_on_takepart_wrapper), 'setting');
}

/**
 *  @function:
 *    Function is used to insert the ad
 *
 *  @dev: todo: improve logic to allow it to handle future calls
 */
function _tp_ads_insert_leader_ad(&$vars) {
  //variables
  $leader_settings = variable_get('tp_ads_article_leader', '');
  $dpf_code = variable_get('takepart_ads_dfp_property_code_gpt', '4355895'); //pulled from original module
  
  //adds the logic for targetting leader ad
  if (!empty($leader_settings['selector'])) {
    //calls theme to create markup
    $script = theme('tp_ads_script', array(
        'ad_slot' => $leader_settings['ad_slot'],
        'ad_gpd_id' => $leader_settings['ad_gpd_id'],
        'width' => $leader_settings['ad_width'],
        'height' => $leader_settings['ad_height'],
        'class' => 'leaderboard mobile'
      )
    );
    
    //ensures that it removes any EOL
    $leader_settings['javascript'] = str_replace(PHP_EOL, '', $script);
    
    $desktop_ad_slot = (!empty($leader_settings['desktop']['ad_slot'])) ? $leader_settings['desktop']['ad_slot'] : $leader_settings['ad_slot'];
    $desktop_ad_gpd_id = (!empty($leader_settings['desktop']['ad_gpd_id'])) ? $leader_settings['desktop']['ad_gpd_id'] : $leader_settings['ad_gpd_id'];
    $desktop_ad_width = (!empty($leader_settings['desktop']['ad_width'])) ? $leader_settings['desktop']['ad_width'] : $leader_settings['ad_width'];
    $desktop_ad_height = (!empty($leader_settings['desktop']['ad_height'])) ? $leader_settings['desktop']['ad_height'] : $leader_settings['ad_height'];
    
    $desktop_script = theme('tp_ads_script', array(
        'ad_slot' => $desktop_ad_slot,
        'ad_gpd_id' => $desktop_ad_gpd_id,
        'width' => $desktop_ad_width,
        'height' => $desktop_ad_height,
        'class' => 'leaderboard desktop'
      )
    );
    
    $leader_settings['javascript_desktop'] = str_replace(PHP_EOL, '', $desktop_script);
    
    //always have placement 1
    $leader_settings['placement'] = 1;
    
    //header script that is needed to define the ad slot
    $leader_header_script[] = theme('tp_ads_header', array(
      'dpf_code' => $dpf_code,
      'ad_slot' => $leader_settings['ad_slot'],
      'ad_gpd_id' => $leader_settings['ad_gpd_id'],
      'width' => $leader_settings['ad_width'],
      'height' => $leader_settings['ad_height'],
      )
    );
    
    //adds the leaderboard for desktop
    $leader_header_script[] = theme('tp_ads_header', array(
      'dpf_code' => $dpf_code,
      'ad_slot' => $leader_settings['desktop']['ad_slot'],
      'ad_gpd_id' => $leader_settings['desktop']['ad_gpd_id'],
      'width' => $leader_settings['desktop']['ad_width'],
      'height' => $leader_settings['desktop']['ad_height'],
      )
    );
    
    //calls function to add header
    _tp_ads_insert_header($leader_header_script);
    
    $leader_wrapper['ads'][0] = $leader_settings;
    $leader_wrapper['selector'] = $leader_settings['selector'];
    drupal_add_js(array('tp_leader_ad_settings' => $leader_wrapper), 'setting');
  }
}

/**
 *  @function:
 *    This function is used to insert the javascript header
 */
function _tp_ads_insert_header($header_script) {
  //only adds the code if the takepart_ads module is turned off. this is to ensure no duplication
  if (!module_exists('takepart_ads')) {
    //taken from takeparts_ads.module.
    drupal_add_js("<!-- \n var googletag = googletag || {};
              googletag.cmd = googletag.cmd || [];
              (function() {
              var gads = document.createElement('script');
              gads.async = true;
              gads.type = 'text/javascript';
              var useSSL = 'https:' == document.location.protocol;
              gads.src = (useSSL ? 'https:' : 'http:') +
              '//www.googletagservices.com/tag/js/gpt.js';
              var node = document.getElementsByTagName('script')[0];
              node.parentNode.insertBefore(gads, node);
              })(); \n // -->", array('type' => 'inline', 'scope' => 'header'));
  }
}