<?php
/**
 * @file
 * TakePart MegaMenu for the new TP4 theme.
 */

/**
 * Implements hook_help().
 */
function tp_megamenu_help($path, $arg) {
	switch ($path) {
		case 'admin/help#tp_megamenu':
			return '<p>' . t('The new MegaMenu for the TP4 theme') . '</p>';
	}
}

/**
 * Hook Black Info
 */
function tp_megamenu_block_info(){
  $blocks = array();
  $blocks['tp_megamenu_megamenu'] = array(
    'info' => t('MegaMenu for the TP4 theme'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view
 */
function tp_megamenu_block_view($delta = ''){
  $block = array();
  switch($delta){
    case 'tp_megamenu_megamenu':
      $block['content'] = tp_megamenu_megamenu();
    break;
  }
  return $block;
}

/*
 *Implements hook_theme()
 */
function tp_megamenu_theme(){
  return array(
    'tp_megamenu_slimnav' => array(
      'arguments' => array(),
      'template' => 'tp-slimnav'
    ),
	  'tp_megamenu_inner_left' => array(
		  'arguments' => array(),
		  'template' => 'templates/mega-inner-left-menu',
		  'variables' => array(
				'left_menu' => '',
			  'left_menu_text' => ''
			)
	  ),
  );
}

function tp_megamenu_megamenu(){
	/*
	 * DONE
	 * Variables for Left Menu.
	 * Return Themed menu = $left_menu
	 */

	/*
	 * Variables for Middle Columns
	 * Theme each column with teaser display
	 */

	/*
	 * Different variable for 'See all'
	 */

	/*
	 * Send all the above variables to a 'mega-display' template that renders the drop down
	 */

	/*
	 * Send all the above 'mega-displays' to the mega menu template (the menu)
	 */

  /* render child block) */
  $mega_tree = menu_tree_all_data('menu-megamenu', $link = NULL, $max_depth = 2);
  $output = '';
  $output .= '<ul>';
  foreach($mega_tree as $key => $link){
    $output .= '<li class="mega-item '. $link['link']['mlid']. '">';
    $path = drupal_get_path_alias($mega_tree[$key]['link']['link_path']);
    $output .= '<div class="title">'. l($mega_tree[$key]['link']['link_title'], $path, array('absolute' => true, 'attributes' => array('class' => array($link['link']['options']['attributes']['class'][0])))). '</div>';
    $output .= '<div class="mega-content">';

    //left menu curation
    $menu = render(menu_tree_output($mega_tree[$key]['below']));
	  $menu_text = ($link['link']['options']['attributes']['title'] ? $link['link']['options']['attributes']['title'] : '');
	  $left_menu = theme('tp_megamenu_inner_left', array('left_menu' => $menu, 'left_menu_text' => $menu_text));
	  $output .= $left_menu; //temp for output for now


    //middle content curation
	  $type = '';
    $url = current(explode("/", $link['link']['href']));
    if($url != 'taxonomy' && $url != 'node'){
      $url = drupal_lookup_path("source", $link['link']['href']);
      $url = current(explode("/", $url));
    }
    if($url == 'taxonomy'){
      $entities = menu_get_object('taxonomy_term', 2, $link['link']['href']);
	    $type = 'taxonomy_term';
    }
    elseif($url == 'node'){
      $entities = menu_get_object('node', 1, $link['link']['href']);
	    $type = 'node';
    }

    $output .= '<div class="categories">';
	  $output .= tp_megamenu_content_menu($entities, $type, $url);
	  $output .= '</div>'; //end .categories
	  //return more link
	  if(isset($link['link']['options']['attributes']['name'])){
		  $output .= l($link['link']['options']['attributes']['name'], $path, array('absolute' => true, 'attributes' => array('class' => array('more'))));
	  }
	  else{
		  $output .= l('See More '. $link['link']['link_title'], $path, array('absolute' => true, 'attributes' => array('class' => array('more'))));
	  }
    $output .= '</div>'; //end .mega-content
    $output .= '</li>'; //end .mega-item
  }
  $output .= '</ul>';

  return $output;
}

/**
 * Returns a rendered middle menu
 */
function tp_megamenu_content_menu($entities, $type, $url){
	$output = '';
	global $base_url;
	$mega_items = field_get_items($type, $entities, 'field_promo_content_collection');
	if(!empty($mega_item) || !isset($url)){
		return;
	}

	foreach($mega_items as $entity){
		/*
		 * Load the
		 */
		$field_collection = entity_load('field_collection_item', array($entity['value']));
		$field_collection = current($field_collection);
		$node = field_get_items('field_collection_item', $field_collection, 'field_promo_content');
		if(empty($node)){
			return;
		}
		$nid = $node[0]['target_id'];
		$node = node_load($nid);
		if ($node->type == 'action') {
			$uri = entity_uri('node', $node);
			$node_path = url($uri['path'], $uri['options']);
		}else {
			$node_path = $base_url. '/'. drupal_get_path_alias('node/'. $nid);
		}

		//Subcategory content menu item is linked to a taxonomy term
		if($url == 'taxonomy'){
			$term = $node->field_topic['und'][0]['tid'];
			$term = taxonomy_term_load($term);
			//Subcategory content for menu items with the ID of 'series' (example: Features & Columns)
			if(isset($link['link']['options']['attributes']['id']) && $link['link']['options']['attributes']['id'] == 'series'){
				$thumb = file_load($node->field_thumbnail['und'][0]['fid']);
				$thumb = '<img src="'. image_style_url('homepage_featured_image', $thumb->uri). '">';
				$author_node = node_load($node->field_author['und'][0]['nid']);
				$series_term = taxonomy_term_load($node->field_series['und'][0]['tid']);
				$text = '<div class="author">'. $author_node->title. '</div>'. $node->field_promo_headline['und'][0]['value'];  //author and promo_headline
				$label = $series_term->name;
			}
			else{
				$thumb = file_load($node->field_thumbnail['und'][0]['fid']);
				$thumb = '<img src="'. image_style_url('homepage_featured_image', $thumb->uri). '">';
				$text = $node->field_promo_headline['und'][0]['value'];
				$label = $term->name;
			}
		}
		//Subcategory content menu item is linked to a node
		else{
			if(isset($link['link']['options']['attributes']['id']) && $link['link']['options']['attributes']['id'] == 'action'){
				$thumb = file_load($node->field_action_main_image['und'][0]['fid']);
				$thumb = '<img src="'. image_style_url('homepage_featured_image', $thumb->uri). '">';
				$label = taxonomy_term_load($node->field_action_type['und'][0]['tid']);
				$label = $label->name;
				if($node->type == 'petition_action' || $node->type == 'pledge_action'){
					$text = $node->title;
				}
				else{
					$text = $node->field_tab_call_to_action['und'][0]['value'];
				}
			}
			else{
				$thumb = file_load($node->field_thumbnail['und'][0]['fid']);
				
				//ensures that it fallsback to action main image
				if (empty($thumb)) {
					$thumb = file_load($node->field_action_main_image['und'][0]['fid']);
				}
				
				$thumb = '<img src="'. image_style_url('homepage_featured_image', $thumb->uri). '">';
				$label = $node->title;
				$text = $node->field_promo_headline['und'][0]['value'];
			}
		}

		//Check for overrides
		$label = (isset($field_collection->field_promo_label['und'][0]['value']) ? $field_collection->field_promo_label['und'][0]['value'] : $label);
		$text = (isset($field_collection->field_promo_headline['und'][0]['value']) ? $field_collection->field_promo_headline['und'][0]['value'] : $text);
		if(isset($field_collection->field_promo_thumbnail['und'][0]['fid'])){
			$thumb = file_load($field_collection->field_promo_thumbnail['und'][0]['fid']);
			$thumb = '<img src="'. image_style_url('homepage_featured_image', $thumb->uri). '">';
		}

		//Output subcategories based on input from menu link ID field
		$output .= '<a href="'. $node_path. '" class="sub-category">';
		$output .= '<div class="thumb">'. $thumb. '</div>';
		$output .= '<div class="label">'. $label. '</div>';
		$output .= '<div class="text">'. $text. '</div>';
		$output .= '</a>'; //end .sub-category

	}
	return $output;

}