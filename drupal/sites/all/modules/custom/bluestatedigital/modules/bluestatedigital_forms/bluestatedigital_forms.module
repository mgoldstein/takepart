<?php
/**
 * @file
 * The Blue State Digital Form API Field Module
 */

include_once dirname(__FILE__) . '/../../include/bsdapi/bsd.api.inc';

/**
 * Implements hook_help().
 */
function bluestatedigital_forms_help($path, $arg) {
  $output = '';
  if ($path == 'admin/help#bluestatedigital_forms') {
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The Blue State Digital Form Field module provides Form
      API fields specific to the Blue State Digital API.') . '</p>';
    $output .= '<h3>' . t('Uses') . '</h3>';
    $output .= '<dl>';
    $output .= '<dt>' . t('Form API fields') . '</dt>';
    $output .= '<dd>' . t('Provides builder functions for form fields that allow
      the selection of a signup form, a signup form field or a constituent
      group.') . '</dd>';
    $output .= '</dl>';
  }
  return $output;
}

/**
 * Create a Blue State Digital signup form id field.
 *
 * The function creates Drupal form field for selecting a BSD signup form by
 * ID. A select field containing a list of all the available signup forms is
 * created by default, the function falls back to creating a simple text field
 * if it is unable to communicate with the Blue State Digital API server.
 *
 * @param int $form_id
 *   The default value of the field.
 * @param boolean $add_none
 *   (optional) Boolean flag indicating whether a 'None' value is added to the
 *   list of forms, defaults to TRUE.
 *
 * @return array
 *   An associative array containing a Drupal form field definition.
 */
function bluestatedigital_forms_signup_form_id($form_id, $add_none = TRUE) {
  $values = &drupal_static(__FUNCTION__, array());

  // Get the list of signup forms only once.
  if (!isset($values['forms'])) {
    $api = bluestatedigital_get_api('signup');
    try {
      $values['forms'] = $api->listForms();
    }
    catch (BlueStateDigitalApiException $ex) {
      $message = 'list_forms [@code] @body';
      watchdog('bluestatedigital', $message, array(
        '@code' => $ex->getResponseCode(),
        '@body' => $ex->getResponseBody(),
      ));
      $values['forms'] = FALSE;
    }
  }

  $forms = $values['forms'];
  if ($forms !== FALSE) {

    $options = array();
    if ($add_none) {
      $options['0'] = t('None');
    }

    // Add in the current form id if it is not in the list of forms.
    if ((!empty($form_id)) && (!array_key_exists($form_id, $forms))) {
      $options[$form_id] = t('Form ID: @id (not available)', array(
        '@id' => $form_id,
      ));
    }
    // Add in the forms.
    foreach ($forms as $id => $form) {
      $options[$id] = sprintf('[%d] %s', $id, $form['signup_form_name']);
    }

    // Create the field as a select list.
    $field = array(
      '#type' => 'select',
      '#title' => t('Signup Form'),
      '#description' => t('Blue State Digital Signup Form.'),
      '#options' => $options,
      '#default_value' => $form_id,
    );
  }
  else {

    // Create the field as a text field.
    $field = array(
      '#type' => 'textfield',
      '#title' => t('Signup Form ID'),
      '#description' => t('Blue State Digital Signup Form ID.'),
      '#size' => 4,
      '#default_value' => $form_id,
      '#element_validate' => array('_element_validate_integer_positive'),
    );
  }

  return $field;
}

/**
 * Create a Blue State Digital signup form field id field.
 *
 * The function creates Drupal form field for selecting a BSD signup form field
 * by ID. A select field containing a list of all the available signup form
 * fields is created by default, the function falls back to creating a simple
 * text field if it is unable to communicate with the Blue State Digital API
 * server.
 *
 * @param int $form_id
 *   The ID of the signup form to which the fields belong.
 * @param int $field_id
 *   The default value of the field.
 * @param boolean $add_none
 *   (optional) Boolean flag indicating whether a 'None' value is added to the
 *   list of form fields, defaults to FALSE.
 *
 * @return array
 *   An associative array containing a Drupal form field definition.
 */
function bluestatedigital_forms_signup_field_id($form_id, $field_id,
  $add_none = FALSE) {
  $values = &drupal_static(__FUNCTION__, array(), $reset);

  // Get the list of signup form fields only once.
  if (!empty($form_id) && !isset($values[$form_id])) {
    $api = bluestatedigital_get_api('signup');
    try {
      $values[$form_id] = $api->listFormFields($form_id);
    }
    catch (BlueStateDigitalApiException $ex) {
      $message = 'list_form_fields [@code] @body';
      watchdog('bluestatedigital', $message, array(
        '@code' => $ex->getResponseCode(),
        '@body' => $ex->getResponseBody(),
      ));
      $values[$form_id] = FALSE;
    }
  }

  // Get the list of form fields.
  $fields = empty($form_id) ? array() : $values[$form_id];
  if ($fields !== FALSE) {

    $options = array();
    if ($add_none) {
      $options['0'] = t('None');
    }

    if (!empty($fields)) {

      // Add in the current field id if it is not in the list of fields.
      if ((!empty($field_id)) && (!array_key_exists($field_id, $fields))) {
        $options[$field_id] = t('Field ID: @id (not available)', array(
          '@id' => $field_id,
        ));
      }

      // Add the fields.
      foreach ($fields as $id => $field) {
        $options[$id] = sprintf('[%d] %s', $id, $field['label']);
      }
    }
    else {
      // Need a form id from which to get the fields.
      $options['0'] = t('Select a signup form');
    }

    // Create the field as a select list.
    $field = array(
      '#type' => 'select',
      '#title' => t('Signup Field'),
      '#description' => t('Blue State Digital Signup Field'),
      '#options' => $options,
      '#default_value' => $field_id,
    );
  }
  else {

    // Create the field as a text field.
    $field = array(
      '#type' => 'textfield',
      '#title' => t('Signup Field ID'),
      '#description' => t('Blue State Digital Signup Field ID.'),
      '#size' => 4,
      '#default_value' => $field_id,
      '#element_validate' => array('_element_validate_integer_positive'),
    );
  }

  return $field;
}

function bluestatedigital_forms_constituent_group($default_value, $key = 'name',
  $add_none = TRUE) {
  $values = &drupal_static(__FUNCTION__, array());

  // Get the list of constituent groups only once.
  if (!isset($values['groups'])) {
    $api = bluestatedigital_get_api('group');
    try {
      $values['groups'] = $api->listConstituentGroups();
    }
    catch (BlueStateDigitalApiException $ex) {
      $message = 'list_constituent_groups [@code] @body';
      watchdog('bluestatedigital', $message, array(
        '@code' => $ex->getResponseCode(),
        '@body' => $ex->getResponseBody(),
      ));
      $values['groups'] = FALSE;
    }
  }

  $groups = $values['groups'];
  if ($groups !== FALSE) {

    $options = array();
    if ($add_none) {
      $options[''] = t('None');
    }

    // Add in the groups.
    $key_found = FALSE;
    foreach ($groups as $group) {
      if (!empty($group[$key])) {
        $options[$group[$key]] = $group['name'];
        if ($group[$key] == $default_value) {
          $key_found = TRUE;
        }
      }
    }
    // Add in the current group if it is not in the list of groups.
    if (!empty($default_value) && !$key_found) {
      $options[$default_value] = t('@key (not available)', array(
        '@key' => $default_value,
      ));
    }

    // Create the field as a select list.
    $field = array(
      '#type' => 'select',
      '#title' => t('Constituent Group'),
      '#description' => t('Blue State Digital Constituent Group.'),
      '#options' => $options,
      '#default_value' => $default_value,
    );
  }
  else {

    // Create the field as a text field.
    $field = array(
      '#type' => 'textfield',
      '#title' => t('Constituent Group Name'),
      '#description' => t('Blue State Digital Constituent Group Name.'),
      '#size' => 60,
      '#default_value' => $default_value,
    );
  }

  return $field;
}
