<?php

class FoodIncAwardsSignup extends Signup {

  public static function fields() {
    return array(
      'name.first' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'name.last' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'address.city' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'address.state.code' => array(
        'required' => TRUE,
        'default' => '',
      ),

      'partner.code' => array(
        'required' => FALSE,
        'default' => '',
      ),

      'foodinc-awards.dob.month' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.dob.year' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.category' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.video-link' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.newsletter-opt-in' => array(
        'required' => FALSE,
        'default' => '',
      ),
      'foodinc-awards.contest-rules-opt-in' => array(
        'required' => TRUE,
        'default' => '',
      ),
    );
  }

  public function validate() {

    // Do the standard validation.
    parent::validate();

    // Check that the contest rules and submission agreement has been accepted
    if ($this['foodinc-awards.contest-rules-opt-in'] !== '1') {
      throw new SignupValidationException(array('contest rules and submission agreement opt-in must be accepted'));
    }
  }
}


class FoodIncAwardsSignupEndpoint extends SignupEndpoint {

  public static function fields() {
    return array(
      'name.first' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'name.last' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'email' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'address.city' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'address.state.code' => array(
        'required' => TRUE,
        'default' => '',
      ),

      'partner.code' => array(
        'required' => FALSE,
        'default' => '',
      ),

      'foodinc-awards.dob.month' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.dob.year' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.category' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.video-link' => array(
        'required' => TRUE,
        'default' => '',
      ),
      'foodinc-awards.newsletter-opt-in' => array(
        'required' => FALSE,
        'default' => '',
      ),
      'foodinc-awards.contest-rules-opt-in' => array(
        'required' => TRUE,
        'default' => '',
      ),
    );
  }

  protected function validate($signup) {

    // Do the standard validation.
    parent::validate($signup);

    // Check that the contest rules and submission agreement has been accepted
    if ($signup['foodinc-awards.contest-rules-opt-in'] !== '1') {
      throw new SignupValidationException(array('contest rules and submission agreement opt-in must be accepted'));
    }
  }
}

function foodinc_awards_configuration_defaults($config) {
  $default_config = array(
    'about_you_section_label' => '<h2>About You</h2>',
    'about_you_section_desc' => '<p>All fields are required</p>',
    'first_name_label' => 'First Name',
    'last_name_label' => 'Last Name',
    'email_label' => 'Email',
    'dob_label' => 'Date of Birth',
    'city_label' => 'City',
    'state_label' => 'State',
    'which_award_label' => 'Which Award Are You Nominating Yourself?',
    'lifestyle_award_label' => 'The Food, Inc. Lifestyle Award',
    'pioneer_award_label' => 'The Food, Inc. Pioneer Award',
    'lifestyle_award_desc' => '<p>This award recognizes an individual who embodies the sustainable and ethical "eating revolution" sparked by Food, Inc. The selected winner is someone who has completely changed the way they approach food on a daily basis by going the extra mile when it comes to sustainable and ethical eating practices.</p>',
    'pioneer_award_desc' => '<p>This award recognizes a local leader who has created a community movement inspired by the film that encourages food habits involving more sustainable, responsible and organic choices.</p>',
    'dob_month_list' => '',
    'dob_year_list' => '',
    'state_list' => '',
    'your_video_section_label' => 'Your Video',
    'your_video_section_desc' => '<p>Upload Your Video</p><p>Upload your submission video to YouTube. Copy and paste the link in the field below. Don\'t have a YouTube account? <a href="" target="_blank">Click here for instructions</a>.</p>',
    'video_link_label' => 'Video Link',
    'submission_section_label' => 'Submission',
    'submission_section_desc' => '',
    'newsletter_opt_in_label' => 'I want to receive news and updates from TakePart about the Contest and Food, Inc.',
    'contest_rules_opt_in_label' => 'I agree to the <a href="" target="_blank">Official Contest Rules</a> and <a href="" target="_blank">Submission Agreement</a>',
    'terms_of_service_message' => '<p>By clicking "Submit" below, I agree to be bound by <a href="/privacy-policy" target="_blank">TakePart\'s Privacy Policy</a> and <a href="/terms-of-use" target="_blank">Terms of Use</a></p>',
    'submit_entry_label' => 'Submit Entry',
  );
  foreach ($default_config as $name => $value) {
    if (!isset($config[$name])) {
      $config[$name] = $value;
    }
  }
  return $config;
}

function foodinc_awards_split_list($value) {
  $value = str_replace(array("\r\n", "\r"), "\n", $value);
  $list = explode("\n", $value);
  $trimmed = array_map('trim', $list);
  $pairs = array_filter($trimmed, 'strlen');
  $options = array();
  foreach ($pairs as $pair) {
    $pieces = explode('|', $pair, 2);
    if (count($pieces) === 1) {
      $options[$pieces[0]] = $pieces[0];
    }
    elseif (count($pieces) === 2) {
      $options[$pieces[0]] = $pieces[1];
    }
  }
  return $options;
}

function foodinc_awards_is_embedded() {
  return isset($_REQUEST['embedded']) && $_REQUEST['embedded'] === 'true';
}

function foodinc_awards_entry_configuration($form, $config) {

  $config = foodinc_awards_configuration_defaults($config);

  $form['about_you_section_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('About you section label'),
    '#default_value' => $config['about_you_section_label'],
  );

  $form['about_you_section_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('About you section description'),
    '#default_value' => $config['about_you_section_desc'],
  );

  $about_you_field_labels = array(
    'first_name_label' => t('First name field label'),
    'last_name_label' => t('Last name field label'),
    'email_label' => t('Email field label'),
    'dob_label' => t('Date of Birth field label'),
    'city_label' => t('City field label'),
    'state_label' => t('State field label'),
    'which_award_label' => t('Which award label'),
    'lifestyle_award_label' => t('Lifestyle award label'),
    'pioneer_award_label' => t('Pioneer award label')
  );

  foreach ($about_you_field_labels as $name => $title) {
    $form[$name] = array(
      '#type' => 'textfield',
      '#maxlength' => 255,
      '#title' => $title,
      '#default_value' => $config[$name],
    );
  }

  $form['lifestyle_award_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('Lifestyle award description'),
    '#default_value' => $config['lifestyle_award_desc'],
  );

  $form['pioneer_award_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('Pioneer award description'),
    '#default_value' => $config['pioneer_award_desc'],
  );

  $form['dob_month_list'] = array(
    '#type' => 'textarea',
    '#title' => t('Date of birth month list'),
    '#default_value' => $config['dob_month_list'],
  );

  $form['dob_year_list'] = array(
    '#type' => 'textarea',
    '#title' => t('Date of birth year list'),
    '#default_value' => $config['dob_year_list'],
  );

  $form['state_list'] = array(
    '#type' => 'textarea',
    '#title' => t('State list'),
    '#default_value' => $config['state_list'],
  );

  $form['your_video_section_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Your video section label'),
    '#default_value' => $config['your_video_section_label'],
  );

  $form['your_video_section_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('Your video section description'),
    '#default_value' => $config['your_video_section_desc'],
  );

  $form['video_link_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Video link field label'),
    '#default_value' => $config['video_link_label'],
  );

  $form['submission_section_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Submission section label'),
    '#default_value' => $config['submission_section_label'],
  );

  $form['submission_section_desc'] = array(
    '#type' => 'textarea',
    '#title' => t('Submission section description'),
    '#default_value' => $config['submission_section_desc'],
  );

  $form['newsletter_opt_in_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Newsletter opt-in field label'),
    '#default_value' => $config['newsletter_opt_in_label'],
  );

  $form['contest_rules_opt_in_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Rules and submission opt-in field label'),
    '#default_value' => $config['contest_rules_opt_in_label'],
  );

  $form['terms_of_service_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Terms of service message'),
    '#default_value' => $config['terms_of_service_message'],
  );

  $form['submit_entry_label'] = array(
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#title' => t('Submit entry button label'),
    '#default_value' => $config['submit_entry_label'],
  );

  return $form;
}

function foodinc_awards_entry_form($form, &$form_state, $config) {

  $config = foodinc_awards_configuration_defaults($config);

  $form['about_you_heading'] = array(
    '#type' => 'markup',
    '#markup' => $config['about_you_section_label'],
  );

  $form['about_you_description'] = array(
    '#type' => 'markup',
    '#markup' => $config['about_you_section_desc'],
  );

  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => $config['first_name_label'],
    '#default_value' => '',
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => $config['last_name_label'],
    '#default_value' => '',
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => $config['email_label'],
    '#default_value' => '',
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $months = foodinc_awards_split_list($config['dob_month_list']);
  $form['dob_month'] = array(
    '#type' => 'select',
    '#title' => $config['dob_label'],
    '#default_value' => '',
    '#options' => $months,
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $years = foodinc_awards_split_list($config['dob_year_list']);
  $form['dob_year'] = array(
    '#type' => 'select',
    '#default_value' => '',
    '#options' => $years,
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['city'] = array(
    '#type' => 'textfield',
    '#title' => $config['city_label'],
    '#default_value' => '',
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $states = foodinc_awards_split_list($config['state_list']);
  $form['state'] = array(
    '#type' => 'select',
    '#title' => $config['state_label'],
    '#default_value' => '',
    '#options' => $states,
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['which_award_label'] = array(
    '#type' => 'markup',
    '#markup' => $config['which_award_label'],
  );

  $form['which_award'] = array(
    '#type' => 'radios',
    '#options' => array(
      'lifestyle' => '',
      'pioneer' => '',
    ),
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['lifestyle_award_label'] = array(
    '#type' => 'markup',
    '#markup' => $config['lifestyle_award_label'],
  );

  $form['lifestyle_award_description'] = array(
    '#type' => 'markup',
    '#markup' => $config['lifestyle_award_desc'],
  );

  $form['pioneer_award_label'] = array(
    '#type' => 'markup',
    '#markup' => $config['pioneer_award_label'],
  );

  $form['pioneer_award_description'] = array(
    '#type' => 'markup',
    '#markup' => $config['pioneer_award_desc'],
  );

  $form['your_video_heading'] = array(
    '#type' => 'markup',
    '#markup' => $config['your_video_section_label'],
  );

  $form['your_video_description'] = array(
    '#type' => 'markup',
    '#markup' => $config['your_video_section_desc'],
  );

  $form['video_link'] = array(
    '#type' => 'textfield',
    '#title' => $config['video_link_label'],
    '#default_value' => '',
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['submission_heading'] = array(
    '#type' => 'markup',
    '#markup' => $config['submission_section_label'],
  );

  $form['submission_description'] = array(
    '#type' => 'markup',
    '#markup' => $config['submission_section_desc'],
  );

  $form['newsletter_opt_in'] = array(
    '#type' => 'checkbox',
    '#default_value' => TRUE,
    '#title' => $config['newsletter_opt_in_label'],
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['contest_rules_opt_in'] = array(
    '#type' => 'checkbox',
    '#title' => $config['contest_rules_opt_in_label'],
    '#theme_wrappers' => array('foodinc_awards_inline_error_form_element'),
  );

  $form['terms_of_service'] = array(
    '#type' => 'markup',
    '#markup' => $config['terms_of_service_message'],
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => $config['submit_entry_label'],
  );

  return $form;
}

function foodinc_awards_entry_form_validate($form, &$form_state) {

  $first_name = trim($form_state['values']['first_name']);
  if (strlen($first_name) == 0) {
    form_set_error('first_name', t('Please enter your first name'));
  }

  $last_name = trim($form_state['values']['last_name']);
  if (strlen($last_name) == 0) {
    form_set_error('last_name', t('Please enter your last name'));
  }

  $email = trim($form_state['values']['email']);
  if (strlen($email) == 0) {
    form_set_error('email', t('Please enter your email'));
  }
  elseif (!valid_email_address($email)) {
    form_set_error('email', t('Please enter a valid email'));
  }

  $dob_month = trim($form_state['values']['dob_month']);
  if (strlen($dob_month) == 0) {
    form_set_error('dob_month', t('Please enter your month of birth'));
  }

  $dob_year = trim($form_state['values']['dob_year']);
  if (strlen($dob_year) == 0) {
    form_set_error('dob_year', t('Please enter your year of birth'));
  }

  $city = trim($form_state['values']['city']);
  if (strlen($city) == 0) {
    form_set_error('city', t('Please enter your city'));
  }

  $state = trim($form_state['values']['state']);
  if (strlen($state) == 0) {
    form_set_error('state', t('Please enter your state'));
  }

  $which_award = trim($form_state['values']['which_award']);
  if (!in_array($which_award, array('lifestyle', 'pioneer'))) {
    form_set_error('which_award', t('Please choose a category above'));
  }

  $video_link = trim($form_state['values']['video_link']);
  if (strlen($video_link) == 0) {
    form_set_error('video_link', t('Please paste a link to your video'));
  }

  $contest_rules_opt_in = trim($form_state['values']['contest_rules_opt_in']);
  if (empty($contest_rules_opt_in)) {
    form_set_error('contest_rules_opt_in', t('If you would like to enter the Food, Inc. Awards contest, please agree to the Official Rules and Submission Agreement.'));
  }
}

function foodinc_awards_entry_signup($values) {

  $signup = FoodIncAwardsSignup::create();

  $signup['name.first'] = trim($values['first_name']);
  $signup['name.last'] = trim($values['last_name']);
  $signup['email'] = trim($values['email']);
  $signup['address.city'] = trim($values['city']);
  $signup['address.state.code'] = trim($values['state']);

  $signup['foodinc-awards.dob.month'] = trim($values['dob_month']);
  $signup['foodinc-awards.dob.year'] = trim($values['dob_year']);

  $signup['foodinc-awards.category'] = trim($values['which_award']);
  $signup['foodinc-awards.video-link'] = trim($values['video_link']);

  $signup['foodinc-awards.newsletter-opt-in']
    = empty($values['newsletter_opt_in']) ? '0' : '1';

  $signup['foodinc-awards.contest-rules-opt-in']
    = empty($values['contest_rules_opt_in']) ? '0' : '1';

  $signup->validate();

  return $signup;
}

function foodinc_awards_enrty_endpoint() {

  $endpoint = new FoodIncAwardsSignupEndpoint();

  $endpoint->setPluginEnabled('bluestatedigital.pm_signup.handler', TRUE);
  $endpoint->setPluginConfiguration('bluestatedigital.pm_signup.handler', array(
    'form-id' => 490,
    'field-ids' => array(
      'name.first' => 10212,
      'name.last' => 10214,
      'email' => 10210,
      'address.city' => 10218,
      'address.state.code' => 10217,
      'foodinc-awards.dob.month' => 10224,
      'foodinc-awards.dob.year' => 10225,
      'foodinc-awards.category' => 10226,
      'foodinc-awards.video-link' => 10227,
      'foodinc-awards.newsletter-opt-in' => 10228,
      'foodinc-awards.contest-rules-opt-in' => 10229,
    ),
  ));
  return $endpoint;
}

function foodinc_awards_entry_form_submit($form, &$form_state) {
  try {

    // Send the entry to BSD
    $signup = foodinc_awards_entry_signup($form_state['values']);
    $endpoint = foodinc_awards_enrty_endpoint();
    $endpoint->submit($signup);

    if (!empty($form_state['values']['newsletter_opt_in'])) {
      pm_signup_handle(array(
        'type' => 'newsletter',
        'endpoint' => 'food_inc_awards',
        'payload' => array(
          'email' => $form_state['values']['email'],
        ),
      ));
    }
    setcookie('foodinc_awards', 'true');
  }
  catch (SignupException $se) {
    setcookie('foodinc_awards', 'false');
  }
  if (foodinc_awards_is_embedded()) {
    drupal_goto('foodinc/awards/enter/received', array('query' => array(
      'embedded' => 'true',
    )));
  }
  else {
    drupal_goto('foodinc/awards/enter/received');
  }
}

function foodinc_awards_theme($existing, $type, $theme, $path) {
  return array(
    'foodinc_awards_entry_form' => array(
      'render element' => 'element',
    ),
    'foodinc_awards_inline_error_form_element' => array(
      'render element' => 'element',
    ),
  );
}

function foodinc_awards_preprocess_foodinc_awards_entry_form(&$variables) {

  $variables['theme_hook_suggestions'][] = 'foodinc-awards-entry-form';

  $errors = form_get_errors();
  if (!empty($errors)) {
    foreach ($errors as $field => $error) {
      if (isset($variables['element'][$field])) {
        $variables['element'][$field]['#inline_error'] = $error;
      }
    }
  }
}

function theme_foodinc_awards_entry_form($variables) {
  return drupal_render_children($variables['element']);
}

function theme_foodinc_awards_inline_error_form_element($variables) {
  $element = &$variables['element'];

  // This function is invoked as theme wrapper, but the rendered form element
  // may not necessarily have been processed by form_builder().
  $element += array(
    '#title_display' => 'before',
  );

  $output = '';

  // If #title is not set, we don't display any label or required marker.
  if (!isset($element['#title'])) {
    $element['#title_display'] = 'none';
  }
  $prefix = isset($element['#field_prefix']) ? '<span class="field-prefix">' . $element['#field_prefix'] . '</span> ' : '';
  $suffix = isset($element['#field_suffix']) ? ' <span class="field-suffix">' . $element['#field_suffix'] . '</span>' : '';

  $error = isset($element['#inline_error']) ? '<label class="error">' . $element['#inline_error'] . '</label>' : '';

  switch ($element['#title_display']) {
    case 'before':
    case 'invisible':
      $output .= ' ' . theme('form_element_label', $variables);
      $output .= ' ' . $prefix . $element['#children'] . $suffix . $error . "\n";
      break;

    case 'after':
      $output .= ' ' . $prefix . $element['#children'] . $suffix;
      $output .= ' ' . theme('form_element_label', $variables) . $error . "\n";
      break;

    case 'none':
    case 'attribute':
      // Output no label and no required marker, only the children.
      $output .= ' ' . $prefix . $element['#children'] . $suffix . $error . "\n";
      break;
  }

  if (!empty($element['#description'])) {
    $output .= '<div class="description">' . $element['#description'] . "</div>\n";
  }

  return $output;
}

function foodinc_awards_preprocess_menu_link(&$variables) {
  if (isset($variables['element']['#theme'])) {
    $theme = $variables['element']['#theme'];
    if ($theme === 'menu_link__food_inc_new_multipage_campaign') {
      if (foodinc_awards_is_embedded()) {
        $variables['element']['#localized_options']['query'] = array(
          'embedded' => 'true',
        );
      }
    }
  }
}
