<?php
/**
 * @file
 * The TakeAction Button Integeration Module
 */

include_once dirname(__FILE__) . '/include/takeaction.api.inc';

/**
 * Implements hook_help().
 */
function takeaction_help($path, $arg) {
  $output = '';
  if ($path == 'admin/help#takeaction') {
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t("The TakeAction Button Core module allows integration
      with the TakePart TakeAction Button system.") . '</p>';
  }
  return $output;
}

/**
 * Implements hook_init().
 */
function takeaction_init() {

  $tabHost = variable_get('takeaction_widget_host');
  $tabPublisherId = variable_get('takeaction_publisher_id');
  $tabScript = variable_get('takeaction_widget_script');

  $button_js = "<!-- \n" . "window.TP = window.TP || {};
    TP.tabHost = '{$tabHost}';
    TP.publisherId = '{$tabPublisherId}';
    (function() {
      var tabScript = document.createElement('script');
      tabScript.type = 'text/javascript';
      tabScript.async = true;
      var scriptLocation = TP.tabHost || 'https://takeaction.takepart.com';
      tabScript.src = scriptLocation + '{$tabScript}';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(tabScript, s);
    })();" . "\n // -->";
  drupal_add_js($button_js, array(
    'type' => 'inline',
    'group' => JS_LIBRARY,
    'every_page' => TRUE,
    'scope' => 'footer',
    'weight' => 0,
  ));
  $tapEmbed_script = variable_get('tap_embed_script');
  drupal_add_js($tapEmbed_script, array(
    'type' => 'inline',
    'group' => JS_LIBRARY,
    'every_page' => TRUE,
    'scope' => 'footer',
    'weight' => 1
  ));
  $awareness_script = variable_get('takeaction_awareness_script');
  drupal_add_js($awareness_script, array(
    'type' => 'file',
    'group' => JS_LIBRARY,
    'scope' => 'footer',
    'weight' => 1
  ));
  drupal_add_js("if(jQuery('body').hasClass('feature_article') ||
    jQuery('body').hasClass('node-type-flashcard') ||
    jQuery('body').hasClass('node-type-openpublish-article') ||
    jQuery('body').hasClass('node-type-openpublish-photo-gallery') ||
    jQuery('body').hasClass('node-type-video')) {
      if (TP && TP.Awareness) {
        window.setTimeout(TP.Awareness.notify, 20000);
      }
    }", array(
    'type' => 'inline',
    'group' => JS_LIBRARY,
    'scope' => 'footer',
    'weight' => 2,
    'every_page' => TRUE
  ));


}

function takeaction_add_awareness_notification() {
  static $added = FALSE;
  if ($added === FALSE) {

    $added = TRUE;
  }
}


/**
 * Implements hook_node_view().
 */
function takeaction_node_view($node, $view_mode, $langcode) {
  $items = field_get_items('node', $node, 'field_tab_action_override');
  if ($items !== FALSE && $view_mode === 'full') {
    $action = array('null', 'null', 'null');
    foreach ($items as $delta => $item) {
      $mapping = SignatureActionMapping::loadByNodeId($items[$delta]['nid']);
      if ($mapping !== FALSE) {
        $action[$delta] = $mapping->tapID();
      }
    }
    $override_js = "
      TP.scope   = {$node->nid};
      TP.action1 = {$action[0]};
      TP.action2 = {$action[1]};
      TP.action3 = {$action[2]};
    ";
    drupal_add_js($override_js, array(
      'type' => 'inline',
      'group' => JS_LIBRARY,
      'scope' => 'footer',
      'weight' => 1,
    ));
  }

  /* Remove this from server side*/
  $awareness_content_types = array(
    'campaign_page',
    'feature_article',
    'flashcard',
    'openpublish_article',
    'openpublish_photo_gallery',
    'video',
  );
  if (in_array($node->type, $awareness_content_types)) {
    takeaction_add_awareness_notification();
  }
}

/**
 * Implements hook_preprocess_hook().
 */
function takeaction_preprocess_node(&$variables) {
  $node = $variables['node'];
  // Limit influence.js to specific content types
  if (in_array($node->type, array('openpublish_article', 'video', 'feature_article', 'openpublish_photo_gallery'))) {
    $influence_overlay_js = variable_get('takeaction_influence_overlay_js');
    drupal_add_js($influence_overlay_js, 'external');
  }
}

/**
 * Create a pre-initialize instance of the TakeAction API.
 *
 * This function creates and initializes an instance of a TakeAction API using
 * the settings defined on the Take Action Button configuration page.
 *
 * @return object
 *   Instance of the TakeAction API.
 */
function takeaction_get_api() {
  $values = &drupal_static(__FUNCTION__, array());
  if (!isset($value['api'])) {
    $api_key = variable_get('takeaction_action_api_key', '');
    $rest_method = variable_get('takeaction_action_api_rest_method',
      TakeActionApi::REST_METHOD_CURL);
    $request_base = variable_get('takeaction_action_api_url',
      'http://tabcode.dev.takepart.com/api/');
    $request_timeout = variable_get(
      'takeaction_action_api_curl_request_timeout', 10);
    $values['api'] = new TakeActionApi($api_key, $rest_method, $request_base,
      $request_timeout);
  }
  return $values['api'];
}
