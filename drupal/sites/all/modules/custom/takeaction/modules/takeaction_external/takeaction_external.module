<?php
/**
 * @file
 * TakeAction Button External Actions Module.
 */

/**
 * Implements hook_menu().
 */
function takeaction_external_menu() {
  return array(
    'ajax/takeaction/action/external' => array(
      'page callback' => 'takeaction_external_action_event_callback',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
  );
}

/**
 * AJAX callback for reporting external action clicks to TAB.
 */
function takeaction_external_action_event_callback($nid) {
  if (preg_match('/^[0-9]+$/', $nid)) {
    $node = node_load($nid);
    if ($node !== FALSE) {
      // Extract the term ids from the field. 
      $tids = array();
      $items = field_get_items('node', $node, 'field_action_type');
      if ($items !== FALSE) {
        foreach ($items as $delta => $item) {
          $tids[] = $item['tid'];
        }
      }
      // Load and implode the terms, only report awareness actions.
      $terms = taxonomy_term_load_multiple($tids);
      if (taxonomy_implode_tags($terms) == 'Awareness') {
        takeaction_tracking_track_action($node->nid);
      }
    }
  }
}

/**
 * Implements hook_permission().
 */
function takeaction_external_permission() {
  return array(
    'takeaction_external stop redirect' => array(
      'title' => t('Block External Action Redirect'),
      'descriptions' => t('Users with this permission will not be redirected when accessing a link only external action page.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function takeaction_external_node_view($node, $view_mode, $langcode) {

  if ($node->type == 'action' && $view_mode == 'full') {

    $tab_action = reset(field_get_items('node', $node, 'field_tab_action',
      $langcode));
    $link_only = reset(field_get_items('node', $node, 'field_tab_link_only',
      $langcode));
    $action = reset(field_get_items('node', $node, 'field_action_url',
      $langcode));

    if ($tab_action !== FALSE && $link_only !== FALSE && $action !== FALSE) {

      $is_tab_action = !empty($tab_action['value']);
      $is_link_only = !empty($link_only['value']);
      $have_url = !empty($action['url']);

      if ($is_tab_action && $is_link_only && $have_url) {
        if (!user_access('takeaction_external stop redirect')) {
          drupal_goto($action['url']);
        }
      }
    }
  }
}
