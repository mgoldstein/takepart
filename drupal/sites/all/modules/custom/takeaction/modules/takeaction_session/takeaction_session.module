<?php
/**
 * @file
 * TakeAction Button User Session Module
 */

/**
 * Implements hook_user_login().
 */
function takeaction_session_user_login(&$edit, $account) {

  // Get the active tracking cookie.
  $active_guid = '';
  $guid_cookie = variable_get('takeaction_action_cookie_name', 'TAKEACTIONGUID');
  if (!empty($_COOKIE[$guid_cookie])) {
    $regex = '/^[0-9A-F]{8}(\-[0-9A-F]{4}){3}\-[0-9A-F]{12}$/';
    if (preg_match($regex, $_COOKIE[$guid_cookie])) {
      $active_guid = $_COOKIE[$guid_cookie];
    }
  }

  // (Re)set the cookie to make sure it matches the user's guid.
  $session_cookie = variable_get('takeaction_session_cookie_name', 'TAKEACTIONSESSION');
  $lifespan = variable_get('takeaction_session_cookie_lifespan', 60 * 60 * 24 * 30);
  $expire = empty($lifespan) ? 0 : time() + $lifespan;
  $path = variable_get('takeaction_session_cookie_path', '/');
  $domain = variable_get('takeaction_session_cookie_domain', '.takepart.com');
  $user_guid = takeaction_tracking_get_guid();
  setcookie($session_cookie, $user_guid, $expire, $path, $domain);

  // Check if the tracking cookie changed (this works because the 
  // cookie is a SESSION cookie
  if (!empty($active_guid) && $user_guid != $active_guid) {
    try {
      $api = takeaction_get_api();
      $api->reassignTrackingEvents($active_guid, $user_guid);
    }
    catch (TakeActionApiException $ex) {
      $message = 'Error reassign tracking events [@code] @body';
      watchdog('takeaction_tracking', $message, array(
        '@code' => $ex->getResponseCode(),
        '@body' => $ex->getResponseBody(),
      ));
      return;
    }
  }
}

/**
 * Implements hook_user_logout().
 */
function takeaction_session_user_logout($account) {
  // Delete the session cookie.
  $session_cookie = variable_get('takeaction_session_cookie_name', 'TAKEACTIONSESSION');
  $path = variable_get('takeaction_session_cookie_path', '/');
  $domain = variable_get('takeaction_session_cookie_domain', '.takepart.com');
  setcookie($session_cookie, FALSE, time() - (60 * 60 * 24), $path, $domain);
  // Delete the tracking cookie.
  $guid_cookie = variable_get('takeaction_action_cookie_name', 'TAKEACTIONGUID');
  $path = variable_get('takeaction_action_cookie_path', '/');
  $domain = variable_get('takeaction_action_cookie_domain', '.takepart.com');
  setcookie($guid_cookie, FALSE, time() - (60 * 60 * 24), $path, $domain);
}
