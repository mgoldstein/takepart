<?php

/**
 * Implements hook_menu().
 */
function tp_more_on_takepart_menu(){
	$items['admin/config/fresh/more_on_takepart'] = array(
		'title' => t('More on TakePart'),
		'description' => t('Set site-wide and Taboola links.'),
		'type' => MENU_NORMAL_ITEM,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('tp_more_on_takepart_settings_form'),
		'access arguments' => array('administer site configuration'),
	);
	return $items;
}


/**
 * Set the global values for the internal/external legal disclaimers.
 */
function tp_more_on_takepart_settings_form($form, &$form_state){

	$content_types = array(
		'openpublish_article',
		'feature_article',
		'campaign',
		'campaign_page',
		'openpublish_photo_gallery',
		'openpublish_video',
		'video',
		'video_playlist',
		'action',
	);

  $form['featured_stories'] = array(
    '#type' => 'fieldset',
    '#title' => t('Featured Stories'),
  );

	// autocomplete list of articles, featured articles, etc.
	$form['featured_stories']['more_on_takepart_global1'] = array(
		'#type' => 'entity_autocomplete',
		'#entity_type' => 'node',
		'#bundles' => $content_types,
		'#title' => t('Site-wide featured content #1'),
    '#required' => true,
    '#default_value' => variable_get('more_on_takepart_global1', ''),
  );
  $form['featured_stories']['more_on_takepart_global2'] = array(
    '#type' => 'entity_autocomplete',
    '#entity_type' => 'node',
    '#bundles' => $content_types,
    '#title' => t('Site-wide featured content #2'),
    '#required' => true,
		'#default_value' => variable_get('more_on_takepart_global2', ''),
	);
	$form['more_on_takepart_taboola'] = array(
		'#type' => 'textarea',
		'#title' => t('Taboola JS'),
		'#rows' => 8,
		'#default_value' => variable_get('more_on_takepart_taboola', ''),
	);

  $form['featured_videos'] = array(
    '#type' => 'fieldset',
    '#title' => t('Featured Videos'),
  );

  $form['featured_videos']['more_on_takepart_video_cta_text'] = array(
    '#type' => 'textfield',
    '#title' => t('More Videos CTA Text'),
    '#required' => TRUE,
    '#default_value' => variable_get('more_on_takepart_video_cta_text', 'Watch more videos'),
  );

  $form['featured_videos']['more_on_takepart_video_cta_link'] = array(
    '#type' => 'textfield',
    '#title' => t('More Videos CTA Link'),
    '#descripiton' => t('Enter a drupal path like ("videos" or "node/5324" or an off-site URL.'),
    '#required' => TRUE,
    '#default_value' => variable_get('more_on_takepart_video_cta_link', 'videos'),
    '#element_validate' => array('_more_on_takepart_video_cta_link_validate'),
  );

  $form['featured_videos']['video_link'] = array(
    '#markup' => l('Configure Videos', 'admin/config/media/topic_video'),
  );

	return system_settings_form($form);
}

/**
 * Custom validation function for more_on_takepart_video_cta_link.
 */
function _more_on_takepart_video_cta_link_validate($element, &$form_state, $form) {
  if (!drupal_valid_path(drupal_get_normal_path($element['#value']))) {
    form_set_error('more_on_takepart_video_cta_link', t('Make sure the link is a valid drupal path or URL.'));
  }
}

/**
 * Implements hook_block_info().
 */
function tp_more_on_takepart_block_info() {
	$blocks['more_on_takepart'] = array(
		// The name that will appear in the block list.
		'info' => t('More on TakePart links'),
		// Default setting.
		'cache' => DRUPAL_CACHE_PER_ROLE,
	);
	return $blocks;
}

/**
 * Implements hook_theme().
 */
function tp_more_on_takepart_theme() {
	return array(
		'tp_more_on_takepart' => array(
			'variables' => array(
				'article' => NULL,
				'global' => NULL,
				'taboola' => NULL,
        'promoted_video' => NULL,
			),
			'template' => 'templates/tp_more_on_takepart',
		),
    'tp_more_on_takepart_article' => array(
      'variables' => array(
        'article' => NULL,
        'global' => NULL,
        'taboola' => NULL,
      ),
      'template' => 'templates/tp_more_on_takepart_article',
    ),
		'tp_more_on_takepart_video' => array(
			'variables' => array(
        'node' => NULL,
        'cta_text' => '',
        'cta_link' => '',
			),
			'template' => 'templates/tp_more_on_takepart_video',
		),
	);
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function tp_more_on_takepart_block_view($delta = '') {
	switch ($delta) {
		case 'more_on_takepart':

		if (user_access('access content')) {

			// get node taxonomy term from the node
			$node = node_load(arg(1));

			//adding bypass fix for autoload
			if (empty($node) && arg(0) == 'autoscroll' && is_numeric(arg(2))) {
				$node = node_load((int)arg(2));
			}

			// Load the first two field_related_articles for this node
			$field_related_stories = field_get_items('node',$node,'field_related_stories');

			if( $field_related_stories[0]['nid'] ) {
				$items[] = array(
					'nid' => $field_related_stories[0]['nid'],
					'type' => 'related',
				);
			}

			if( $field_related_stories[1]['nid'] ) {
				$items[] = array(
					'nid' => $field_related_stories[1]['nid'],
					'type' => 'related',
				);
			}

			// Load the two site-wide links from variables
			$items[] = array(
				'nid' => variable_get('more_on_takepart_global1', ''),
				'type' => 'promoted',
			);
			$items[] = array(
				'nid' => variable_get('more_on_takepart_global2', ''),
				'type' => 'promoted',
			);

			// Load the Taboola JS
			$t = variable_get('more_on_takepart_taboola','');

			foreach ($items as $item) {

				$result = node_load($item['nid']);

				//ensures that if the node load comes back with nothing then go ahead and break this loop
				if (!$result) {
					break;
				}

				$promo_headline = field_get_items('node', $result, 'field_promo_headline');
				$field_promo_headline = $promo_headline[0]['value'];

				// Select thumbnail field
				switch($result->type) {
					case 'action':
						$field = 'field_action_main_image';
						break;
					default:
						$field = 'field_thumbnail';
						break;
				}

        $field_sponsored = array('#markup' => '');
        if ($field_item = field_get_items('node', $result, 'field_sponsored')) {
          $field_sponsored = array(
            '#markup' => t('Promoted'),
            '#prefix' => '<div class="promoted sponsor-' . $field_item[0]['tid'] . '">',
            '#suffix' => '</div>',
          );
        }

				// set the icon for photo galleries/videos
				switch($result->type) {
					case 'openpublish_photo_gallery';
						$type = 'i-photo-camera';
						break;
					case 'video';
					case 'video_playlist';
					case 'openpublish_video';
						$type = 'i-video-camera';
						break;
					case 'campaign_page';
						// Replace the campaign_page with its parent promo_headline and thumbnail if none exists
						// Get the parent campaign
						$field_campaign_reference = field_get_items('node' ,$result, 'field_campaign_reference');
						$field_campaign_reference = $field_campaign_reference[0]['target_id'];
						$campaign_node = node_load($field_campaign_reference);
						if( empty($field_promo_headline) ) {
							$campaign_promo_headline = field_get_items('node' ,$campaign_node, 'field_promo_headline');
							$field_promo_headline = $campaign_promo_headline[0]['value'];
						}

						if( !field_get_items('node',$result,'field_thumbnail') ) {
							$field_thumbnail = field_get_items('node' ,$campaign_node, 'field_thumbnail');
							$result->field_thumbnail[$node->language] = $field_thumbnail;
						}
						break;
					default:
						$type = '';
						break;
				}

				$field_thumbnail = field_get_items('node', $result, $field);
				$field_thumbnail = file_load($field_thumbnail[0]['fid']);

				// Add to the array names after this type
				${$item['type']}[] = theme('tp_more_on_takepart_article', array(
					'result' => array(
						'title' => (!empty($field_promo_headline)) ? $field_promo_headline : $result->title,
						'type' => $type,
						'promo_type' => 'more_on_takepart_'.$item['type'],
						'thumbnail' => theme('image_style', array(
							'style_name' => 'homepage_featured_image',
							'path' => $field_thumbnail->uri,
							'alt' => $field_promo_headline,
							'title' => $field_promo_headline,
						)),
				'sponsored' => $field_sponsored,
          ),
				));
			}

      // load the promoted video for this node and theme the video block;
      // otherwise, set the more on takepart block template variable to false
      $featured_video_node = tp_videos_get_topic_promoted_video($node);
      $promoted_video = false;
      if ($featured_video_node) {
        $promoted_video = theme('tp_more_on_takepart_video', array(
          'node' => $featured_video_node,
          'cta_link' => check_plain(url(variable_get('more_on_takepart_video_cta_link', 'videos'))),
          'cta_text' => variable_get('more_on_takepart_video_cta_text', 'Watch more videos'),
        ));
      }

			// Pass data through theme function.
			$block['content'] = theme('tp_more_on_takepart', array(
				'related' => $related,
				'promoted' => $promoted,
				'taboola' => $t,
        'promoted_video' => $promoted_video,
			));
		}
		break;
	}
	return $block;
}

/**
 * Preprocess for template values.
 */
function tp_more_on_takepart_preprocess_tp_more_on_takepart_video(&$variables) {
  foreach (field_get_items('node', $variables['node'], 'field_video') as $item) {
    $variables['featured_video_player'] = field_view_value('node', $variables['node'], 'field_video', $item, 'default');
  }

  $variables['featured_video_title'] = array(
    '#theme' => 'link',
    '#text' => $variables['node']->title,
    '#path' => check_plain(url('node/' . $variables['node']->nid)),
    '#options' => array(
      'attributes' => array(
        'class' => array('tp-more__video-title-link'),
      ),
      'html' => false,
    ),
  );

  $variables['sponsored'] = array('#markup' => '');
  if ($item = field_get_items('node', $variables['node'], 'field_sponsored')) {
    $variables['sponsored'] = array(
      '#markup' => t('Promoted'),
      '#prefix' => '<div class="promoted sponsor-' . $item[0]['tid'] . '">',
      '#suffix' => '</div>',
    );
  }

  $variables['video_link'] = array(
    '#theme' => 'link',
    '#text' => $variables['cta_text'],
    '#path' => $variables['cta_link'],
    '#options' => array(
      'attributes' => array(
        'class' => array('tp-more__video-cta-link'),
      ),
      'html' => false,
    ),
  );
}
