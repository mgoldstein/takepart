<?php

function article_support_add_next_article($node, &$variables) {

  // Get the first article from a list of articles created before this one
  // sorted from newest to oldest
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title'))
    ->condition('created', $node->created, '<')
    ->orderBy('created', 'DESC')
    ->orderBy('nid', 'DESC')
    ->range(0, 1);

  // Fetch the previous article.
  $previous = $query->execute()->fetchAssoc();

  if ($previous !== FALSE) {

    // TODO: make use of a Link view helper (if and when they are implemented)
    $link = new StdClass();
    $link->title = $previous['title'];
    $link->href = url('node/' . $previous['nid']);

    // Add the link to the 'next' article to the content available to the
    // article template.
    $variables['next_article'] = $link;
  }
}

/**
 * Implements hook_node_view().
 */
function article_support_node_view($node, $view_mode, $langcode) {

  if ($node->type === 'article' && $view_mode === 'full') {

    // Additional variables to make available to the template.
    $variables = array();

    article_support_add_next_article($node, $variables);

    // Pass the additional variables through to the preprocessor.
    $node->content['#additional_variables'] = $variables;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function article_support_preprocess_node(&$variables) {

  // Transfer all additional variables added when the view of the article was
  // built to the template.
  foreach ($variables['elements']['#additional_variables'] as $key => $value) {
    $variables[$key] = $value;
  }
}
